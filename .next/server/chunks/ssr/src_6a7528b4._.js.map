{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/utils/formatters.ts"],"sourcesContent":["/**\n * Format a number as currency\n * @param value The number to format\n * @param locale The locale to use for formatting (default: 'en-US')\n * @param currency The currency code (default: 'LKR')\n * @returns Formatted currency string\n */\nexport const formatCurrency = (\n  value: number | string,\n  locale: string = 'en-US',\n  currency: string = 'LKR'\n): string => {\n  // Convert to number if it's a string\n  const numericValue = typeof value === 'string' ? parseFloat(value) : value;\n\n  // Handle NaN values\n  if (isNaN(numericValue)) {\n    console.warn('Invalid value for currency formatting:', value);\n    return 'Rs. 0.00';\n  }\n\n  // Use the Sri Lankan Rupee symbol (Rs) instead of LKR text\n  return 'Rs. ' + new Intl.NumberFormat(locale, {\n    style: 'decimal',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(numericValue);\n};\n\n/**\n * Format a date string\n * @param dateString The date string to format\n * @param locale The locale to use for formatting (default: 'en-US')\n * @returns Formatted date string\n */\nexport const formatDate = (\n  dateString: string,\n  locale: string = 'en-US'\n): string => {\n  const date = new Date(dateString);\n  return new Intl.DateTimeFormat(locale, {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  }).format(date);\n};\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;AACM,MAAM,iBAAiB,CAC5B,OACA,SAAiB,OAAO,EACxB,WAAmB,KAAK;IAExB,qCAAqC;IACrC,MAAM,eAAe,OAAO,UAAU,WAAW,WAAW,SAAS;IAErE,oBAAoB;IACpB,IAAI,MAAM,eAAe;QACvB,QAAQ,IAAI,CAAC,0CAA0C;QACvD,OAAO;IACT;IAEA,2DAA2D;IAC3D,OAAO,SAAS,IAAI,KAAK,YAAY,CAAC,QAAQ;QAC5C,OAAO;QACP,uBAAuB;QACvB,uBAAuB;IACzB,GAAG,MAAM,CAAC;AACZ;AAQO,MAAM,aAAa,CACxB,YACA,SAAiB,OAAO;IAExB,MAAM,OAAO,IAAI,KAAK;IACtB,OAAO,IAAI,KAAK,cAAc,CAAC,QAAQ;QACrC,MAAM;QACN,OAAO;QACP,KAAK;QACL,MAAM;QACN,QAAQ;QACR,QAAQ;IACV,GAAG,MAAM,CAAC;AACZ","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/components/LKRIcon.tsx"],"sourcesContent":["import React from 'react';\n\ninterface LKRIconProps {\n  className?: string;\n}\n\nconst LKRIcon: React.FC<LKRIconProps> = ({ className = 'h-5 w-5 text-gray-400' }) => {\n  return (\n    <div className={`flex items-center justify-center font-semibold ${className}`}>\n      Rs.\n    </div>\n  );\n};\n\nexport default LKRIcon;\n"],"names":[],"mappings":";;;;;AAMA,MAAM,UAAkC,CAAC,EAAE,YAAY,uBAAuB,EAAE;IAC9E,qBACE,8OAAC;QAAI,WAAW,CAAC,+CAA+C,EAAE,WAAW;kBAAE;;;;;;AAInF;uCAEe","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/app/DashView/custom-orders/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Image from 'next/image';\nimport {\n  ArrowLeft,\n  Calendar,\n  User,\n  Phone,\n  Mail,\n  Tag,\n  Building,\n  Clock,\n  CheckCircle,\n  AlertCircle,\n  X,\n  Printer,\n  RefreshCw\n} from 'lucide-react';\nimport { formatCurrency } from '@/utils/formatters';\nimport LKRIcon from '@/components/LKRIcon';\n\n// Define types\ninterface CustomOrderDetail {\n  order_id: number;\n  order_reference: string;\n  customer_name: string;\n  customer_phone: string | null;\n  customer_email: string | null;\n  order_date: string;\n  estimated_completion_date: string;\n  order_status: string;\n  payment_status: string;\n  category_id: number;\n  category_name: string;\n  supplier_id: number | null;\n  supplier_name: string | null;\n  description: string | null;\n  special_requirements: string | null;\n  estimated_amount: number;\n  advance_amount: number;\n  balance_amount: number;\n  branch_id: number;\n  branch_name: string;\n  created_by_id: number;\n  created_by_first_name: string;\n  created_by_last_name: string;\n  images?: string;\n  imageDetails?: {\n    image_id: number;\n    order_id: number;\n    image_path: string;\n    image_type: string;\n    upload_date: string;\n  }[];\n  isFromOtherBranch?: boolean; // Added for branch visibility feature\n}\n\nconst CustomOrderDetailPage = ({ params }: { params: { id: string } }) => {\n  const router = useRouter();\n  const orderId = params.id;\n\n  // State\n  const [order, setOrder] = useState<CustomOrderDetail | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n  const [refreshing, setRefreshing] = useState(false);\n  const [lastRefreshed, setLastRefreshed] = useState<Date>(new Date());\n\n  // State for user role and branch\n  const [userRole, setUserRole] = useState<string>('');\n  const [userBranchId, setUserBranchId] = useState<number | null>(null);\n\n  // Function to fetch order details\n  const fetchOrderDetails = async (isManualRefresh = false) => {\n    if (isManualRefresh) {\n      setRefreshing(true);\n    } else {\n      setLoading(true);\n    }\n\n    try {\n      // Add a timestamp to prevent caching\n      const timestamp = new Date().getTime();\n\n      // Construct URL with query parameters\n      let url = `http://localhost:3002/custom-orders/${orderId}`;\n      const params = new URLSearchParams();\n\n      // Always send the role parameter\n      params.append('role', userRole || '');\n\n      // Always send branch_id if available (for checking if order is from another branch)\n      if (userBranchId) {\n        params.append('branch_id', userBranchId.toString());\n      }\n\n      // Add timestamp to prevent caching\n      params.append('t', timestamp.toString());\n\n      // Add the parameters to the URL\n      url += `?${params.toString()}`;\n\n      console.log('Fetching custom order details from:', url);\n      const response = await fetch(url);\n\n      if (response.status === 403) {\n        throw new Error('You do not have permission to view this order');\n      }\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch order details: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setLastRefreshed(new Date());\n      console.log('Raw order data received:', data);\n\n      // Check for images in the response\n      console.log('Images in response:', data.images);\n      console.log('ImageDetails in response:', data.imageDetails);\n\n      // If we have images as a string but no imageDetails array, create one\n      if (data.images && (!data.imageDetails || data.imageDetails.length === 0)) {\n        const imagesList = data.images.split(',').filter((img: string) => img.trim());\n        console.log('Creating imageDetails from images string:', imagesList);\n\n        if (imagesList.length > 0) {\n          // Create imageDetails array from images string\n          data.imageDetails = imagesList.map((imagePath: string, index: number) => ({\n            image_id: index + 1,\n            order_id: data.order_id,\n            image_path: imagePath,\n            image_type: 'Reference',\n            upload_date: data.order_date\n          }));\n          console.log('Created imageDetails:', data.imageDetails);\n        }\n      }\n\n      setOrder(data);\n\n      // Set the first image as selected if available\n      if (data.imageDetails && data.imageDetails.length > 0) {\n        setSelectedImage(data.imageDetails[0].image_path);\n        console.log('Selected image:', data.imageDetails[0].image_path);\n      } else if (data.images) {\n        const imagesList = data.images.split(',').filter((img: string) => img.trim());\n        if (imagesList.length > 0) {\n          setSelectedImage(imagesList[0]);\n          console.log('Selected image from string:', imagesList[0]);\n        }\n      }\n    } catch (err) {\n      console.error('Error fetching order details:', err);\n      setError(err instanceof Error ? err.message : 'An error occurred while fetching order details');\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  // Get user role and branch ID from localStorage\n  useEffect(() => {\n    // Get user info from localStorage\n    const role = localStorage.getItem('role');\n    const branchId = localStorage.getItem('branchId');\n    console.log('Retrieved from localStorage - Role:', role, 'Branch ID:', branchId);\n\n    // Set user role (convert to lowercase for consistency)\n    const normalizedRole = role === 'Admin' ? 'admin' : role?.toLowerCase() || '';\n    setUserRole(normalizedRole);\n\n    // Set branch ID\n    const numericBranchId = branchId ? Number(branchId) : null;\n    setUserBranchId(numericBranchId);\n  }, []);\n\n  // Set up auto-refresh and initial fetch\n  useEffect(() => {\n    if (orderId && userRole) {\n      fetchOrderDetails();\n\n      // Set up auto-refresh every 30 seconds\n      const refreshInterval = setInterval(() => {\n        console.log('Auto-refreshing order details...');\n        fetchOrderDetails();\n      }, 30000); // 30 seconds\n\n      // Clean up interval on unmount\n      return () => clearInterval(refreshInterval);\n    }\n  }, [orderId, userRole, userBranchId]);\n\n  // Format date\n  const formatDate = (dateString: string | null) => {\n    if (!dateString) return 'Not set';\n\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Format date with time - Kept for future use\n  // const formatDateTime = (dateString: string | null) => {\n  //   if (!dateString) return 'Not set';\n  //\n  //   const date = new Date(dateString);\n  //   return date.toLocaleDateString('en-US', {\n  //     year: 'numeric',\n  //     month: 'short',\n  //     day: 'numeric',\n  //     hour: '2-digit',\n  //     minute: '2-digit'\n  //   });\n  // };\n\n  // Get status badge color\n  const getStatusBadgeColor = (status: string) => {\n    switch (status) {\n      case 'Completed':\n        return 'bg-green-100 text-green-800';\n      case 'In Progress':\n        return 'bg-blue-100 text-blue-800';\n      case 'Pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'Cancelled':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Get payment status badge color - Kept for future use\n  // const getPaymentStatusBadgeColor = (status: string) => {\n  //   switch (status) {\n  //     case 'Fully Paid':\n  //       return 'bg-green-100 text-green-800';\n  //     case 'Partially Paid':\n  //       return 'bg-yellow-100 text-yellow-800';\n  //     case 'Unpaid':\n  //       return 'bg-red-100 text-red-800';\n  //     default:\n  //       return 'bg-gray-100 text-gray-800';\n  //   }\n  // };\n\n  // Get status icon\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'Completed':\n        return <CheckCircle size={16} className=\"mr-1\" />;\n      case 'In Progress':\n        return <Clock size={16} className=\"mr-1\" />;\n      case 'Pending':\n        return <AlertCircle size={16} className=\"mr-1\" />;\n      case 'Cancelled':\n        return <X size={16} className=\"mr-1\" />;\n      default:\n        return null;\n    }\n  };\n\n  // Handle back button\n  const handleBack = () => {\n    router.push('/DashView/custom-orders');\n  };\n\n  // Handle print\n  const handlePrint = () => {\n    window.print();\n  };\n\n  // Handle image selection\n  const handleImageSelect = (imagePath: string) => {\n    setSelectedImage(imagePath);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6 flex justify-center items-center min-h-[60vh]\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-yellow-500\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\">\n          <span className=\"block sm:inline\">{error}</span>\n          <button\n            className=\"absolute top-0 bottom-0 right-0 px-4 py-3\"\n            onClick={() => setError(null)}\n          >\n            <X size={18} />\n          </button>\n        </div>\n        <button\n          onClick={() => fetchOrderDetails()}\n          className=\"px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-600\"\n        >\n          Try Again\n        </button>\n      </div>\n    );\n  }\n\n  if (!order) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded relative mb-4\">\n          <span className=\"block sm:inline\">Order not found</span>\n        </div>\n        <button\n          onClick={() => router.push('/DashView/custom-orders')}\n          className=\"px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-600\"\n        >\n          Back to Orders\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <div className=\"flex items-center\">\n          <button\n            onClick={handleBack}\n            className=\"mr-4 p-2 rounded-full hover:bg-gray-100\"\n          >\n            <ArrowLeft size={20} />\n          </button>\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-800\">Order Details</h1>\n            <p className=\"text-sm text-gray-500\">\n              Reference: <span className=\"font-medium\">{order.order_reference}</span>\n            </p>\n            {order.isFromOtherBranch && (\n              <div className=\"mt-1 flex items-center text-blue-600\">\n                <Building className=\"h-4 w-4 mr-1\" />\n                <span className=\"text-sm font-medium\">This order is from {order.branch_name}</span>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"flex space-x-2\">\n          <button\n            onClick={handlePrint}\n            className=\"flex items-center px-3 py-2 bg-gray-100 hover:bg-gray-200 rounded-md text-gray-700\"\n          >\n            <Printer size={16} className=\"mr-1\" />\n            Print\n          </button>\n          <button\n            onClick={() => fetchOrderDetails(true)}\n            className=\"flex items-center px-3 py-2 bg-yellow-500 hover:bg-yellow-600 rounded-md text-white\"\n            disabled={refreshing}\n          >\n            {refreshing ? (\n              <>\n                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-1\"></div>\n                Refreshing...\n              </>\n            ) : (\n              <>\n                <RefreshCw size={16} className=\"mr-1\" />\n                Refresh\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n\n      {/* Status Badge */}\n      <div className=\"mb-6\">\n        <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${getStatusBadgeColor(order.order_status)}`}>\n          {getStatusIcon(order.order_status)}\n          {order.order_status}\n        </span>\n        <span className=\"text-xs text-gray-500 ml-4\">\n          Last updated: {lastRefreshed.toLocaleTimeString()}\n        </span>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Left column - Customer and Order Info */}\n        <div className=\"space-y-6\">\n          {/* Customer Information */}\n          <div className=\"bg-gray-50 p-4 rounded-md\">\n            <h2 className=\"text-lg font-semibold mb-4\">Customer Information</h2>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-start\">\n                <User className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                <div>\n                  <p className=\"text-sm font-medium text-gray-500\">Name</p>\n                  <p className=\"text-sm text-gray-900\">{order.customer_name}</p>\n                </div>\n              </div>\n              {order.customer_phone && (\n                <div className=\"flex items-start\">\n                  <Phone className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Phone</p>\n                    <p className=\"text-sm text-gray-900\">{order.customer_phone}</p>\n                  </div>\n                </div>\n              )}\n              {order.customer_email && (\n                <div className=\"flex items-start\">\n                  <Mail className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Email</p>\n                    <p className=\"text-sm text-gray-900\">{order.customer_email}</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Order Information */}\n          <div className=\"bg-gray-50 p-4 rounded-md\">\n            <h2 className=\"text-lg font-semibold mb-4\">Order Information</h2>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-start\">\n                <Calendar className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                <div>\n                  <p className=\"text-sm font-medium text-gray-500\">Due Date</p>\n                  <p className=\"text-sm text-gray-900\">{formatDate(order.estimated_completion_date)}</p>\n                </div>\n              </div>\n              {order.category_name && (\n                <div className=\"flex items-start\">\n                  <Tag className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Category</p>\n                    <p className=\"text-sm text-gray-900\">{order.category_name}</p>\n                  </div>\n                </div>\n              )}\n              {order.supplier_name && (\n                <div className=\"flex items-start\">\n                  <Building className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Supplier</p>\n                    <p className=\"text-sm text-gray-900\">{order.supplier_name}</p>\n                  </div>\n                </div>\n              )}\n              <div className=\"flex items-start\">\n                <Building className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                <div>\n                  <p className=\"text-sm font-medium text-gray-500\">Branch</p>\n                  <p className=\"text-sm text-gray-900\">{order.branch_name}</p>\n                </div>\n              </div>\n              <div className=\"flex items-start\">\n                <User className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                <div>\n                  <p className=\"text-sm font-medium text-gray-500\">Created By</p>\n                  <p className=\"text-sm text-gray-900\">{`${order.created_by_first_name} ${order.created_by_last_name}`}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Payment Information */}\n          <div className=\"bg-gray-50 p-4 rounded-md\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-lg font-semibold\">Payment Information</h2>\n              <button\n                onClick={() => fetchOrderDetails(true)}\n                className=\"flex items-center text-sm px-2 py-1 bg-gray-200 hover:bg-gray-300 rounded-md transition-colors\"\n                disabled={refreshing}\n              >\n                {refreshing ? (\n                  <>\n                    <div className=\"w-4 h-4 border-2 border-gray-600 border-t-transparent rounded-full animate-spin mr-1\"></div>\n                    Refreshing...\n                  </>\n                ) : (\n                  <>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                    </svg>\n                    Refresh\n                  </>\n                )}\n              </button>\n            </div>\n            <div className=\"text-xs text-gray-500 mb-3\">\n              Last updated: {lastRefreshed.toLocaleTimeString()}\n            </div>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-start\">\n                <LKRIcon className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                <div>\n                  <p className=\"text-sm font-medium text-gray-500\">Total Amount</p>\n                  <p className=\"text-sm font-semibold text-gray-900\">{formatCurrency(order.estimated_amount)}</p>\n                </div>\n              </div>\n              <div className=\"flex items-start\">\n                <LKRIcon className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                <div>\n                  <p className=\"text-sm font-medium text-gray-500\">Advance Payment</p>\n                  <p className=\"text-sm font-semibold text-green-600\">{formatCurrency(order.advance_amount)}</p>\n                </div>\n              </div>\n              <div className=\"flex items-start\">\n                <LKRIcon className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                <div>\n                  <p className=\"text-sm font-medium text-gray-500\">Balance</p>\n                  <p className=\"text-sm font-semibold text-red-600\">{formatCurrency(order.balance_amount)}</p>\n                </div>\n              </div>\n\n              {/* Payment Status */}\n              <div className=\"flex items-start\">\n                <div className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5 flex items-center justify-center\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-500\">Payment Status</p>\n                  <div className=\"mt-1\">\n                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                      order.balance_amount <= 0\n                        ? 'bg-green-100 text-green-800'\n                        : order.advance_amount > 0\n                          ? 'bg-yellow-100 text-yellow-800'\n                          : 'bg-red-100 text-red-800'\n                    }`}>\n                      {order.balance_amount <= 0\n                        ? 'Fully Paid'\n                        : order.advance_amount > 0\n                          ? 'Partially Paid'\n                          : 'Unpaid'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Middle and Right columns - Images and Details */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          {/* Images Gallery */}\n          {order.imageDetails && order.imageDetails.length > 0 && (\n            <div className=\"bg-gray-50 p-4 rounded-md\">\n              <h2 className=\"text-lg font-semibold mb-4\">Design Images</h2>\n\n              {/* Main selected image */}\n              <div className=\"mb-4 flex justify-center\">\n                <div className=\"relative w-full max-w-md h-64 bg-gray-200 rounded-md overflow-hidden\">\n                  {selectedImage && (\n                    <Image\n                      src={`http://localhost:3002/uploads/${selectedImage}`}\n                      alt=\"Selected design\"\n                      fill\n                      style={{ objectFit: 'contain' }}\n                    />\n                  )}\n                </div>\n              </div>\n\n              {/* Thumbnails */}\n              <div className=\"grid grid-cols-4 gap-2\">\n                {order.imageDetails.map((image) => (\n                  <div\n                    key={image.image_id}\n                    className={`relative h-20 bg-gray-200 rounded-md overflow-hidden cursor-pointer ${\n                      selectedImage === image.image_path ? 'ring-2 ring-yellow-500' : ''\n                    }`}\n                    onClick={() => handleImageSelect(image.image_path)}\n                  >\n                    <Image\n                      src={`http://localhost:3002/uploads/${image.image_path}`}\n                      alt=\"Design thumbnail\"\n                      fill\n                      style={{ objectFit: 'cover' }}\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Order Details */}\n          <div className=\"bg-gray-50 p-4 rounded-md\">\n            <h2 className=\"text-lg font-semibold mb-4\">Order Details</h2>\n\n            {order.description && (\n              <div className=\"mb-4\">\n                <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Description</h3>\n                <p className=\"text-sm text-gray-600 bg-white p-3 rounded-md border border-gray-200\">\n                  {order.description}\n                </p>\n              </div>\n            )}\n\n            {order.special_requirements && (\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Special Requirements</h3>\n                <p className=\"text-sm text-gray-600 bg-white p-3 rounded-md border border-gray-200\">\n                  {order.special_requirements}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CustomOrderDetailPage;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1438, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}