{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/utils/formatters.ts"],"sourcesContent":["/**\n * Format a number as currency\n * @param value The number to format\n * @param locale The locale to use for formatting (default: 'en-US')\n * @param currency The currency code (default: 'LKR')\n * @returns Formatted currency string\n */\nexport const formatCurrency = (\n  value: number | string,\n  locale: string = 'en-US',\n  currency: string = 'LKR'\n): string => {\n  // Convert to number if it's a string\n  const numericValue = typeof value === 'string' ? parseFloat(value) : value;\n\n  // Handle NaN values\n  if (isNaN(numericValue)) {\n    console.warn('Invalid value for currency formatting:', value);\n    return 'Rs. 0.00';\n  }\n\n  // Use the Sri Lankan Rupee symbol (Rs) instead of LKR text\n  return 'Rs. ' + new Intl.NumberFormat(locale, {\n    style: 'decimal',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(numericValue);\n};\n\n/**\n * Format a date string\n * @param dateString The date string to format\n * @param locale The locale to use for formatting (default: 'en-US')\n * @returns Formatted date string\n */\nexport const formatDate = (\n  dateString: string,\n  locale: string = 'en-US'\n): string => {\n  const date = new Date(dateString);\n  return new Intl.DateTimeFormat(locale, {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  }).format(date);\n};\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;AACM,MAAM,iBAAiB,CAC5B,OACA,SAAiB,OAAO,EACxB,WAAmB,KAAK;IAExB,qCAAqC;IACrC,MAAM,eAAe,OAAO,UAAU,WAAW,WAAW,SAAS;IAErE,oBAAoB;IACpB,IAAI,MAAM,eAAe;QACvB,QAAQ,IAAI,CAAC,0CAA0C;QACvD,OAAO;IACT;IAEA,2DAA2D;IAC3D,OAAO,SAAS,IAAI,KAAK,YAAY,CAAC,QAAQ;QAC5C,OAAO;QACP,uBAAuB;QACvB,uBAAuB;IACzB,GAAG,MAAM,CAAC;AACZ;AAQO,MAAM,aAAa,CACxB,YACA,SAAiB,OAAO;IAExB,MAAM,OAAO,IAAI,KAAK;IACtB,OAAO,IAAI,KAAK,cAAc,CAAC,QAAQ;QACrC,MAAM;QACN,OAAO;QACP,KAAK;QACL,MAAM;QACN,QAAQ;QACR,QAAQ;IACV,GAAG,MAAM,CAAC;AACZ","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/components/LKRIcon.tsx"],"sourcesContent":["import React from 'react';\n\ninterface LKRIconProps {\n  className?: string;\n}\n\nconst LKRIcon: React.FC<LKRIconProps> = ({ className = 'h-5 w-5 text-gray-400' }) => {\n  return (\n    <div className={`flex items-center justify-center font-semibold ${className}`}>\n      Rs.\n    </div>\n  );\n};\n\nexport default LKRIcon;\n"],"names":[],"mappings":";;;;;AAMA,MAAM,UAAkC,CAAC,EAAE,YAAY,uBAAuB,EAAE;IAC9E,qBACE,8OAAC;QAAI,WAAW,CAAC,+CAA+C,EAAE,WAAW;kBAAE;;;;;;AAInF;uCAEe","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/app/DashView/custom-orders/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Image from 'next/image';\nimport {\n  ArrowLeft,\n  Calendar,\n  User,\n  Phone,\n  Mail,\n  Tag,\n  Building,\n  Clock,\n  CheckCircle,\n  AlertCircle,\n  Truck,\n  X,\n  Printer,\n  Download\n} from 'lucide-react';\nimport { formatCurrency } from '@/utils/formatters';\nimport LKRIcon from '@/components/LKRIcon';\n\n// Define types\ninterface CustomOrderDetail {\n  order_id: number;\n  order_reference: string;\n  customer_name: string;\n  customer_phone: string | null;\n  customer_email: string | null;\n  order_date: string;\n  estimated_completion_date: string | null;\n  estimated_amount: number;\n  advance_amount: number;\n  balance_amount: number;\n  order_status: 'Pending' | 'In Progress' | 'Completed' | 'Delivered' | 'Cancelled';\n  payment_status: 'Not Paid' | 'Partially Paid' | 'Fully Paid';\n  category_name: string | null;\n  category_id: number | null;\n  supplier_id: number | null;\n  supplier_name: string | null;\n  description: string | null;\n  special_requirements: string | null;\n  created_by_first_name: string;\n  created_by_last_name: string;\n  created_by: number;\n  branch_name: string;\n  branch_id: number;\n  images: string | null;\n  payment_count: number;\n  materials: OrderMaterial[];\n  payments: OrderPayment[];\n  imageDetails: OrderImage[];\n}\n\ninterface OrderMaterial {\n  material_entry_id: number;\n  order_id: number;\n  material_name: string;\n  quantity: number;\n  unit: string;\n  cost_per_unit: number | null;\n  total_cost: number | null;\n  supplier_id: number | null;\n}\n\ninterface OrderPayment {\n  payment_id: number;\n  order_id: number;\n  payment_date: string;\n  payment_amount: number;\n  payment_method: string;\n  payment_reference: string | null;\n  notes: string | null;\n}\n\ninterface OrderImage {\n  image_id: number;\n  order_id: number;\n  image_path: string;\n  image_type: 'Reference' | 'Design' | 'Progress' | 'Final';\n  upload_date: string;\n}\n\nconst CustomOrderDetailPage = ({ params }: { params: { id: string } }) => {\n  const router = useRouter();\n  const orderId = params.id;\n\n  // State\n  const [order, setOrder] = useState<CustomOrderDetail | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n\n  // Fetch order details\n  useEffect(() => {\n    const fetchOrderDetails = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`http://localhost:3002/custom-orders/${orderId}`);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch order details: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('Raw order data received:', data);\n\n        // Check for images in the response\n        console.log('Images in response:', data.images);\n        console.log('ImageDetails in response:', data.imageDetails);\n\n        // If we have images as a string but no imageDetails array, create one\n        if (data.images && (!data.imageDetails || data.imageDetails.length === 0)) {\n          const imagesList = data.images.split(',').filter((img: string) => img.trim());\n          console.log('Creating imageDetails from images string:', imagesList);\n\n          if (imagesList.length > 0) {\n            // Create imageDetails array from images string\n            data.imageDetails = imagesList.map((imagePath: string, index: number) => ({\n              image_id: index + 1,\n              order_id: data.order_id,\n              image_path: imagePath,\n              image_type: 'Reference',\n              upload_date: data.order_date\n            }));\n            console.log('Created imageDetails:', data.imageDetails);\n          }\n        }\n\n        setOrder(data);\n\n        // Set the first image as selected if available\n        if (data.imageDetails && data.imageDetails.length > 0) {\n          setSelectedImage(data.imageDetails[0].image_path);\n          console.log('Selected image:', data.imageDetails[0].image_path);\n        } else if (data.images) {\n          const imagesList = data.images.split(',').filter((img: string) => img.trim());\n          if (imagesList.length > 0) {\n            setSelectedImage(imagesList[0]);\n            console.log('Selected image from string:', imagesList[0]);\n          }\n        }\n      } catch (err) {\n        console.error('Error fetching order details:', err);\n        setError(err instanceof Error ? err.message : 'An error occurred while fetching order details');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (orderId) {\n      fetchOrderDetails();\n    }\n  }, [orderId]);\n\n  // Format date\n  const formatDate = (dateString: string | null) => {\n    if (!dateString) return 'Not set';\n\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Format date with time\n  const formatDateTime = (dateString: string | null) => {\n    if (!dateString) return 'Not set';\n\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Get status badge color\n  const getStatusBadgeColor = (status: string) => {\n    switch (status) {\n      case 'Completed':\n        return 'bg-green-100 text-green-800';\n      case 'In Progress':\n        return 'bg-blue-100 text-blue-800';\n      case 'Delivered':\n        return 'bg-purple-100 text-purple-800';\n      case 'Cancelled':\n        return 'bg-red-100 text-red-800';\n      case 'Pending':\n      default:\n        return 'bg-yellow-100 text-yellow-800';\n    }\n  };\n\n  // Get payment status badge color\n  const getPaymentStatusBadgeColor = (status: string) => {\n    switch (status) {\n      case 'Fully Paid':\n        return 'bg-green-100 text-green-800';\n      case 'Partially Paid':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'Not Paid':\n      default:\n        return 'bg-red-100 text-red-800';\n    }\n  };\n\n  // Get status icon\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'Completed':\n        return <CheckCircle size={16} className=\"mr-1\" />;\n      case 'In Progress':\n        return <Clock size={16} className=\"mr-1\" />;\n      case 'Delivered':\n        return <Truck size={16} className=\"mr-1\" />;\n      case 'Cancelled':\n        return <X size={16} className=\"mr-1\" />;\n      case 'Pending':\n      default:\n        return <AlertCircle size={16} className=\"mr-1\" />;\n    }\n  };\n\n  // Handle back button\n  const handleBack = () => {\n    router.push('/DashView/custom-orders');\n  };\n\n  // Handle print\n  const handlePrint = () => {\n    window.print();\n  };\n\n  // Handle image selection\n  const handleImageSelect = (imagePath: string) => {\n    setSelectedImage(imagePath);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6 flex justify-center items-center min-h-[60vh]\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-yellow-500\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\">\n          <span className=\"block sm:inline\">{error}</span>\n        </div>\n        <button\n          onClick={handleBack}\n          className=\"flex items-center text-blue-600 hover:text-blue-800\"\n        >\n          <ArrowLeft size={18} className=\"mr-1\" />\n          Back to Custom Orders\n        </button>\n      </div>\n    );\n  }\n\n  if (!order) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded relative mb-4\">\n          <span className=\"block sm:inline\">Order not found</span>\n        </div>\n        <button\n          onClick={handleBack}\n          className=\"flex items-center text-blue-600 hover:text-blue-800\"\n        >\n          <ArrowLeft size={18} className=\"mr-1\" />\n          Back to Custom Orders\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 max-w-6xl mx-auto\">\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-6\">\n          <button\n            onClick={handleBack}\n            className=\"flex items-center text-blue-600 hover:text-blue-800\"\n          >\n            <ArrowLeft size={18} className=\"mr-1\" />\n            Back to Custom Orders\n          </button>\n\n          <div className=\"flex gap-2\">\n            <button\n              className=\"bg-white p-2 rounded-md border border-gray-300\"\n              onClick={handlePrint}\n            >\n              <Printer size={20} className=\"text-gray-700\" />\n            </button>\n            <button className=\"bg-white p-2 rounded-md border border-gray-300\">\n              <Download size={20} className=\"text-gray-700\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Order Reference and Status */}\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-6\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-800\">{order.order_reference}</h1>\n            <p className=\"text-gray-500\">Created on {formatDateTime(order.order_date)}</p>\n          </div>\n          <div className=\"flex space-x-2 mt-2 md:mt-0\">\n            <span className={`px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full ${getStatusBadgeColor(order.order_status)}`}>\n              <div className=\"flex items-center\">\n                {getStatusIcon(order.order_status)}\n                {order.order_status}\n              </div>\n            </span>\n            <span className={`px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full ${getPaymentStatusBadgeColor(order.payment_status)}`}>\n              {order.payment_status}\n            </span>\n          </div>\n        </div>\n\n        {/* Main content */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Left column - Customer and Order Info */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            {/* Customer Information */}\n            <div className=\"bg-gray-50 p-4 rounded-md\">\n              <h2 className=\"text-lg font-semibold mb-4\">Customer Information</h2>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-start\">\n                  <User className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Name</p>\n                    <p className=\"text-sm text-gray-900\">{order.customer_name}</p>\n                  </div>\n                </div>\n                {order.customer_phone && (\n                  <div className=\"flex items-start\">\n                    <Phone className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-500\">Phone</p>\n                      <p className=\"text-sm text-gray-900\">{order.customer_phone}</p>\n                    </div>\n                  </div>\n                )}\n                {order.customer_email && (\n                  <div className=\"flex items-start\">\n                    <Mail className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-500\">Email</p>\n                      <p className=\"text-sm text-gray-900\">{order.customer_email}</p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Order Information */}\n            <div className=\"bg-gray-50 p-4 rounded-md\">\n              <h2 className=\"text-lg font-semibold mb-4\">Order Information</h2>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-start\">\n                  <Calendar className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Due Date</p>\n                    <p className=\"text-sm text-gray-900\">{formatDate(order.estimated_completion_date)}</p>\n                  </div>\n                </div>\n                {order.category_name && (\n                  <div className=\"flex items-start\">\n                    <Tag className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-500\">Category</p>\n                      <p className=\"text-sm text-gray-900\">{order.category_name}</p>\n                    </div>\n                  </div>\n                )}\n                {order.supplier_name && (\n                  <div className=\"flex items-start\">\n                    <Building className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-500\">Supplier</p>\n                      <p className=\"text-sm text-gray-900\">{order.supplier_name}</p>\n                    </div>\n                  </div>\n                )}\n                <div className=\"flex items-start\">\n                  <Building className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Branch</p>\n                    <p className=\"text-sm text-gray-900\">{order.branch_name}</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start\">\n                  <User className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Created By</p>\n                    <p className=\"text-sm text-gray-900\">{`${order.created_by_first_name} ${order.created_by_last_name}`}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Payment Information */}\n            <div className=\"bg-gray-50 p-4 rounded-md\">\n              <h2 className=\"text-lg font-semibold mb-4\">Payment Information</h2>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-start\">\n                  <LKRIcon className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Total Amount</p>\n                    <p className=\"text-sm font-semibold text-gray-900\">{formatCurrency(order.estimated_amount)}</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start\">\n                  <LKRIcon className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Advance Payment</p>\n                    <p className=\"text-sm font-semibold text-green-600\">{formatCurrency(order.advance_amount)}</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start\">\n                  <LKRIcon className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Balance</p>\n                    <p className=\"text-sm font-semibold text-red-600\">{formatCurrency(order.balance_amount)}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Middle and Right columns - Images and Details */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Images Gallery */}\n            {order.imageDetails && order.imageDetails.length > 0 && (\n              <div className=\"bg-gray-50 p-4 rounded-md\">\n                <h2 className=\"text-lg font-semibold mb-4\">Design Images</h2>\n\n                {/* Main selected image */}\n                <div className=\"mb-4 relative h-80 w-full rounded-md overflow-hidden bg-white\">\n                  {selectedImage && (\n                    <Image\n                      src={`http://localhost:3002/${selectedImage}`}\n                      alt=\"Selected design\"\n                      fill\n                      style={{ objectFit: 'contain' }}\n                      unoptimized={true}\n                      width={800}\n                      height={600}\n                    />\n                  )}\n                </div>\n\n                {/* Thumbnails */}\n                <div className=\"grid grid-cols-4 gap-2\">\n                  {order.imageDetails.map((image: any) => (\n                    <div\n                      key={image.image_id}\n                      className={`relative h-20 rounded-md overflow-hidden cursor-pointer border-2 ${selectedImage === image.image_path ? 'border-yellow-500' : 'border-transparent'}`}\n                      onClick={() => handleImageSelect(image.image_path)}\n                    >\n                      <Image\n                        src={`http://localhost:3002/${image.image_path}`}\n                        alt={`Image ${image.image_id}`}\n                        fill\n                        style={{ objectFit: 'cover' }}\n                        unoptimized={true}\n                        width={100}\n                        height={100}\n                      />\n                      <div className=\"absolute bottom-0 left-0 right-0 bg-black bg-opacity-50 text-white text-xs p-1 text-center\">\n                        {image.image_type || 'Reference'}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Description */}\n            {order.description && (\n              <div className=\"bg-gray-50 p-4 rounded-md\">\n                <h2 className=\"text-lg font-semibold mb-2\">Description</h2>\n                <p className=\"text-sm text-gray-700 whitespace-pre-wrap\">{order.description}</p>\n              </div>\n            )}\n\n            {/* Special Requirements */}\n            {order.special_requirements && (\n              <div className=\"bg-gray-50 p-4 rounded-md\">\n                <h2 className=\"text-lg font-semibold mb-2\">Special Requirements</h2>\n                <p className=\"text-sm text-gray-700 whitespace-pre-wrap\">{order.special_requirements}</p>\n              </div>\n            )}\n\n            {/* Materials */}\n            {order.materials && order.materials.length > 0 && (\n              <div className=\"bg-gray-50 p-4 rounded-md\">\n                <h2 className=\"text-lg font-semibold mb-4\">Materials</h2>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-100\">\n                      <tr>\n                        <th scope=\"col\" className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Material</th>\n                        <th scope=\"col\" className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Quantity</th>\n                        <th scope=\"col\" className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Unit</th>\n                        <th scope=\"col\" className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Cost</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {order.materials.map((material) => (\n                        <tr key={material.material_entry_id}>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">{material.material_name}</td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">{material.quantity}</td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">{material.unit}</td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\n                            {material.total_cost ? formatCurrency(material.total_cost) : 'N/A'}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            )}\n\n            {/* Payment History */}\n            {order.payments && order.payments.length > 0 && (\n              <div className=\"bg-gray-50 p-4 rounded-md\">\n                <h2 className=\"text-lg font-semibold mb-4\">Payment History</h2>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-100\">\n                      <tr>\n                        <th scope=\"col\" className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n                        <th scope=\"col\" className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\n                        <th scope=\"col\" className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Method</th>\n                        <th scope=\"col\" className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Reference</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {order.payments.map((payment) => (\n                        <tr key={payment.payment_id}>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">{formatDateTime(payment.payment_date)}</td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">{formatCurrency(payment.payment_amount)}</td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">{payment.payment_method}</td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">{payment.payment_reference || 'N/A'}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CustomOrderDetailPage;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}