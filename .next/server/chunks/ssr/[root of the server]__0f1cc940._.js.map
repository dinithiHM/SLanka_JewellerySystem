{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/services/reportService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3002';\n\n// Create axios instance with auth header\nconst axiosInstance = axios.create({\n  baseURL: `${API_URL}/api/reports`,\n});\n\n// Add request interceptor to include auth token\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n/**\n * Get sales report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getSalesReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/sales', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching sales report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get inventory report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getInventoryReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/inventory', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching inventory report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get current stock report data\n * @param {Object} params - Query parameters for the report (branchId for filtering)\n * @returns {Promise} - Promise with report data\n */\nexport const getCurrentStockReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/inventory/current-stock', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching current stock report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get gold stock report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getGoldStockReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/inventory/gold-stock', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching gold stock report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get low stock report data\n * @param {Object} params - Query parameters for the report (branchId for filtering)\n * @returns {Promise} - Promise with report data\n */\nexport const getLowStockReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/inventory/low-stock', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching low stock report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get inventory valuation report data\n * @param {Object} params - Query parameters for the report (branchId for filtering)\n * @returns {Promise} - Promise with report data\n */\nexport const getInventoryValuationReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/inventory/valuation', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching inventory valuation report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get customer report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getCustomerReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/customers', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching customer report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get financial report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getFinancialReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/financial', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching financial report:', error);\n    throw error;\n  }\n};\n\n/**\n * Export report as CSV\n * @param {String} reportType - Type of report to export\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with export result\n */\nexport const exportReportCSV = async (reportType, params = {}) => {\n  try {\n    const response = await axiosInstance.get('/export', {\n      params: { reportType, ...params },\n      responseType: 'blob'\n    });\n\n    // Create a download link and trigger download\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n\n    // Generate filename\n    const date = new Date().toISOString().split('T')[0];\n    link.setAttribute('download', `${reportType}_report_${date}.csv`);\n\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n\n    return { success: true };\n  } catch (error) {\n    console.error('Error exporting report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get custom report data\n * @param {Object} config - Custom report configuration\n * @returns {Promise} - Promise with report data\n */\nexport const getCustomReport = async (config) => {\n  try {\n    // This would be implemented to handle custom report requests\n    // For now, we'll just return a mock response\n    return {\n      success: true,\n      message: 'Custom report functionality will be implemented here',\n      config\n    };\n  } catch (error) {\n    console.error('Error generating custom report:', error);\n    throw error;\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/app/DashView/reports/sales/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, Filter, Download, Printer, BarChart, PieChart, LineChart, RefreshCw } from 'lucide-react';\nimport Link from 'next/link';\nimport { getSalesReport } from '@/services/reportService';\n\ninterface SalesData {\n  summary: {\n    totalSales: number;\n    totalTransactions: number;\n    averageOrderValue: number;\n  };\n  salesByDay: {\n    date: string;\n    amount: number;\n    transactions: number;\n  }[];\n  topCategories: {\n    category_name: string;\n    totalQuantity: number;\n    totalAmount: number;\n  }[];\n  topProducts: {\n    item_name: string;\n    totalQuantity: number;\n    totalAmount: number;\n  }[];\n  recentSales: {\n    sale_id: number;\n    customer_name: string;\n    total_amount: number;\n    payment_method: string;\n    sale_date: string;\n    branch_id: number;\n    branch_name: string;\n  }[];\n  branches: {\n    branch_id: number;\n    branch_name: string;\n  }[];\n}\n\nexport default function SalesReportsPage() {\n  const [dateRange, setDateRange] = useState('last30');\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedBranch, setSelectedBranch] = useState<string>('');\n  const [salesData, setSalesData] = useState<SalesData | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  // Report types\n  const reportTypes = [\n    {\n      name: 'Daily Sales',\n      path: '/DashView/reports/sales/daily',\n      description: 'View sales data for each day with detailed breakdowns',\n      icon: <BarChart className=\"w-5 h-5\" />\n    },\n    {\n      name: 'Monthly Sales',\n      path: '/DashView/reports/sales/monthly',\n      description: 'Monthly sales trends and comparisons',\n      icon: <LineChart className=\"w-5 h-5\" />\n    },\n    {\n      name: 'Sales by Category',\n      path: '/DashView/reports/sales/by-category',\n      description: 'Sales distribution across different product categories',\n      icon: <PieChart className=\"w-5 h-5\" />\n    },\n    {\n      name: 'Sales by Branch',\n      path: '/DashView/reports/sales/by-branch',\n      description: 'Compare performance across different store locations',\n      icon: <BarChart className=\"w-5 h-5\" />\n    },\n  ];\n\n  // Fetch sales data\n  const fetchSalesData = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // Build query parameters\n      const params: any = { period: dateRange };\n      if (selectedBranch) {\n        params.branchId = selectedBranch;\n      }\n\n      // Use the reportService to fetch data with authentication\n      const data = await getSalesReport(params);\n      setSalesData(data);\n    } catch (err) {\n      console.error('Error fetching sales data:', err);\n      setError('Failed to load sales data. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch data on initial load and when filters change\n  useEffect(() => {\n    fetchSalesData();\n  }, [dateRange, selectedBranch]);\n\n  const handleRefresh = () => {\n    fetchSalesData();\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">Sales Reports</h1>\n\n        <div className=\"mt-3 sm:mt-0 flex items-center space-x-3\">\n          {/* Branch Filter */}\n          <div className=\"relative\">\n            <select\n              className=\"appearance-none pl-3 pr-10 py-2 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm\"\n              value={selectedBranch}\n              onChange={(e) => setSelectedBranch(e.target.value)}\n            >\n              <option value=\"\">All Branches</option>\n              {salesData?.branches?.map((branch) => (\n                <option key={branch.branch_id} value={branch.branch_id}>\n                  {branch.branch_name}\n                </option>\n              ))}\n            </select>\n            <Filter className=\"absolute right-3 top-2.5 h-4 w-4 text-gray-400\" />\n          </div>\n\n          {/* Date Range Filter */}\n          <div className=\"relative\">\n            <select\n              className=\"appearance-none pl-3 pr-10 py-2 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm\"\n              value={dateRange}\n              onChange={(e) => setDateRange(e.target.value)}\n            >\n              <option value=\"today\">Today</option>\n              <option value=\"yesterday\">Yesterday</option>\n              <option value=\"last7\">Last 7 Days</option>\n              <option value=\"last30\">Last 30 Days</option>\n              <option value=\"thisMonth\">This Month</option>\n              <option value=\"lastMonth\">Last Month</option>\n            </select>\n            <Calendar className=\"absolute right-3 top-2.5 h-4 w-4 text-gray-400\" />\n          </div>\n\n          <button\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\"\n            onClick={handleRefresh}\n            disabled={isLoading}\n          >\n            {isLoading ? (\n              <RefreshCw className=\"h-4 w-4 mr-2 animate-spin\" />\n            ) : (\n              <RefreshCw className=\"h-4 w-4 mr-2\" />\n            )}\n            Refresh\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\">\n          {error}\n        </div>\n      )}\n\n      {isLoading && !salesData ? (\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-yellow-500\"></div>\n        </div>\n      ) : (\n        <>\n          {/* Report Types */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {reportTypes.map((report) => (\n              <Link\n                key={report.name}\n                href={report.path}\n                className=\"bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow\"\n              >\n                <div className=\"px-4 py-5 sm:p-6\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0 bg-yellow-100 rounded-md p-3\">\n                      {report.icon}\n                    </div>\n                    <div className=\"ml-5\">\n                      <h3 className=\"text-lg font-medium text-gray-900\">{report.name}</h3>\n                      <p className=\"text-sm text-gray-500\">{report.description}</p>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            ))}\n          </div>\n\n          {/* Sales Overview */}\n          <div className=\"bg-white shadow rounded-lg\">\n            <div className=\"px-4 py-5 sm:px-6 flex justify-between items-center\">\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Sales Overview</h3>\n              <div className=\"flex space-x-2\">\n                <button className=\"inline-flex items-center p-1.5 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                  <Download className=\"h-4 w-4\" />\n                </button>\n                <button className=\"inline-flex items-center p-1.5 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                  <Printer className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n            <div className=\"border-t border-gray-200 px-4 py-5 sm:p-6\">\n              <dl className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3\">\n                <div className=\"bg-yellow-50 px-4 py-5 sm:p-6 rounded-lg\">\n                  <dt className=\"text-sm font-medium text-yellow-800 truncate\">Total Sales</dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-yellow-900\">\n                    LKR {salesData?.summary?.totalSales?.toLocaleString() || '0.00'}\n                  </dd>\n                  <dd className=\"mt-3 text-sm text-yellow-700\">\n                    {salesData?.summary?.totalTransactions || 0} transactions\n                  </dd>\n                </div>\n\n                <div className=\"bg-blue-50 px-4 py-5 sm:p-6 rounded-lg\">\n                  <dt className=\"text-sm font-medium text-blue-800 truncate\">Average Order Value</dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-blue-900\">\n                    LKR {salesData?.summary?.averageOrderValue?.toLocaleString() || '0.00'}\n                  </dd>\n                  <dd className=\"mt-3 text-sm text-blue-700\">\n                    Per transaction\n                  </dd>\n                </div>\n\n                <div className=\"bg-green-50 px-4 py-5 sm:p-6 rounded-lg\">\n                  <dt className=\"text-sm font-medium text-green-800 truncate\">Top Selling Category</dt>\n                  <dd className=\"mt-1 text-2xl font-semibold text-green-900\">\n                    {salesData?.topCategories?.[0]?.category_name || 'No data'}\n                  </dd>\n                  <dd className=\"mt-3 text-sm text-green-700\">\n                    Best product: {salesData?.topProducts?.[0]?.item_name || 'No data'}\n                  </dd>\n                </div>\n              </dl>\n            </div>\n          </div>\n\n          {/* Recent Sales Table */}\n          <div className=\"bg-white shadow rounded-lg\">\n            <div className=\"px-4 py-5 sm:px-6 flex justify-between items-center\">\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Recent Sales</h3>\n            </div>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Sale ID\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Customer\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Amount\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Payment Method\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Date\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Branch\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {salesData?.recentSales?.map((sale) => (\n                    <tr key={sale.sale_id} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                        {sale.sale_id}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                        {sale.customer_name}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                        LKR {sale.total_amount.toLocaleString()}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {sale.payment_method}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {new Date(sale.sale_date).toLocaleDateString()}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {sale.branch_name}\n                      </td>\n                    </tr>\n                  ))}\n\n                  {(!salesData?.recentSales || salesData.recentSales.length === 0) && (\n                    <tr>\n                      <td colSpan={6} className=\"px-6 py-4 text-center text-gray-500\">\n                        No sales data available.\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* Sales by Day Table */}\n          <div className=\"bg-white shadow rounded-lg\">\n            <div className=\"px-4 py-5 sm:px-6\">\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Sales by Day</h3>\n            </div>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Date\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Sales Amount\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Transactions\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Average\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {salesData?.salesByDay?.map((day) => (\n                    <tr key={day.date} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                        {new Date(day.date).toLocaleDateString()}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                        LKR {day.amount.toLocaleString()}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {day.transactions}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        LKR {(day.amount / day.transactions).toLocaleString()}\n                      </td>\n                    </tr>\n                  ))}\n\n                  {(!salesData?.salesByDay || salesData.salesByDay.length === 0) && (\n                    <tr>\n                      <td colSpan={4} className=\"px-6 py-4 text-center text-gray-500\">\n                        No daily sales data available.\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}