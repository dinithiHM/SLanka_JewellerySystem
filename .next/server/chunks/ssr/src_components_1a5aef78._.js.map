{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/components/InputField.tsx"],"sourcesContent":["import { FieldError } from \"react-hook-form\";\n\ntype InputFieldProps = {\n  label: string;\n  type?: string;\n  register: any;\n  name: string;\n  defaultValue?: string;\n  error?: FieldError;\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n};\n\nconst InputField = ({\n  label,\n  type = \"text\",\n  register,\n  name,\n  defaultValue,\n  error,\n  inputProps,\n}: InputFieldProps) => {\n  return (\n    <div className=\"flex flex-col gap-2 w-full md:w-1/4\">\n      <label className=\"text-xs text-gray-500\">{label}</label>\n      <input\n        type={type}\n        {...register(name)}\n        className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n        {...inputProps}\n        defaultValue={defaultValue}\n      />\n      {error?.message && (\n        <p className=\"text-xs text-red-400\">{error.message.toString()}</p>\n      )}\n    </div>\n  );\n};\n\nexport default InputField;\n"],"names":[],"mappings":";;;;;AAYA,MAAM,aAAa,CAAC,EAClB,KAAK,EACL,OAAO,MAAM,EACb,QAAQ,EACR,IAAI,EACJ,YAAY,EACZ,KAAK,EACL,UAAU,EACM;IAChB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAM,WAAU;0BAAyB;;;;;;0BAC1C,8OAAC;gBACC,MAAM;gBACL,GAAG,SAAS,KAAK;gBAClB,WAAU;gBACT,GAAG,UAAU;gBACd,cAAc;;;;;;YAEf,OAAO,yBACN,8OAAC;gBAAE,WAAU;0BAAwB,MAAM,OAAO,CAAC,QAAQ;;;;;;;;;;;;AAInE;uCAEe","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/components/forms/TeacherForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport InputField from \"@/components/InputField\";\nimport { useState } from \"react\";\n\n// Zod schema for form validation\nconst schema = z.object({\n  username: z.string().min(3, { message: \"Username must be at least 3 characters long!\" }).max(20, { message: \"Username must be at most 20 characters long!\" }),\n  email: z.string().email({ message: \"Invalid email address!\" }),\n  password: z.string().min(8, { message: \"Password must be at least 8 characters long!\" }),\n  firstName: z.string().min(1, { message: \"First name is required!\" }),\n  lastName: z.string().min(1, { message: \"Last name is required!\" }),\n  phone: z.string().min(1, { message: \"Phone is required!\" }),\n  address: z.string().min(1, { message: \"Address is required!\" }),\n  bloodType: z.string().min(1, { message: \"Blood Type is required!\" }),\n  birthday: z.string().min(1, { message: \"Birthday is required!\" }), // Use string for compatibility\n  sex: z.enum([\"male\", \"female\"], { message: \"Sex is required!\" }),\n});\n\ntype Inputs = z.infer<typeof schema>;\n\nconst TeacherForm = ({ type, data }: { type: \"create\" | \"update\"; data?: any }) => {\n  // Using useState for each input field\n  const [username, setUsername] = useState(data?.username || \"\");\n  const [email, setEmail] = useState(data?.email || \"\");\n  const [password, setPassword] = useState(data?.password || \"\");\n  const [firstName, setFirstName] = useState(data?.firstName || \"\");\n  const [lastName, setLastName] = useState(data?.lastName || \"\");\n  const [phone, setPhone] = useState(data?.phone || \"\");\n  const [address, setAddress] = useState(data?.address || \"\");\n  const [bloodType, setBloodType] = useState(data?.bloodType || \"\");\n  const [birthday, setBirthday] = useState(data?.birthday || \"\");\n  const [sex, setSex] = useState(data?.sex || \"male\");\n\n  const [selectedImage, setSelectedImage] = useState<File | null>(null); // Optional image handling\n\n  const {\n    handleSubmit,\n    formState: { errors },\n  } = useForm<Inputs>({\n    resolver: zodResolver(schema),\n  });\n\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setSelectedImage(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = handleSubmit(async () => {\n    try {\n      // Prepare data to be sent as JSON\n      const teacherData = {\n        username,\n        email,\n        password,\n        firstName,\n        lastName,\n        phone,\n        address,\n        bloodType,\n        birthday,\n        sex,\n        img: selectedImage ? \"image-uploaded-path\" : \"ccc\", // Image path logic (you can replace it with your image upload path)\n      };\n\n      // Send data to the backend API as JSON\n      const response = await fetch(\"http://localhost:3002/teachers/create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(teacherData),\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        alert(\"Teacher created successfully!\");\n      } else {\n        alert(`Error: ${result.message}`);\n      }\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n      alert(\"Failed to create teacher!\");\n    }\n  });\n\n  return (\n    <form className=\"flex flex-col gap-8\" onSubmit={onSubmit}>\n      <h1 className=\"text-xl font-semibold\">{type === \"create\" ? \"Create a new teacher\" : \"Update teacher details\"}</h1>\n      <span className=\"text-xs text-gray-400 font-medium\">Authentication Information</span>\n\n      <div className=\"flex justify-between flex-wrap gap-4\">\n        <InputField\n          label=\"Username\"\n          name=\"username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          error={errors?.username?.message} // Access the error message safely\n        />\n        <InputField\n          label=\"Email\"\n          name=\"email\"\n          value={email || \"\"} // Ensure that value is always a string\n          onChange={(e) => setEmail(e.target.value)}\n          error={errors?.email?.message} // Access the error message safely\n        />\n        <InputField\n          label=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          error={errors?.password?.message} // Access the error message safely\n        />\n      </div>\n\n      <span className=\"text-xs text-gray-400 font-medium\">Personal Information</span>\n\n      <div className=\"flex justify-between flex-wrap gap-4\">\n        <InputField\n          label=\"First Name\"\n          name=\"firstName\"\n          value={firstName}\n          onChange={(e) => setFirstName(e.target.value)}\n          error={errors.firstName?.message} // Access the error message safely\n        />\n        <InputField\n          label=\"Last Name\"\n          name=\"lastName\"\n          value={lastName}\n          onChange={(e) => setLastName(e.target.value)}\n          error={errors.lastName?.message} // Access the error message safely\n        />\n        <InputField\n          label=\"Phone\"\n          name=\"phone\"\n          value={phone}\n          onChange={(e) => setPhone(e.target.value)}\n          error={errors.phone?.message} // Access the error message safely\n        />\n        <InputField\n          label=\"Address\"\n          name=\"address\"\n          value={address}\n          onChange={(e) => setAddress(e.target.value)}\n          error={errors.address?.message} // Access the error message safely\n        />\n        <InputField\n          label=\"Blood Type\"\n          name=\"bloodType\"\n          value={bloodType}\n          onChange={(e) => setBloodType(e.target.value)}\n          error={errors.bloodType?.message} // Access the error message safely\n        />\n        <InputField\n          label=\"Birthday\"\n          name=\"birthday\"\n          value={birthday}\n          onChange={(e) => setBirthday(e.target.value)}\n          error={errors.birthday?.message} // Access the error message safely\n          type=\"date\"\n        />\n\n        <div className=\"flex flex-col gap-2 w-full md:w-1/4\">\n          <label className=\"text-xs text-gray-500\">Sex</label>\n          <select\n            className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n            value={sex}\n            onChange={(e) => setSex(e.target.value)}\n          >\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n          </select>\n          {errors.sex?.message && <p className=\"text-xs text-red-400\">{errors.sex.message.toString()}</p>}\n        </div>\n\n        <div className=\"flex flex-col gap-2 w-full md:w-1/4 justify-center\">\n          <label className=\"text-xs text-gray-500\">Upload a photo (Optional)</label>\n          <input type=\"file\" id=\"img\" accept=\"image/*\" className=\"hidden\" onChange={handleImageChange} />\n          {selectedImage && <p className=\"text-xs text-green-400\">Image selected: {selectedImage.name}</p>}\n        </div>\n      </div>\n\n      <button className=\"bg-blue-400 text-white p-2 rounded-md\">{type === \"create\" ? \"Create\" : \"Update\"}</button>\n    </form>\n  );\n};\n\nexport default TeacherForm;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 421, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}