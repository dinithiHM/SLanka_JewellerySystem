{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/lib/actions.js"],"sourcesContent":["\"use server\";\n\nimport { revalidatePath } from \"next/cache\";\nimport { Product, User } from \"./models\";\nimport { connectToDB } from \"./utils\";\nimport { redirect } from \"next/navigation\";\nimport bcrypt from \"bcrypt\";\nimport { signIn } from \"../app/auth\";\n\nexport const addUser = async (formData) => {\n  const { username, email, password, phone, address, isAdmin, isActive } =\n    Object.fromEntries(formData);\n\n  try {\n    connectToDB();\n\n    const salt = await bcrypt.genSalt(10);\n    const hashedPassword = await bcrypt.hash(password, salt);\n\n    const newUser = new User({\n      username,\n      email,\n      password: hashedPassword,\n      phone,\n      address,\n      isAdmin,\n      isActive,\n    });\n\n    await newUser.save();\n  } catch (err) {\n    console.log(err);\n    throw new Error(\"Failed to create user!\");\n  }\n\n  revalidatePath(\"/dashboard/users\");\n  redirect(\"/dashboard/users\");\n};\n\nexport const updateUser = async (formData) => {\n  const { id, username, email, password, phone, address, isAdmin, isActive } =\n    Object.fromEntries(formData);\n\n  try {\n    connectToDB();\n\n    const updateFields = {\n      username,\n      email,\n      password,\n      phone,\n      address,\n      isAdmin,\n      isActive,\n    };\n\n    Object.keys(updateFields).forEach(\n      (key) =>\n        (updateFields[key] === \"\" || undefined) && delete updateFields[key]\n    );\n\n    await User.findByIdAndUpdate(id, updateFields);\n  } catch (err) {\n    console.log(err);\n    throw new Error(\"Failed to update user!\");\n  }\n\n  revalidatePath(\"/dashboard/users\");\n  redirect(\"/dashboard/users\");\n};\n\nexport const addProduct = async (formData) => {\n  const { title, desc, price, stock, color, size } =\n    Object.fromEntries(formData);\n\n  try {\n    connectToDB();\n\n    const newProduct = new Product({\n      title,\n      desc,\n      price,\n      stock,\n      color,\n      size,\n    });\n\n    await newProduct.save();\n  } catch (err) {\n    console.log(err);\n    throw new Error(\"Failed to create product!\");\n  }\n\n  revalidatePath(\"/dashboard/products\");\n  redirect(\"/dashboard/products\");\n};\n\nexport const updateProduct = async (formData) => {\n  const { id, title, desc, price, stock, color, size } =\n    Object.fromEntries(formData);\n\n  try {\n    connectToDB();\n\n    const updateFields = {\n      title,\n      desc,\n      price,\n      stock,\n      color,\n      size,\n    };\n\n    Object.keys(updateFields).forEach(\n      (key) =>\n        (updateFields[key] === \"\" || undefined) && delete updateFields[key]\n    );\n\n    await Product.findByIdAndUpdate(id, updateFields);\n  } catch (err) {\n    console.log(err);\n    throw new Error(\"Failed to update product!\");\n  }\n\n  revalidatePath(\"/dashboard/products\");\n  redirect(\"/dashboard/products\");\n};\n\nexport const deleteUser = async (formData) => {\n  const { id } = Object.fromEntries(formData);\n\n  try {\n    connectToDB();\n    await User.findByIdAndDelete(id);\n  } catch (err) {\n    console.log(err);\n    throw new Error(\"Failed to delete user!\");\n  }\n\n  revalidatePath(\"/dashboard/products\");\n};\n\nexport const deleteProduct = async (formData) => {\n  const { id } = Object.fromEntries(formData);\n\n  try {\n    connectToDB();\n    await Product.findByIdAndDelete(id);\n  } catch (err) {\n    console.log(err);\n    throw new Error(\"Failed to delete product!\");\n  }\n\n  revalidatePath(\"/dashboard/products\");\n};\n\nexport const authenticate = async (prevState, formData) => {\n  const { username, password } = Object.fromEntries(formData);\n\n  try {\n    await signIn(\"credentials\", { username, password });\n  } catch (err) {\n    if (err.message.includes(\"CredentialsSignin\")) {\n      return \"Wrong Credentials\";\n    }\n    throw err;\n  }\n};\n"],"names":[],"mappings":";;;;;;;;;;;IASa;IA8BA;IAgCA;IA0BA;IA+BA;IAcA;IAcA","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/ui/login/loginForm/loginForm.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"form\": \"loginForm-module__8g5cgW__form\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/app/ui/login/loginForm/loginForm.jsx"],"sourcesContent":["\"use client\";\n\nimport { authenticate } from \"@/lib/actions\";\nimport styles from \"./loginForm.module.css\";\nimport { useFormState } from \"react-dom\";\n\nconst LoginForm = () => {\n  const [state, formAction] = useFormState(authenticate, undefined);\n\n  return (\n    <form action={formAction} className={styles.form}>\n      <h1>Login</h1>\n      <input type=\"text\" placeholder=\"username\" name=\"username\" />\n      <input type=\"password\" placeholder=\"password\" name=\"password\" />\n      <button>Login</button>\n      {state && state}\n    </form>\n  );\n};\n\nexport default LoginForm;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,YAAY;IAChB,MAAM,CAAC,OAAO,WAAW,GAAG,CAAA,GAAA,4MAAA,CAAA,eAAY,AAAD,EAAE,qHAAA,CAAA,eAAY,EAAE;IAEvD,qBACE,8OAAC;QAAK,QAAQ;QAAY,WAAW,+JAAA,CAAA,UAAM,CAAC,IAAI;;0BAC9C,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBAAM,MAAK;gBAAO,aAAY;gBAAW,MAAK;;;;;;0BAC/C,8OAAC;gBAAM,MAAK;gBAAW,aAAY;gBAAW,MAAK;;;;;;0BACnD,8OAAC;0BAAO;;;;;;YACP,SAAS;;;;;;;AAGhB;uCAEe","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,CAACE,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,8JAAiC,EAC7CL,qBAAqB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}