{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/utils/formatters.ts"],"sourcesContent":["/**\n * Format a number as currency\n * @param value The number to format\n * @param locale The locale to use for formatting (default: 'en-US')\n * @param currency The currency code (default: 'LKR')\n * @returns Formatted currency string\n */\nexport const formatCurrency = (\n  value: number | string,\n  locale: string = 'en-US',\n  currency: string = 'LKR'\n): string => {\n  // Convert to number if it's a string\n  const numericValue = typeof value === 'string' ? parseFloat(value) : value;\n\n  // Handle NaN values\n  if (isNaN(numericValue)) {\n    console.warn('Invalid value for currency formatting:', value);\n    return 'Rs. 0.00';\n  }\n\n  // Use the Sri Lankan Rupee symbol (Rs) instead of LKR text\n  return 'Rs. ' + new Intl.NumberFormat(locale, {\n    style: 'decimal',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(numericValue);\n};\n\n/**\n * Format a date string\n * @param dateString The date string to format\n * @param locale The locale to use for formatting (default: 'en-US')\n * @returns Formatted date string\n */\nexport const formatDate = (\n  dateString: string,\n  locale: string = 'en-US'\n): string => {\n  const date = new Date(dateString);\n  return new Intl.DateTimeFormat(locale, {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  }).format(date);\n};\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;AACM,MAAM,iBAAiB,CAC5B,OACA,SAAiB,OAAO,EACxB,WAAmB,KAAK;IAExB,qCAAqC;IACrC,MAAM,eAAe,OAAO,UAAU,WAAW,WAAW,SAAS;IAErE,oBAAoB;IACpB,IAAI,MAAM,eAAe;QACvB,QAAQ,IAAI,CAAC,0CAA0C;QACvD,OAAO;IACT;IAEA,2DAA2D;IAC3D,OAAO,SAAS,IAAI,KAAK,YAAY,CAAC,QAAQ;QAC5C,OAAO;QACP,uBAAuB;QACvB,uBAAuB;IACzB,GAAG,MAAM,CAAC;AACZ;AAQO,MAAM,aAAa,CACxB,YACA,SAAiB,OAAO;IAExB,MAAM,OAAO,IAAI,KAAK;IACtB,OAAO,IAAI,KAAK,cAAc,CAAC,QAAQ;QACrC,MAAM;QACN,OAAO;QACP,KAAK;QACL,MAAM;QACN,QAAQ;QACR,QAAQ;IACV,GAAG,MAAM,CAAC;AACZ","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/components/LKRIcon.tsx"],"sourcesContent":["import React from 'react';\n\ninterface LKRIconProps {\n  className?: string;\n}\n\nconst LKRIcon: React.FC<LKRIconProps> = ({ className = 'h-5 w-5 text-gray-400' }) => {\n  return (\n    <div className={`flex items-center justify-center font-semibold ${className}`}>\n      Rs.\n    </div>\n  );\n};\n\nexport default LKRIcon;\n"],"names":[],"mappings":";;;;;AAMA,MAAM,UAAkC,CAAC,EAAE,YAAY,uBAAuB,EAAE;IAC9E,qBACE,8OAAC;QAAI,WAAW,CAAC,+CAA+C,EAAE,WAAW;kBAAE;;;;;;AAInF;uCAEe","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/app/DashView/custom-orders/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport {\n  Search,\n  Filter,\n  ChevronDown,\n  ChevronUp,\n  Calendar,\n  User,\n  Plus,\n  Eye,\n  Clock,\n  CheckCircle,\n  AlertCircle,\n  Truck,\n  X\n} from 'lucide-react';\nimport Image from 'next/image';\nimport { formatCurrency } from '@/utils/formatters';\nimport LKRIcon from '@/components/LKRIcon';\n\n// Define types\ninterface CustomOrder {\n  order_id: number;\n  order_reference: string;\n  customer_name: string;\n  customer_phone: string | null;\n  customer_email: string | null;\n  order_date: string;\n  estimated_completion_date: string | null;\n  estimated_amount: number;\n  advance_amount: number;\n  balance_amount: number;\n  order_status: 'Pending' | 'In Progress' | 'Completed' | 'Delivered' | 'Cancelled';\n  payment_status: 'Not Paid' | 'Partially Paid' | 'Fully Paid';\n  category_name: string | null;\n  description: string | null;\n  special_requirements: string | null;\n  branch_name: string;\n  created_by_first_name: string;\n  created_by_last_name: string;\n  images: string | null;\n  payment_count: number;\n  total_paid: number;\n}\n\nconst CustomOrdersPage = () => {\n  const router = useRouter();\n\n  // State for data\n  const [orders, setOrders] = useState<CustomOrder[]>([]);\n  const [filteredOrders, setFilteredOrders] = useState<CustomOrder[]>([]);\n\n  // State for UI\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [sortField, setSortField] = useState<string>('order_date');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('desc');\n  const [selectedOrder, setSelectedOrder] = useState<CustomOrder | null>(null);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n\n  // Fetch custom orders on component mount\n  useEffect(() => {\n    const fetchOrders = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:3002/custom-orders');\n        if (!response.ok) {\n          throw new Error(`Failed to fetch orders: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setOrders(data);\n        setFilteredOrders(data);\n      } catch (err) {\n        console.error('Error fetching custom orders:', err);\n        setError(err instanceof Error ? err.message : 'An error occurred while fetching orders');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchOrders();\n  }, []);\n\n  // Apply filters and search\n  useEffect(() => {\n    let result = [...orders];\n\n    // Apply search\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      result = result.filter(order =>\n        order.order_reference.toLowerCase().includes(term) ||\n        order.customer_name.toLowerCase().includes(term) ||\n        (order.category_name && order.category_name.toLowerCase().includes(term)) ||\n        (order.description && order.description.toLowerCase().includes(term))\n      );\n    }\n\n    // Apply status filter\n    if (statusFilter !== 'all') {\n      result = result.filter(order => order.order_status === statusFilter);\n    }\n\n    // Apply sorting\n    result.sort((a, b) => {\n      let comparison = 0;\n\n      if (sortField === 'order_date') {\n        comparison = new Date(a.order_date).getTime() - new Date(b.order_date).getTime();\n      } else if (sortField === 'estimated_amount') {\n        comparison = a.estimated_amount - b.estimated_amount;\n      } else if (sortField === 'balance_amount') {\n        comparison = a.balance_amount - b.balance_amount;\n      } else if (sortField === 'customer_name') {\n        comparison = a.customer_name.localeCompare(b.customer_name);\n      } else if (sortField === 'estimated_completion_date') {\n        // Handle null dates\n        if (!a.estimated_completion_date && !b.estimated_completion_date) {\n          comparison = 0;\n        } else if (!a.estimated_completion_date) {\n          comparison = 1;\n        } else if (!b.estimated_completion_date) {\n          comparison = -1;\n        } else {\n          comparison = new Date(a.estimated_completion_date).getTime() - new Date(b.estimated_completion_date).getTime();\n        }\n      }\n\n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n\n    setFilteredOrders(result);\n  }, [orders, searchTerm, statusFilter, sortField, sortDirection]);\n\n  // Handle sort change\n  const handleSort = (field: string) => {\n    if (sortField === field) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n\n  // Format date\n  const formatDate = (dateString: string | null) => {\n    if (!dateString) return 'Not set';\n\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Get status badge color\n  const getStatusBadgeColor = (status: string) => {\n    switch (status) {\n      case 'Completed':\n        return 'bg-green-100 text-green-800';\n      case 'In Progress':\n        return 'bg-blue-100 text-blue-800';\n      case 'Delivered':\n        return 'bg-purple-100 text-purple-800';\n      case 'Cancelled':\n        return 'bg-red-100 text-red-800';\n      case 'Pending':\n      default:\n        return 'bg-yellow-100 text-yellow-800';\n    }\n  };\n\n  // Get payment status badge color\n  const getPaymentStatusBadgeColor = (status: string) => {\n    switch (status) {\n      case 'Fully Paid':\n        return 'bg-green-100 text-green-800';\n      case 'Partially Paid':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'Not Paid':\n      default:\n        return 'bg-red-100 text-red-800';\n    }\n  };\n\n  // Get status icon\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'Completed':\n        return <CheckCircle size={16} className=\"mr-1\" />;\n      case 'In Progress':\n        return <Clock size={16} className=\"mr-1\" />;\n      case 'Delivered':\n        return <Truck size={16} className=\"mr-1\" />;\n      case 'Cancelled':\n        return <X size={16} className=\"mr-1\" />;\n      case 'Pending':\n      default:\n        return <AlertCircle size={16} className=\"mr-1\" />;\n    }\n  };\n\n  // Handle view details\n  const handleViewDetails = (order: CustomOrder) => {\n    setSelectedOrder(order);\n    setShowDetailsModal(true);\n  };\n\n  // Handle create new order\n  const handleCreateOrder = () => {\n    router.push('/DashView/custom-orders/create');\n  };\n\n  // Handle view order details\n  const handleViewOrder = (orderId: number) => {\n    router.push(`/DashView/custom-orders/${orderId}`);\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">Custom Orders</h1>\n\n      {/* Error message */}\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\">\n          <span className=\"block sm:inline\">{error}</span>\n        </div>\n      )}\n\n      {/* Filters and Search */}\n      <div className=\"bg-white p-4 rounded-lg shadow-md mb-6\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between space-y-4 md:space-y-0\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <Search className=\"h-5 w-5 text-gray-400\" />\n              </div>\n              <input\n                type=\"text\"\n                placeholder=\"Search orders...\"\n                className=\"pl-10 p-2 border border-gray-300 rounded-md focus:ring-yellow-500 focus:border-yellow-500 w-full md:w-64\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <Filter className=\"h-5 w-5 text-gray-400\" />\n              <select\n                className=\"p-2 border border-gray-300 rounded-md focus:ring-yellow-500 focus:border-yellow-500\"\n                value={statusFilter}\n                onChange={(e) => setStatusFilter(e.target.value)}\n              >\n                <option value=\"all\">All Statuses</option>\n                <option value=\"Pending\">Pending</option>\n                <option value=\"In Progress\">In Progress</option>\n                <option value=\"Completed\">Completed</option>\n                <option value=\"Delivered\">Delivered</option>\n                <option value=\"Cancelled\">Cancelled</option>\n              </select>\n            </div>\n          </div>\n\n          <button\n            onClick={handleCreateOrder}\n            className=\"flex items-center px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-600\"\n          >\n            <Plus size={18} className=\"mr-2\" />\n            New Custom Order\n          </button>\n        </div>\n      </div>\n\n      {/* Orders Table */}\n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n        {loading ? (\n          <div className=\"flex justify-center items-center p-8\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-yellow-500\"></div>\n          </div>\n        ) : filteredOrders.length === 0 ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            No custom orders found.\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('order_date')}\n                  >\n                    <div className=\"flex items-center\">\n                      <span>Date</span>\n                      {sortField === 'order_date' && (\n                        sortDirection === 'asc' ? <ChevronUp size={16} /> : <ChevronDown size={16} />\n                      )}\n                    </div>\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Reference\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('customer_name')}\n                  >\n                    <div className=\"flex items-center\">\n                      <span>Customer</span>\n                      {sortField === 'customer_name' && (\n                        sortDirection === 'asc' ? <ChevronUp size={16} /> : <ChevronDown size={16} />\n                      )}\n                    </div>\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Category\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('estimated_amount')}\n                  >\n                    <div className=\"flex items-center\">\n                      <span>Amount</span>\n                      {sortField === 'estimated_amount' && (\n                        sortDirection === 'asc' ? <ChevronUp size={16} /> : <ChevronDown size={16} />\n                      )}\n                    </div>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('estimated_completion_date')}\n                  >\n                    <div className=\"flex items-center\">\n                      <span>Due Date</span>\n                      {sortField === 'estimated_completion_date' && (\n                        sortDirection === 'asc' ? <ChevronUp size={16} /> : <ChevronDown size={16} />\n                      )}\n                    </div>\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Payment\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredOrders.map((order) => (\n                  <tr key={order.order_id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <Calendar className=\"h-5 w-5 text-gray-400 mr-2\" />\n                        <span>{formatDate(order.order_date)}</span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {order.order_reference}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <User className=\"h-5 w-5 text-gray-400 mr-2\" />\n                        <span>{order.customer_name}</span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {order.category_name || 'Not specified'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <LKRIcon className=\"h-5 w-5 text-gray-400 mr-1\" />\n                        <span>{formatCurrency(order.estimated_amount)}</span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {formatDate(order.estimated_completion_date)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusBadgeColor(order.order_status)}`}>\n                        <div className=\"flex items-center\">\n                          {getStatusIcon(order.order_status)}\n                          {order.order_status}\n                        </div>\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getPaymentStatusBadgeColor(order.payment_status)}`}>\n                        {order.payment_status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <button\n                        onClick={() => handleViewOrder(order.order_id)}\n                        className=\"text-yellow-600 hover:text-yellow-900 flex items-center\"\n                      >\n                        <Eye size={16} className=\"mr-1\" />\n                        View\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n\n      {/* Order Details Modal */}\n      {showDetailsModal && selectedOrder && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-bold\">Order Details</h2>\n              <button\n                onClick={() => setShowDetailsModal(false)}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                <X size={24} />\n              </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500\">Reference</h3>\n                <p className=\"mt-1 text-sm text-gray-900\">{selectedOrder.order_reference}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500\">Date</h3>\n                <p className=\"mt-1 text-sm text-gray-900\">{formatDate(selectedOrder.order_date)}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500\">Customer</h3>\n                <p className=\"mt-1 text-sm text-gray-900\">{selectedOrder.customer_name}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500\">Branch</h3>\n                <p className=\"mt-1 text-sm text-gray-900\">{selectedOrder.branch_name}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500\">Created By</h3>\n                <p className=\"mt-1 text-sm text-gray-900\">{`${selectedOrder.created_by_first_name} ${selectedOrder.created_by_last_name}`}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500\">Due Date</h3>\n                <p className=\"mt-1 text-sm text-gray-900\">{formatDate(selectedOrder.estimated_completion_date)}</p>\n              </div>\n            </div>\n\n            <div className=\"mb-6\">\n              <h3 className=\"text-sm font-medium text-gray-500 mb-2\">Description</h3>\n              <p className=\"text-sm text-gray-700 bg-gray-50 p-3 rounded-md\">\n                {selectedOrder.description || 'No description provided'}\n              </p>\n            </div>\n\n            {selectedOrder.special_requirements && (\n              <div className=\"mb-6\">\n                <h3 className=\"text-sm font-medium text-gray-500 mb-2\">Special Requirements</h3>\n                <p className=\"text-sm text-gray-700 bg-gray-50 p-3 rounded-md\">\n                  {selectedOrder.special_requirements}\n                </p>\n              </div>\n            )}\n\n            {selectedOrder.images && (\n              <div className=\"mb-6\">\n                <h3 className=\"text-sm font-medium text-gray-500 mb-2\">Reference Images</h3>\n                <div className=\"grid grid-cols-3 gap-2\">\n                  {selectedOrder.images.split(',').map((imagePath, index) => (\n                    <div key={index} className=\"relative h-24 rounded-md overflow-hidden\">\n                      <Image\n                        src={`http://localhost:3002/${imagePath}`}\n                        alt={`Reference ${index + 1}`}\n                        fill\n                        style={{ objectFit: 'cover' }}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            <div className=\"bg-gray-50 p-4 rounded-md mb-6\">\n              <div className=\"grid grid-cols-3 gap-4\">\n                <div>\n                  <h3 className=\"text-sm font-medium text-gray-500\">Total Amount</h3>\n                  <p className=\"mt-1 text-lg font-semibold text-gray-900\">{formatCurrency(selectedOrder.estimated_amount)}</p>\n                </div>\n                <div>\n                  <h3 className=\"text-sm font-medium text-gray-500\">Paid Amount</h3>\n                  <p className=\"mt-1 text-lg font-semibold text-green-600\">{formatCurrency(selectedOrder.advance_amount)}</p>\n                </div>\n                <div>\n                  <h3 className=\"text-sm font-medium text-gray-500\">Balance</h3>\n                  <p className=\"mt-1 text-lg font-semibold text-red-600\">{formatCurrency(selectedOrder.balance_amount)}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex justify-between\">\n              <div className=\"flex space-x-2\">\n                <span className={`px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full ${getStatusBadgeColor(selectedOrder.order_status)}`}>\n                  <div className=\"flex items-center\">\n                    {getStatusIcon(selectedOrder.order_status)}\n                    {selectedOrder.order_status}\n                  </div>\n                </span>\n\n                <span className={`px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full ${getPaymentStatusBadgeColor(selectedOrder.payment_status)}`}>\n                  {selectedOrder.payment_status}\n                </span>\n              </div>\n\n              <button\n                onClick={() => {\n                  setShowDetailsModal(false);\n                  handleViewOrder(selectedOrder.order_id);\n                }}\n                className=\"px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-600\"\n              >\n                View Full Details\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CustomOrdersPage;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}