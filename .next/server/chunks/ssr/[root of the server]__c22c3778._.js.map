{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/app/login/page.tsx"],"sourcesContent":["\"use client\"; // Add this line at the top of the file\r\n\r\nimport { useState } from \"react\";\r\nimport { FaUser, FaLock } from \"react-icons/fa\";\r\nimport axios from \"axios\"; // Import axios\r\nimport { useRouter } from \"next/navigation\"; // Import useRouter\r\n\r\nconst Login = () => {\r\n  // State variables to hold the email, password, and error messages\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Use the Next.js router for navigation\r\n  const router = useRouter();\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    const data = { email, password };\r\n\r\n    try {\r\n      const adminResponse = await axios.post(\"http://localhost:3002/auth/login\", data);\r\n      if (adminResponse.data.loginStatus) {\r\n        localStorage.setItem(\"token\", adminResponse.data.token);\r\n        localStorage.setItem(\"role\", \"Admin\"); // Store role\r\n\r\n        // Store user info in a single object for easier access\r\n        const userInfo = {\r\n          role: \"Admin\",\r\n          userName: \"Administrator\",\r\n          userId: 0,\r\n          branch_id: null,\r\n          branchName: ''\r\n        };\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\r\n        console.log(\"Stored admin user info:\", userInfo);\r\n\r\n        router.push(\"/DashView/admin\");\r\n        return;\r\n      }\r\n    } catch (adminError) {\r\n      console.error(\"Admin login error:\", adminError);\r\n    }\r\n\r\n    try {\r\n      const userResponse = await axios.post(\"http://localhost:3002/users/userlogin\", data);\r\n      if (userResponse.data.loginStatus) {\r\n        // Make sure we're running in the browser\r\n        if (typeof window !== 'undefined') {\r\n          localStorage.setItem(\"token\", userResponse.data.accessToken);\r\n          localStorage.setItem(\"role\", userResponse.data.role); // Store role from response\r\n\r\n          // Store user name if available\r\n          if (userResponse.data.userName) {\r\n            localStorage.setItem(\"userName\", userResponse.data.userName);\r\n          }\r\n\r\n          // Store user ID if available\r\n          if (userResponse.data.userId) {\r\n            localStorage.setItem(\"userId\", userResponse.data.userId.toString());\r\n            console.log(\"Stored user ID:\", userResponse.data.userId);\r\n          }\r\n\r\n          // Store branch information if available\r\n          if (userResponse.data.branchName) {\r\n            localStorage.setItem(\"branchName\", userResponse.data.branchName);\r\n            console.log(\"Stored branch name:\", userResponse.data.branchName);\r\n          }\r\n          if (userResponse.data.branchId) {\r\n            localStorage.setItem(\"branchId\", userResponse.data.branchId.toString());\r\n            console.log(\"Stored branch ID:\", userResponse.data.branchId);\r\n          }\r\n\r\n          // For Store Managers, set a hardcoded branch name based on branch ID if not provided\r\n          if (userResponse.data.role === \"Store Manager\" && userResponse.data.branchId && !userResponse.data.branchName) {\r\n            const branchId = userResponse.data.branchId;\r\n            let branchName = \"\";\r\n\r\n            if (branchId === 1) {\r\n              branchName = \"Mahiyanganaya Branch\";\r\n            } else if (branchId === 2) {\r\n              branchName = \"Mahaoya Branch\";\r\n            } else {\r\n              branchName = `Branch ${branchId}`;\r\n            }\r\n\r\n            localStorage.setItem(\"branchName\", branchName);\r\n            console.log(\"Set hardcoded branch name:\", branchName);\r\n          }\r\n\r\n          // Store all user info in a single object for easier access\r\n          const userInfo = {\r\n            role: userResponse.data.role,\r\n            userName: userResponse.data.userName || '',\r\n            userId: userResponse.data.userId,\r\n            branch_id: userResponse.data.branchId,\r\n            branchName: userResponse.data.branchName || localStorage.getItem(\"branchName\") || ''\r\n          };\r\n\r\n          localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\r\n          console.log(\"Stored user info:\", userInfo);\r\n        }\r\n\r\n        router.push(userResponse.data.redirectUrl || \"/DashView/user\");\r\n        return;\r\n      }\r\n    } catch (userError) {\r\n      console.error(\"User login error:\", userError);\r\n      setError(\"Invalid credentials.\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div\r\n      className=\"flex items-center justify-center min-h-screen px-4 py-8 sm:py-16\"\r\n      style={{\r\n        backgroundImage: \"url('/slide2.png')\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n      }}\r\n    >\r\n      <div className=\"bg-black bg-opacity-60 p-6 sm:p-8 rounded-lg shadow-lg w-full max-w-full sm:max-w-xs md:max-w-sm lg:max-w-md\">\r\n        <h2 className=\"text-white text-xl sm:text-2xl font-semibold text-center mb-6\">\r\n          Login\r\n        </h2>\r\n        {error && (\r\n          <div className=\"text-red-500 text-center mb-4\">{error}</div>\r\n        )}\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div className=\"flex items-center bg-gray-200 p-2 sm:p-3 rounded-lg\">\r\n            <FaUser className=\"text-gray-600 mr-2 sm:mr-3\" />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              className=\"bg-transparent flex-1 outline-none text-gray-700 text-sm sm:text-base\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center bg-gray-200 p-2 sm:p-3 rounded-lg\">\r\n            <FaLock className=\"text-gray-600 mr-2 sm:mr-3\" />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className=\"bg-transparent flex-1 outline-none text-gray-700 text-sm sm:text-base\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-gray-300 text-gray-900 font-semibold py-2 sm:py-3 rounded-lg hover:bg-gray-400 transition duration-300\"\r\n          >\r\n            Login\r\n          </button>\r\n          <p className=\"text-center text-white mt-2 text-xs sm:text-sm cursor-pointer hover:underline\">\r\n            Forgot Password?\r\n          </p>\r\n          <div className=\"mt-4 pt-4 border-t border-gray-600\">\r\n            <p className=\"text-center text-white text-xs sm:text-sm mb-2\">\r\n              Are you a supplier?\r\n            </p>\r\n            <a\r\n              href=\"/supplier/login\"\r\n              className=\"block w-full text-center bg-yellow-600 text-white font-semibold py-2 sm:py-3 rounded-lg hover:bg-yellow-700 transition duration-300\"\r\n            >\r\n              Supplier Login\r\n            </a>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA,yOAA2B,eAAe;AAC1C,sOAA6C,mBAAmB;AALhE,cAAc,uCAAuC;;;;;;AAOrD,MAAM,QAAQ;IACZ,kEAAkE;IAClE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,wCAAwC;IACxC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,yBAAyB;IACzB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QAET,MAAM,OAAO;YAAE;YAAO;QAAS;QAE/B,IAAI;YACF,MAAM,gBAAgB,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,oCAAoC;YAC3E,IAAI,cAAc,IAAI,CAAC,WAAW,EAAE;gBAClC,aAAa,OAAO,CAAC,SAAS,cAAc,IAAI,CAAC,KAAK;gBACtD,aAAa,OAAO,CAAC,QAAQ,UAAU,aAAa;gBAEpD,uDAAuD;gBACvD,MAAM,WAAW;oBACf,MAAM;oBACN,UAAU;oBACV,QAAQ;oBACR,WAAW;oBACX,YAAY;gBACd;gBAEA,aAAa,OAAO,CAAC,YAAY,KAAK,SAAS,CAAC;gBAChD,QAAQ,GAAG,CAAC,2BAA2B;gBAEvC,OAAO,IAAI,CAAC;gBACZ;YACF;QACF,EAAE,OAAO,YAAY;YACnB,QAAQ,KAAK,CAAC,sBAAsB;QACtC;QAEA,IAAI;YACF,MAAM,eAAe,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,yCAAyC;YAC/E,IAAI,aAAa,IAAI,CAAC,WAAW,EAAE;gBACjC,yCAAyC;gBACzC,uCAAmC;;gBAqDnC;gBAEA,OAAO,IAAI,CAAC,aAAa,IAAI,CAAC,WAAW,IAAI;gBAC7C;YACF;QACF,EAAE,OAAO,WAAW;YAClB,QAAQ,KAAK,CAAC,qBAAqB;YACnC,SAAS;QACX;IACF;IAGA,qBACE,8OAAC;QACC,WAAU;QACV,OAAO;YACL,iBAAiB;YACjB,gBAAgB;YAChB,oBAAoB;YACpB,kBAAkB;QACpB;kBAEA,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAgE;;;;;;gBAG7E,uBACC,8OAAC;oBAAI,WAAU;8BAAiC;;;;;;8BAElD,8OAAC;oBAAK,UAAU;oBAAc,WAAU;;sCACtC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,8IAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;8CAClB,8OAAC;oCACC,MAAK;oCACL,aAAY;oCACZ,WAAU;oCACV,OAAO;oCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sCAG5C,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,8IAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;8CAClB,8OAAC;oCACC,MAAK;oCACL,aAAY;oCACZ,WAAU;oCACV,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sCAG/C,8OAAC;4BACC,MAAK;4BACL,WAAU;sCACX;;;;;;sCAGD,8OAAC;4BAAE,WAAU;sCAAgF;;;;;;sCAG7F,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAAiD;;;;;;8CAG9D,8OAAC;oCACC,MAAK;oCACL,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;uCAEe","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}