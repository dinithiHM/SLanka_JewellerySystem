{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/components/OrderImageThumbnail.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport Image from 'next/image';\nimport { ShoppingCart, Eye } from 'lucide-react';\n\ninterface OrderImageThumbnailProps {\n  imageUrl: string | null;\n  orderId: number;\n  size?: 'small' | 'medium' | 'large';\n}\n\nconst OrderImageThumbnail: React.FC<OrderImageThumbnailProps> = ({\n  imageUrl,\n  orderId,\n  size = 'medium' // Default size is medium\n}) => {\n  const [hasError, setHasError] = useState(false);\n\n  // Determine size classes\n  const sizeClasses = {\n    small: 'w-8 h-8',\n    medium: 'w-12 h-12',\n    large: 'w-16 h-16'\n  };\n\n  const iconSize = {\n    small: 16,\n    medium: 20,\n    large: 24\n  };\n\n  // If no image URL or there was an error loading the image, show placeholder\n  if (!imageUrl || hasError) {\n    return (\n      <div className={`relative ${sizeClasses[size]} rounded-full overflow-hidden border-2 border-yellow-400`}>\n        <div className=\"w-full h-full bg-gray-100 flex items-center justify-center\">\n          <div className=\"text-yellow-500\">\n            <ShoppingCart size={iconSize[size]} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show the actual image\n  return (\n    <div className={`relative ${sizeClasses[size]} rounded-full overflow-hidden border-2 border-yellow-400 group`}>\n      <Image\n        src={imageUrl}\n        alt={`Order ${orderId} design`}\n        fill\n        style={{ objectFit: 'cover' }}\n        onError={() => setHasError(true)}\n        unoptimized // Skip Next.js image optimization\n      />\n\n      {/* Hover overlay with zoom effect */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100\">\n        <div className=\"text-white transform scale-0 group-hover:scale-100 transition-transform duration-300\">\n          <Eye size={iconSize[size]} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderImageThumbnail;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;;;AAJA;;;;AAYA,MAAM,sBAA0D,CAAC,EAC/D,QAAQ,EACR,OAAO,EACP,OAAO,SAAS,yBAAyB;AAA1B,EAChB;;IACC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,yBAAyB;IACzB,MAAM,cAAc;QAClB,OAAO;QACP,QAAQ;QACR,OAAO;IACT;IAEA,MAAM,WAAW;QACf,OAAO;QACP,QAAQ;QACR,OAAO;IACT;IAEA,4EAA4E;IAC5E,IAAI,CAAC,YAAY,UAAU;QACzB,qBACE,6LAAC;YAAI,WAAW,CAAC,SAAS,EAAE,WAAW,CAAC,KAAK,CAAC,wDAAwD,CAAC;sBACrG,cAAA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,yNAAA,CAAA,eAAY;wBAAC,MAAM,QAAQ,CAAC,KAAK;;;;;;;;;;;;;;;;;;;;;IAK5C;IAEA,wBAAwB;IACxB,qBACE,6LAAC;QAAI,WAAW,CAAC,SAAS,EAAE,WAAW,CAAC,KAAK,CAAC,8DAA8D,CAAC;;0BAC3G,6LAAC,gIAAA,CAAA,UAAK;gBACJ,KAAK;gBACL,KAAK,CAAC,MAAM,EAAE,QAAQ,OAAO,CAAC;gBAC9B,IAAI;gBACJ,OAAO;oBAAE,WAAW;gBAAQ;gBAC5B,SAAS,IAAM,YAAY;gBAC3B,WAAW;;;;;;0BAIb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,mMAAA,CAAA,MAAG;wBAAC,MAAM,QAAQ,CAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;AAKnC;GArDM;KAAA;uCAuDS","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/components/OrderDetailsModal.tsx"],"sourcesContent":["'use client';\n\nimport { X } from 'lucide-react';\nimport Image from 'next/image';\nimport dynamic from 'next/dynamic';\n\n// Use dynamic import to avoid SSR issues with Image component\nconst DynamicImage = dynamic(() => Promise.resolve(Image), { ssr: false });\n\ninterface OrderDetailsModalProps {\n  order: any;\n  supplierName: string;\n  supplierPhone?: string;\n  createdByName?: string;\n  onClose: () => void;\n}\n\nconst OrderDetailsModal = ({ order, supplierName, supplierPhone = 'Not available', createdByName = 'Not available', onClose }: OrderDetailsModalProps) => {\n  // Parse JSON strings if needed\n  const selectedKarats = order.selected_karats ? \n    (typeof order.selected_karats === 'string' ? \n      JSON.parse(order.selected_karats) : \n      order.selected_karats) : \n    [];\n  \n  const karatValues = order.karat_values ? \n    (typeof order.karat_values === 'string' ? \n      JSON.parse(order.karat_values) : \n      order.karat_values) : \n    {};\n\n  // Format date\n  const formatDate = (dateString: string) => {\n    if (!dateString) return 'N/A';\n    const date = new Date(dateString);\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-3xl max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-6 border-b\">\n          <h2 className=\"text-2xl font-bold\">Order Details #{order.order_id}</h2>\n          <button \n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700\"\n          >\n            <X size={24} />\n          </button>\n        </div>\n        \n        {/* Content */}\n        <div className=\"p-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Left column */}\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">Order Information</h3>\n              \n              <div className=\"space-y-3\">\n                <div>\n                  <p className=\"text-sm text-gray-500\">Order ID</p>\n                  <p className=\"font-medium\">#{order.order_id}</p>\n                </div>\n                \n                <div>\n                  <p className=\"text-sm text-gray-500\">Category</p>\n                  <p className=\"font-medium\">{order.category}</p>\n                </div>\n                \n                <div>\n                  <p className=\"text-sm text-gray-500\">Quantity</p>\n                  <p className=\"font-medium\">{order.quantity}</p>\n                </div>\n                \n                <div>\n                  <p className=\"text-sm text-gray-500\">Status</p>\n                  <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full \n                    ${order.status === 'pending' ? 'bg-yellow-100 text-yellow-800' : \n                      order.status === 'completed' ? 'bg-green-100 text-green-800' : \n                      order.status === 'cancelled' ? 'bg-red-100 text-red-800' : \n                      'bg-blue-100 text-blue-800'}`}\n                  >\n                    {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                  </span>\n                </div>\n                \n                <div>\n                  <p className=\"text-sm text-gray-500\">Created At</p>\n                  <p className=\"font-medium\">{formatDate(order.created_at)}</p>\n                </div>\n                \n                <div>\n                  <p className=\"text-sm text-gray-500\">Last Updated</p>\n                  <p className=\"font-medium\">{order.updated_at ? formatDate(order.updated_at) : 'Not updated'}</p>\n                </div>\n              </div>\n            </div>\n            \n            {/* Right column */}\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">Additional Details</h3>\n              \n              <div className=\"space-y-3\">\n                <div>\n                  <p className=\"text-sm text-gray-500\">Supplier</p>\n                  <p className=\"font-medium\">{supplierName}</p>\n                  <p className=\"text-xs text-gray-500 mt-1\">ID: {order.supplier_id}</p>\n                </div>\n                \n                <div>\n                  <p className=\"text-sm text-gray-500\">Supplier Phone</p>\n                  <p className=\"font-medium\">{supplierPhone}</p>\n                </div>\n                \n                <div>\n                  <p className=\"text-sm text-gray-500\">Branch</p>\n                  <p className=\"font-medium\">\n                    {order.branch_name || \n                     (order.branch_id === 1 ? 'Mahiyangana Branch' : \n                      order.branch_id === 2 ? 'Mahaoya Branch' : \n                      'Not assigned')}\n                  </p>\n                </div>\n                \n                <div>\n                  <p className=\"text-sm text-gray-500\">Gold Provided</p>\n                  <p className=\"font-medium\">{order.offer_gold ? 'Yes' : 'No'}</p>\n                </div>\n                \n                {order.offer_gold === 1 && selectedKarats.length > 0 && (\n                  <div>\n                    <p className=\"text-sm text-gray-500\">Selected Karats</p>\n                    <div className=\"flex flex-wrap gap-2 mt-1\">\n                      {selectedKarats.map((karat: string, index: number) => (\n                        <span key={index} className=\"px-2 py-1 bg-gray-100 rounded text-sm\">\n                          {karat} ({karatValues[karat] || 0}g)\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                )}\n                \n                <div>\n                  <p className=\"text-sm text-gray-500\">Created By</p>\n                  <p className=\"font-medium\">{createdByName}</p>\n                </div>\n                \n                {order.store_manager_name && (\n                  <div>\n                    <p className=\"text-sm text-gray-500\">Store Manager</p>\n                    <p className=\"font-medium\">{order.store_manager_name}</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          \n          {/* Design Image */}\n          {order.design_image_url && (\n            <div className=\"mt-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Design Image</h3>\n              <div className=\"flex justify-center\">\n                <div className=\"relative w-64 h-64 border border-gray-200 rounded-lg overflow-hidden\">\n                  <DynamicImage \n                    src={order.design_image_url}\n                    alt={`Design for order #${order.order_id}`}\n                    fill\n                    style={{ objectFit: 'contain' }}\n                    className=\"p-2\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Footer */}\n        <div className=\"flex justify-end p-6 border-t\">\n          <button \n            onClick={onClose}\n            className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderDetailsModal;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,8DAA8D;AAC9D,MAAM,eAAe,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,IAAM,QAAQ,OAAO,CAAC,gIAAA,CAAA,UAAK,GAAG;IAAE,KAAK;AAAM;KAAlE;AAUN,MAAM,oBAAoB,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,gBAAgB,eAAe,EAAE,gBAAgB,eAAe,EAAE,OAAO,EAA0B;IACnJ,+BAA+B;IAC/B,MAAM,iBAAiB,MAAM,eAAe,GACzC,OAAO,MAAM,eAAe,KAAK,WAChC,KAAK,KAAK,CAAC,MAAM,eAAe,IAChC,MAAM,eAAe,GACvB,EAAE;IAEJ,MAAM,cAAc,MAAM,YAAY,GACnC,OAAO,MAAM,YAAY,KAAK,WAC7B,KAAK,KAAK,CAAC,MAAM,YAAY,IAC7B,MAAM,YAAY,GACpB,CAAC;IAEH,cAAc;IACd,MAAM,aAAa,CAAC;QAClB,IAAI,CAAC,YAAY,OAAO;QACxB,MAAM,OAAO,IAAI,KAAK;QACtB,OAAO,KAAK,kBAAkB,KAAK,MAAM,KAAK,kBAAkB;IAClE;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;;gCAAqB;gCAAgB,MAAM,QAAQ;;;;;;;sCACjE,6LAAC;4BACC,SAAS;4BACT,WAAU;sCAEV,cAAA,6LAAC,+LAAA,CAAA,IAAC;gCAAC,MAAM;;;;;;;;;;;;;;;;;8BAKb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CAEb,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAE3C,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,6LAAC;4DAAE,WAAU;;gEAAc;gEAAE,MAAM,QAAQ;;;;;;;;;;;;;8DAG7C,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,6LAAC;4DAAE,WAAU;sEAAe,MAAM,QAAQ;;;;;;;;;;;;8DAG5C,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,6LAAC;4DAAE,WAAU;sEAAe,MAAM,QAAQ;;;;;;;;;;;;8DAG5C,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,6LAAC;4DAAK,WAAW,CAAC;oBAChB,EAAE,MAAM,MAAM,KAAK,YAAY,kCAC7B,MAAM,MAAM,KAAK,cAAc,gCAC/B,MAAM,MAAM,KAAK,cAAc,4BAC/B,6BAA6B;sEAE9B,MAAM,MAAM,CAAC,MAAM,CAAC,GAAG,WAAW,KAAK,MAAM,MAAM,CAAC,KAAK,CAAC;;;;;;;;;;;;8DAI/D,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,6LAAC;4DAAE,WAAU;sEAAe,WAAW,MAAM,UAAU;;;;;;;;;;;;8DAGzD,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,6LAAC;4DAAE,WAAU;sEAAe,MAAM,UAAU,GAAG,WAAW,MAAM,UAAU,IAAI;;;;;;;;;;;;;;;;;;;;;;;;8CAMpF,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAE3C,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,6LAAC;4DAAE,WAAU;sEAAe;;;;;;sEAC5B,6LAAC;4DAAE,WAAU;;gEAA6B;gEAAK,MAAM,WAAW;;;;;;;;;;;;;8DAGlE,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,6LAAC;4DAAE,WAAU;sEAAe;;;;;;;;;;;;8DAG9B,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,6LAAC;4DAAE,WAAU;sEACV,MAAM,WAAW,IACjB,CAAC,MAAM,SAAS,KAAK,IAAI,uBACxB,MAAM,SAAS,KAAK,IAAI,mBACxB,cAAc;;;;;;;;;;;;8DAIpB,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,6LAAC;4DAAE,WAAU;sEAAe,MAAM,UAAU,GAAG,QAAQ;;;;;;;;;;;;gDAGxD,MAAM,UAAU,KAAK,KAAK,eAAe,MAAM,GAAG,mBACjD,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,6LAAC;4DAAI,WAAU;sEACZ,eAAe,GAAG,CAAC,CAAC,OAAe,sBAClC,6LAAC;oEAAiB,WAAU;;wEACzB;wEAAM;wEAAG,WAAW,CAAC,MAAM,IAAI;wEAAE;;mEADzB;;;;;;;;;;;;;;;;8DAQnB,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,6LAAC;4DAAE,WAAU;sEAAe;;;;;;;;;;;;gDAG7B,MAAM,kBAAkB,kBACvB,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,6LAAC;4DAAE,WAAU;sEAAe,MAAM,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBAQ7D,MAAM,gBAAgB,kBACrB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAA6B;;;;;;8CAC3C,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CACC,KAAK,MAAM,gBAAgB;4CAC3B,KAAK,CAAC,kBAAkB,EAAE,MAAM,QAAQ,EAAE;4CAC1C,IAAI;4CACJ,OAAO;gDAAE,WAAW;4CAAU;4CAC9B,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAStB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;;;;;;;;;AAOX;MA5KM;uCA8KS","debugId":null}},
    {"offset": {"line": 681, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 687, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/app/DashView/orders/view/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Eye, Edit, Trash2, Search, Filter } from 'lucide-react';\nimport OrderImageThumbnail from '../../../../components/OrderImageThumbnail';\nimport OrderDetailsModal from '../../../../components/OrderDetailsModal';\n\ninterface Order {\n  order_id: number;\n  category: string;\n  supplier_id: string;\n  quantity: number;\n  offer_gold: number;\n  selected_karats: string;\n  karat_values: string;\n  design_image: string | null;\n  design_image_url?: string;\n  status: string;\n  created_at: string;\n  branch_id?: number;\n  branch_name?: string;\n  created_by?: number;\n  store_manager_name?: string;\n}\n\nconst ViewOrdersPage = () => {\n  const [orders, setOrders] = useState<Order[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [supplierNames, setSupplierNames] = useState<{[key: string]: string}>({});\n  const [supplierPhones, setSupplierPhones] = useState<{[key: string]: string}>({});\n  const [orderCreators, setOrderCreators] = useState<{[key: number]: string}>({});\n  const [userRole, setUserRole] = useState<string>('');\n  const [userBranchId, setUserBranchId] = useState<number | null>(null);\n\n  // Advanced filter states\n  const [showAdvancedFilters, setShowAdvancedFilters] = useState(false);\n  const [branchFilter, setBranchFilter] = useState('all');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [branches, setBranches] = useState<{branch_id: number, branch_name: string}[]>([]);\n\n  // Order details modal state\n  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);\n  const [showOrderDetails, setShowOrderDetails] = useState(false);\n\n  // Get user role and branch ID from localStorage\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const role = localStorage.getItem('role');\n      const branchId = localStorage.getItem('branchId');\n\n      if (role) {\n        // Normalize role to match what the backend expects\n        let normalizedRole = role;\n        const roleLower = normalizedRole.toLowerCase();\n\n        if (roleLower.includes('store') && roleLower.includes('manager')) {\n          normalizedRole = 'storemanager';\n        } else if (roleLower.includes('sales') && roleLower.includes('associate')) {\n          normalizedRole = 'salesassociate';\n        } else if (roleLower.includes('admin')) {\n          normalizedRole = 'admin';\n        } else if (roleLower.includes('cashier')) {\n          normalizedRole = 'cashier';\n        }\n\n        // Make sure we have a valid branch ID for non-admin users\n        let parsedBranchId = branchId ? Number(branchId) : null;\n\n        // If the role is not admin and we don't have a branch ID, use a default\n        if (normalizedRole !== 'admin' && !parsedBranchId) {\n          parsedBranchId = 1; // Default to branch ID 1 (Mahiyangana)\n        }\n\n        setUserRole(normalizedRole);\n        setUserBranchId(parsedBranchId);\n      } else {\n        // Set default values if no role\n        setUserRole('unknown');\n        setUserBranchId(0);\n      }\n    }\n  }, []);\n\n  // Fetch orders from the backend\n  useEffect(() => {\n    // Only skip if we're still waiting for user data to load\n    if (!userRole && userBranchId === null) {\n      return;\n    }\n\n    // If we have a role but it's not admin and no branch ID, use a default\n    if (userRole && !userRole.includes('admin') && userBranchId === null) {\n      setUserBranchId(1); // Use branch ID 1 (Mahiyangana) as default\n      return; // Will trigger another useEffect run with the updated branchId\n    }\n\n    const fetchOrders = async () => {\n      try {\n        setLoading(true);\n\n        // Construct URL with query parameters for branch filtering\n        let url = 'http://localhost:3002/orders';\n        const params = new URLSearchParams();\n\n        // Always send the role parameter\n        params.append('role', userRole || '');\n\n        // For non-admin users, branch filtering is mandatory\n        if (!userRole.includes('admin')) {\n          // If branchId is not available, use a fallback to prevent seeing all orders\n          const branchIdParam = userBranchId?.toString() || '1';\n          params.append('branch_id', branchIdParam);\n        }\n\n        // Add the parameters to the URL\n        url += `?${params.toString()}`;\n\n        const response = await fetch(url);\n\n        if (!response.ok) {\n          throw new Error(`Failed to fetch orders: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        // Process image URLs\n        const processedData = data.map((order: Order) => {\n          if (order.design_image) {\n            // Construct the full URL for the image\n            // Make sure we don't duplicate the /uploads/ part\n            const imagePath = order.design_image.startsWith('uploads/')\n              ? order.design_image\n              : `uploads/${order.design_image}`;\n\n            order.design_image_url = `http://localhost:3002/${imagePath}`;\n          }\n          return order;\n        });\n\n        setOrders(processedData);\n\n        // Fetch supplier names for all unique supplier IDs\n        const uniqueSupplierIds = [...new Set(data.map((order: Order) => order.supplier_id))] as string[];\n        fetchSupplierNames(uniqueSupplierIds);\n        \n        // Fetch order creators\n        fetchOrderCreators();\n\n      } catch (err) {\n        console.error('Error fetching orders:', err);\n        setError(err instanceof Error ? err.message : 'An unknown error occurred');\n\n        // Use dummy data for development\n        setOrders([\n          {\n            order_id: 1,\n            category: 'Wedding Sets',\n            supplier_id: '001',\n            quantity: 10,\n            offer_gold: 1,\n            selected_karats: JSON.stringify(['24KT', '22KT']),\n            karat_values: JSON.stringify({ '24KT': 50, '22KT': 45 }),\n            design_image: 'images/sample_wedding_set.jpg',\n            design_image_url: 'http://localhost:3002/uploads/images/sample_wedding_set.jpg',\n            status: 'pending',\n            created_at: new Date().toISOString()\n          },\n          {\n            order_id: 2,\n            category: 'Rings',\n            supplier_id: '002',\n            quantity: 20,\n            offer_gold: 1,\n            selected_karats: JSON.stringify(['22KT']),\n            karat_values: JSON.stringify({ '22KT': 40 }),\n            design_image: 'images/sample_ring.jpg',\n            design_image_url: 'http://localhost:3002/uploads/images/sample_ring.jpg',\n            status: 'completed',\n            created_at: new Date(Date.now() - 86400000).toISOString() // Yesterday\n          },\n          {\n            order_id: 3,\n            category: 'Necklaces',\n            supplier_id: '003',\n            quantity: 5,\n            offer_gold: 0,\n            selected_karats: JSON.stringify([]),\n            karat_values: JSON.stringify({}),\n            design_image: 'images/sample_necklace.jpg',\n            design_image_url: 'http://localhost:3002/uploads/images/sample_necklace.jpg',\n            status: 'cancelled',\n            created_at: new Date(Date.now() - 172800000).toISOString() // 2 days ago\n          }\n        ]);\n\n        // Set dummy supplier names\n        setSupplierNames({\n          '001': 'Mohamad Nazeem',\n          '002': 'Abdulla Nazeem',\n          '003': 'Vaseem Akram',\n          '004': 'Mohamad Sami'\n        });\n        \n        // Set dummy supplier phone numbers\n        setSupplierPhones({\n          '001': '+94 77 123 4567',\n          '002': '+94 76 234 5678',\n          '003': '+94 75 345 6789',\n          '004': '+94 74 456 7890'\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchOrders();\n  }, [userRole, userBranchId]);\n\n  // Fetch branches for filtering\n  useEffect(() => {\n    // Only fetch branches for admin users\n    if (userRole === 'admin') {\n      const fetchBranches = async () => {\n        try {\n          const response = await fetch('http://localhost:3002/branches');\n          if (response.ok) {\n            const data = await response.json();\n            setBranches(data);\n          }\n        } catch (err) {\n          console.error('Error fetching branches:', err);\n          // Set default branches if fetch fails\n          setBranches([\n            { branch_id: 1, branch_name: 'Mahiyangana Branch' },\n            { branch_id: 2, branch_name: 'Mahaoya Branch' }\n          ]);\n        }\n      };\n      \n      fetchBranches();\n    }\n  }, [userRole]);\n\n  // Fetch supplier information\n  const fetchSupplierNames = async (supplierIds: string[]) => {\n    try {\n      const response = await fetch('http://localhost:3002/suppliers');\n      if (response.ok) {\n        const suppliers = await response.json();\n        const namesMap: {[key: string]: string} = {};\n        const phonesMap: {[key: string]: string} = {};\n\n        suppliers.forEach((supplier: any) => {\n          if (supplierIds.includes(supplier.supplier_id)) {\n            namesMap[supplier.supplier_id] = supplier.name || 'Unknown';\n            phonesMap[supplier.supplier_id] = supplier.phone || 'Not available';\n          }\n        });\n\n        setSupplierNames(namesMap);\n        setSupplierPhones(phonesMap);\n      }\n    } catch (err) {\n      console.error('Error fetching supplier information:', err);\n    }\n  };\n  \n  // Fetch order creators\n  const fetchOrderCreators = async () => {\n    try {\n      // Set default values for testing\n      const creatorsMap: {[key: number]: string} = {};\n      \n      // For each order, set a default creator name based on branch\n      orders.forEach(order => {\n        if (order.branch_id === 1) {\n          creatorsMap[order.order_id] = 'Mahiyangana Manager';\n        } else if (order.branch_id === 2) {\n          creatorsMap[order.order_id] = 'Mahaoya Manager';\n        } else {\n          creatorsMap[order.order_id] = 'System Admin';\n        }\n      });\n      \n      // Try to fetch real data if available\n      try {\n        const response = await fetch('http://localhost:3002/users');\n        if (response.ok) {\n          const users = await response.json();\n          \n          // Update with real data where possible\n          orders.forEach(order => {\n            // Skip if no created_by field\n            if (!order.created_by) return;\n            \n            const creator = users.find((user: any) => user.user_id === order.created_by);\n            if (creator && creator.first_name && creator.last_name) {\n              creatorsMap[order.order_id] = `${creator.first_name} ${creator.last_name}`;\n            }\n          });\n        }\n      } catch (innerErr) {\n        console.log('Could not fetch real user data, using defaults');\n      }\n      \n      setOrderCreators(creatorsMap);\n    } catch (err) {\n      console.error('Error in fetchOrderCreators:', err);\n    }\n  };\n\n  // Handle order deletion\n  const handleDeleteOrder = async (orderId: number) => {\n    if (!window.confirm('Are you sure you want to delete this order?')) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:3002/orders/delete/${orderId}`, {\n        method: 'DELETE'\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete order');\n      }\n\n      // Remove the deleted order from the state\n      setOrders(orders.filter(order => order.order_id !== orderId));\n      alert('Order deleted successfully');\n    } catch (err) {\n      console.error('Error deleting order:', err);\n      alert('Failed to delete order');\n    }\n  };\n\n  // Apply filters function\n  const applyFilters = () => {\n    // Reset any existing filters\n    setShowAdvancedFilters(false);\n  };\n\n  // Reset filters function\n  const resetFilters = () => {\n    setBranchFilter('all');\n    setStartDate('');\n    setEndDate('');\n  };\n\n  // Filter and search orders\n  const filteredOrders = orders.filter(order => {\n    // Apply status filter\n    if (statusFilter !== 'all' && order.status !== statusFilter) {\n      return false;\n    }\n\n    // Apply branch filter (for admin only)\n    if (userRole === 'admin' && branchFilter !== 'all') {\n      const orderBranchId = order.branch_id?.toString() || '';\n      if (orderBranchId !== branchFilter) {\n        return false;\n      }\n    }\n\n    // Apply date range filter\n    if (startDate && endDate) {\n      const orderDate = new Date(order.created_at);\n      const filterStartDate = new Date(startDate);\n      const filterEndDate = new Date(endDate);\n      \n      // Set end date to end of day\n      filterEndDate.setHours(23, 59, 59, 999);\n      \n      if (orderDate < filterStartDate || orderDate > filterEndDate) {\n        return false;\n      }\n    } else if (startDate) {\n      const orderDate = new Date(order.created_at);\n      const filterStartDate = new Date(startDate);\n      if (orderDate < filterStartDate) {\n        return false;\n      }\n    } else if (endDate) {\n      const orderDate = new Date(order.created_at);\n      const filterEndDate = new Date(endDate);\n      // Set end date to end of day\n      filterEndDate.setHours(23, 59, 59, 999);\n      if (orderDate > filterEndDate) {\n        return false;\n      }\n    }\n\n    // Apply search term\n    const searchLower = searchTerm.toLowerCase();\n    return (\n      order.order_id.toString().includes(searchLower) ||\n      order.category.toLowerCase().includes(searchLower) ||\n      (supplierNames[order.supplier_id] || '').toLowerCase().includes(searchLower) ||\n      order.supplier_id.toLowerCase().includes(searchLower)\n    );\n  });\n\n  // Handle view order details\n  const handleViewOrderDetails = (order: Order) => {\n    setSelectedOrder(order);\n    setShowOrderDetails(true);\n  };\n\n  // Close order details modal\n  const handleCloseOrderDetails = () => {\n    setShowOrderDetails(false);\n    setSelectedOrder(null);\n  };\n\n  // Format date\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\n  };\n\n  // Get status badge color\n  const getStatusBadgeColor = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'cancelled':\n        return 'bg-red-100 text-red-800';\n      case 'processing':\n        return 'bg-blue-100 text-blue-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"w-12 h-12 border-4 border-yellow-400 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n        <p>Error loading orders: {error}</p>\n        <p>Using sample data instead.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"mb-6\">\n          <h2 className=\"text-2xl font-bold\">View Orders</h2>\n        </div>\n\n        {/* Search and Filter */}\n        <div className=\"flex flex-col md:flex-row justify-between mb-6 gap-4\">\n          <div className=\"relative\">\n            <input\n              type=\"text\"\n              placeholder=\"Search orders...\"\n              className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-md w-full md:w-64\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n            <Search className=\"absolute left-3 top-2.5 text-gray-400\" size={18} />\n          </div>\n\n          <div className=\"flex gap-2\">\n            <select\n              className=\"px-4 py-2 border border-gray-300 rounded-md\"\n              value={statusFilter}\n              onChange={(e) => setStatusFilter(e.target.value)}\n            >\n              <option value=\"all\">All Statuses</option>\n              <option value=\"pending\">Pending</option>\n              <option value=\"processing\">Processing</option>\n              <option value=\"completed\">Completed</option>\n              <option value=\"cancelled\">Cancelled</option>\n            </select>\n\n            <button\n              className=\"p-2 border border-gray-300 rounded-md\"\n              onClick={() => setShowAdvancedFilters(!showAdvancedFilters)}\n              title=\"Advanced Filters\"\n            >\n              <Filter size={20} className=\"text-gray-500\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Advanced Filters - Only visible for admin users */}\n        {showAdvancedFilters && userRole === 'admin' && (\n          <div className=\"mb-6 p-4 border border-gray-200 rounded-lg bg-gray-50\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-semibold\">Advanced Filters</h3>\n              <button\n                onClick={resetFilters}\n                className=\"text-blue-600 hover:text-blue-800 text-sm\"\n              >\n                Reset\n              </button>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              {/* Branch Filter */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Branch</label>\n                <select\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  value={branchFilter}\n                  onChange={(e) => setBranchFilter(e.target.value)}\n                >\n                  <option value=\"all\">All Branches</option>\n                  {branches.map(branch => (\n                    <option key={branch.branch_id} value={branch.branch_id.toString()}>\n                      {branch.branch_name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              {/* Start Date Filter */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Start Date</label>\n                <input\n                  type=\"date\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  value={startDate}\n                  onChange={(e) => setStartDate(e.target.value)}\n                />\n              </div>\n              \n              {/* End Date Filter */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">End Date</label>\n                <input\n                  type=\"date\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  value={endDate}\n                  onChange={(e) => setEndDate(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"mt-4 flex justify-end\">\n              <button\n                onClick={applyFilters}\n                className=\"px-4 py-2 bg-yellow-400 text-black rounded-md hover:bg-yellow-500\"\n              >\n                Apply Filters\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Orders Table */}\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Order ID\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Image\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Category\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Supplier\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Branch\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Quantity\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Created At\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {filteredOrders.length === 0 ? (\n                <tr>\n                  <td colSpan={9} className=\"px-6 py-4 text-center text-gray-500\">\n                    No orders found\n                  </td>\n                </tr>\n              ) : (\n                filteredOrders.map((order) => (\n                  <tr key={order.order_id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      #{order.order_id}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <OrderImageThumbnail\n                        imageUrl={order.design_image_url || order.design_image}\n                        orderId={order.order_id}\n                      />\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {order.category}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {supplierNames[order.supplier_id] || order.supplier_id}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {order.branch_name ||\n                       (order.branch_id === 1 ? 'Mahiyangana Branch' :\n                        order.branch_id === 2 ? 'Mahaoya Branch' :\n                        'Not assigned')}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {order.quantity}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusBadgeColor(order.status)}`}>\n                        {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {formatDate(order.created_at)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <div className=\"flex space-x-2\">\n                        <button\n                          className=\"text-blue-600 hover:text-blue-900\"\n                          title=\"View Details\"\n                          onClick={() => handleViewOrderDetails(order)}\n                        >\n                          <Eye size={18} />\n                        </button>\n                        <button\n                          className=\"text-yellow-600 hover:text-yellow-900\"\n                          title=\"Edit Order\"\n                          onClick={() => alert(`Edit order #${order.order_id}`)}\n                        >\n                          <Edit size={18} />\n                        </button>\n                        <button\n                          className=\"text-red-600 hover:text-red-900\"\n                          title=\"Delete Order\"\n                          onClick={() => handleDeleteOrder(order.order_id)}\n                        >\n                          <Trash2 size={18} />\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Pagination (simplified) */}\n        <div className=\"flex justify-between items-center mt-6\">\n          <div className=\"text-sm text-gray-500\">\n            Showing {filteredOrders.length} of {orders.length} orders\n          </div>\n          <div className=\"flex space-x-2\">\n            <button className=\"px-3 py-1 border border-gray-300 rounded-md disabled:opacity-50\">\n              Previous\n            </button>\n            <button className=\"px-3 py-1 bg-yellow-400 text-black rounded-md\">\n              1\n            </button>\n            <button className=\"px-3 py-1 border border-gray-300 rounded-md disabled:opacity-50\">\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Order Details Modal */}\n      {showOrderDetails && selectedOrder && (\n        <OrderDetailsModal\n          order={selectedOrder}\n          supplierName={supplierNames[selectedOrder.supplier_id] || selectedOrder.supplier_id}\n          supplierPhone={supplierPhones[selectedOrder.supplier_id] || 'Not available'}\n          createdByName={orderCreators[selectedOrder.order_id] || 'Not available'}\n          onClose={handleCloseOrderDetails}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ViewOrdersPage;"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AALA;;;;;AAyBA,MAAM,iBAAiB;;IACrB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA2B,CAAC;IAC7E,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA2B,CAAC;IAC/E,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA2B,CAAC;IAC7E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACjD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhE,yBAAyB;IACzB,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA8C,EAAE;IAEvF,4BAA4B;IAC5B,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB;IACjE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,gDAAgD;IAChD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,wCAAmC;gBACjC,MAAM,OAAO,aAAa,OAAO,CAAC;gBAClC,MAAM,WAAW,aAAa,OAAO,CAAC;gBAEtC,IAAI,MAAM;oBACR,mDAAmD;oBACnD,IAAI,iBAAiB;oBACrB,MAAM,YAAY,eAAe,WAAW;oBAE5C,IAAI,UAAU,QAAQ,CAAC,YAAY,UAAU,QAAQ,CAAC,YAAY;wBAChE,iBAAiB;oBACnB,OAAO,IAAI,UAAU,QAAQ,CAAC,YAAY,UAAU,QAAQ,CAAC,cAAc;wBACzE,iBAAiB;oBACnB,OAAO,IAAI,UAAU,QAAQ,CAAC,UAAU;wBACtC,iBAAiB;oBACnB,OAAO,IAAI,UAAU,QAAQ,CAAC,YAAY;wBACxC,iBAAiB;oBACnB;oBAEA,0DAA0D;oBAC1D,IAAI,iBAAiB,WAAW,OAAO,YAAY;oBAEnD,wEAAwE;oBACxE,IAAI,mBAAmB,WAAW,CAAC,gBAAgB;wBACjD,iBAAiB,GAAG,uCAAuC;oBAC7D;oBAEA,YAAY;oBACZ,gBAAgB;gBAClB,OAAO;oBACL,gCAAgC;oBAChC,YAAY;oBACZ,gBAAgB;gBAClB;YACF;QACF;mCAAG,EAAE;IAEL,gCAAgC;IAChC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,yDAAyD;YACzD,IAAI,CAAC,YAAY,iBAAiB,MAAM;gBACtC;YACF;YAEA,uEAAuE;YACvE,IAAI,YAAY,CAAC,SAAS,QAAQ,CAAC,YAAY,iBAAiB,MAAM;gBACpE,gBAAgB,IAAI,2CAA2C;gBAC/D,QAAQ,+DAA+D;YACzE;YAEA,MAAM;wDAAc;oBAClB,IAAI;wBACF,WAAW;wBAEX,2DAA2D;wBAC3D,IAAI,MAAM;wBACV,MAAM,SAAS,IAAI;wBAEnB,iCAAiC;wBACjC,OAAO,MAAM,CAAC,QAAQ,YAAY;wBAElC,qDAAqD;wBACrD,IAAI,CAAC,SAAS,QAAQ,CAAC,UAAU;4BAC/B,4EAA4E;4BAC5E,MAAM,gBAAgB,cAAc,cAAc;4BAClD,OAAO,MAAM,CAAC,aAAa;wBAC7B;wBAEA,gCAAgC;wBAChC,OAAO,CAAC,CAAC,EAAE,OAAO,QAAQ,IAAI;wBAE9B,MAAM,WAAW,MAAM,MAAM;wBAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;4BAChB,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,SAAS,MAAM,EAAE;wBAC9D;wBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;wBAEhC,qBAAqB;wBACrB,MAAM,gBAAgB,KAAK,GAAG;kFAAC,CAAC;gCAC9B,IAAI,MAAM,YAAY,EAAE;oCACtB,uCAAuC;oCACvC,kDAAkD;oCAClD,MAAM,YAAY,MAAM,YAAY,CAAC,UAAU,CAAC,cAC5C,MAAM,YAAY,GAClB,CAAC,QAAQ,EAAE,MAAM,YAAY,EAAE;oCAEnC,MAAM,gBAAgB,GAAG,CAAC,sBAAsB,EAAE,WAAW;gCAC/D;gCACA,OAAO;4BACT;;wBAEA,UAAU;wBAEV,mDAAmD;wBACnD,MAAM,oBAAoB;+BAAI,IAAI,IAAI,KAAK,GAAG;wEAAC,CAAC,QAAiB,MAAM,WAAW;;yBAAG;wBACrF,mBAAmB;wBAEnB,uBAAuB;wBACvB;oBAEF,EAAE,OAAO,KAAK;wBACZ,QAAQ,KAAK,CAAC,0BAA0B;wBACxC,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;wBAE9C,iCAAiC;wBACjC,UAAU;4BACR;gCACE,UAAU;gCACV,UAAU;gCACV,aAAa;gCACb,UAAU;gCACV,YAAY;gCACZ,iBAAiB,KAAK,SAAS,CAAC;oCAAC;oCAAQ;iCAAO;gCAChD,cAAc,KAAK,SAAS,CAAC;oCAAE,QAAQ;oCAAI,QAAQ;gCAAG;gCACtD,cAAc;gCACd,kBAAkB;gCAClB,QAAQ;gCACR,YAAY,IAAI,OAAO,WAAW;4BACpC;4BACA;gCACE,UAAU;gCACV,UAAU;gCACV,aAAa;gCACb,UAAU;gCACV,YAAY;gCACZ,iBAAiB,KAAK,SAAS,CAAC;oCAAC;iCAAO;gCACxC,cAAc,KAAK,SAAS,CAAC;oCAAE,QAAQ;gCAAG;gCAC1C,cAAc;gCACd,kBAAkB;gCAClB,QAAQ;gCACR,YAAY,IAAI,KAAK,KAAK,GAAG,KAAK,UAAU,WAAW,GAAG,YAAY;4BACxE;4BACA;gCACE,UAAU;gCACV,UAAU;gCACV,aAAa;gCACb,UAAU;gCACV,YAAY;gCACZ,iBAAiB,KAAK,SAAS,CAAC,EAAE;gCAClC,cAAc,KAAK,SAAS,CAAC,CAAC;gCAC9B,cAAc;gCACd,kBAAkB;gCAClB,QAAQ;gCACR,YAAY,IAAI,KAAK,KAAK,GAAG,KAAK,WAAW,WAAW,GAAG,aAAa;4BAC1E;yBACD;wBAED,2BAA2B;wBAC3B,iBAAiB;4BACf,OAAO;4BACP,OAAO;4BACP,OAAO;4BACP,OAAO;wBACT;wBAEA,mCAAmC;wBACnC,kBAAkB;4BAChB,OAAO;4BACP,OAAO;4BACP,OAAO;4BACP,OAAO;wBACT;oBACF,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;mCAAG;QAAC;QAAU;KAAa;IAE3B,+BAA+B;IAC/B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,sCAAsC;YACtC,IAAI,aAAa,SAAS;gBACxB,MAAM;8DAAgB;wBACpB,IAAI;4BACF,MAAM,WAAW,MAAM,MAAM;4BAC7B,IAAI,SAAS,EAAE,EAAE;gCACf,MAAM,OAAO,MAAM,SAAS,IAAI;gCAChC,YAAY;4BACd;wBACF,EAAE,OAAO,KAAK;4BACZ,QAAQ,KAAK,CAAC,4BAA4B;4BAC1C,sCAAsC;4BACtC,YAAY;gCACV;oCAAE,WAAW;oCAAG,aAAa;gCAAqB;gCAClD;oCAAE,WAAW;oCAAG,aAAa;gCAAiB;6BAC/C;wBACH;oBACF;;gBAEA;YACF;QACF;mCAAG;QAAC;KAAS;IAEb,6BAA6B;IAC7B,MAAM,qBAAqB,OAAO;QAChC,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,WAAoC,CAAC;gBAC3C,MAAM,YAAqC,CAAC;gBAE5C,UAAU,OAAO,CAAC,CAAC;oBACjB,IAAI,YAAY,QAAQ,CAAC,SAAS,WAAW,GAAG;wBAC9C,QAAQ,CAAC,SAAS,WAAW,CAAC,GAAG,SAAS,IAAI,IAAI;wBAClD,SAAS,CAAC,SAAS,WAAW,CAAC,GAAG,SAAS,KAAK,IAAI;oBACtD;gBACF;gBAEA,iBAAiB;gBACjB,kBAAkB;YACpB;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,wCAAwC;QACxD;IACF;IAEA,uBAAuB;IACvB,MAAM,qBAAqB;QACzB,IAAI;YACF,iCAAiC;YACjC,MAAM,cAAuC,CAAC;YAE9C,6DAA6D;YAC7D,OAAO,OAAO,CAAC,CAAA;gBACb,IAAI,MAAM,SAAS,KAAK,GAAG;oBACzB,WAAW,CAAC,MAAM,QAAQ,CAAC,GAAG;gBAChC,OAAO,IAAI,MAAM,SAAS,KAAK,GAAG;oBAChC,WAAW,CAAC,MAAM,QAAQ,CAAC,GAAG;gBAChC,OAAO;oBACL,WAAW,CAAC,MAAM,QAAQ,CAAC,GAAG;gBAChC;YACF;YAEA,sCAAsC;YACtC,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,IAAI,SAAS,EAAE,EAAE;oBACf,MAAM,QAAQ,MAAM,SAAS,IAAI;oBAEjC,uCAAuC;oBACvC,OAAO,OAAO,CAAC,CAAA;wBACb,8BAA8B;wBAC9B,IAAI,CAAC,MAAM,UAAU,EAAE;wBAEvB,MAAM,UAAU,MAAM,IAAI,CAAC,CAAC,OAAc,KAAK,OAAO,KAAK,MAAM,UAAU;wBAC3E,IAAI,WAAW,QAAQ,UAAU,IAAI,QAAQ,SAAS,EAAE;4BACtD,WAAW,CAAC,MAAM,QAAQ,CAAC,GAAG,GAAG,QAAQ,UAAU,CAAC,CAAC,EAAE,QAAQ,SAAS,EAAE;wBAC5E;oBACF;gBACF;YACF,EAAE,OAAO,UAAU;gBACjB,QAAQ,GAAG,CAAC;YACd;YAEA,iBAAiB;QACnB,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,gCAAgC;QAChD;IACF;IAEA,wBAAwB;IACxB,MAAM,oBAAoB,OAAO;QAC/B,IAAI,CAAC,OAAO,OAAO,CAAC,gDAAgD;YAClE;QACF;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,oCAAoC,EAAE,SAAS,EAAE;gBAC7E,QAAQ;YACV;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,0CAA0C;YAC1C,UAAU,OAAO,MAAM,CAAC,CAAA,QAAS,MAAM,QAAQ,KAAK;YACpD,MAAM;QACR,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,yBAAyB;YACvC,MAAM;QACR;IACF;IAEA,yBAAyB;IACzB,MAAM,eAAe;QACnB,6BAA6B;QAC7B,uBAAuB;IACzB;IAEA,yBAAyB;IACzB,MAAM,eAAe;QACnB,gBAAgB;QAChB,aAAa;QACb,WAAW;IACb;IAEA,2BAA2B;IAC3B,MAAM,iBAAiB,OAAO,MAAM,CAAC,CAAA;QACnC,sBAAsB;QACtB,IAAI,iBAAiB,SAAS,MAAM,MAAM,KAAK,cAAc;YAC3D,OAAO;QACT;QAEA,uCAAuC;QACvC,IAAI,aAAa,WAAW,iBAAiB,OAAO;YAClD,MAAM,gBAAgB,MAAM,SAAS,EAAE,cAAc;YACrD,IAAI,kBAAkB,cAAc;gBAClC,OAAO;YACT;QACF;QAEA,0BAA0B;QAC1B,IAAI,aAAa,SAAS;YACxB,MAAM,YAAY,IAAI,KAAK,MAAM,UAAU;YAC3C,MAAM,kBAAkB,IAAI,KAAK;YACjC,MAAM,gBAAgB,IAAI,KAAK;YAE/B,6BAA6B;YAC7B,cAAc,QAAQ,CAAC,IAAI,IAAI,IAAI;YAEnC,IAAI,YAAY,mBAAmB,YAAY,eAAe;gBAC5D,OAAO;YACT;QACF,OAAO,IAAI,WAAW;YACpB,MAAM,YAAY,IAAI,KAAK,MAAM,UAAU;YAC3C,MAAM,kBAAkB,IAAI,KAAK;YACjC,IAAI,YAAY,iBAAiB;gBAC/B,OAAO;YACT;QACF,OAAO,IAAI,SAAS;YAClB,MAAM,YAAY,IAAI,KAAK,MAAM,UAAU;YAC3C,MAAM,gBAAgB,IAAI,KAAK;YAC/B,6BAA6B;YAC7B,cAAc,QAAQ,CAAC,IAAI,IAAI,IAAI;YACnC,IAAI,YAAY,eAAe;gBAC7B,OAAO;YACT;QACF;QAEA,oBAAoB;QACpB,MAAM,cAAc,WAAW,WAAW;QAC1C,OACE,MAAM,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,gBACnC,MAAM,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,gBACtC,CAAC,aAAa,CAAC,MAAM,WAAW,CAAC,IAAI,EAAE,EAAE,WAAW,GAAG,QAAQ,CAAC,gBAChE,MAAM,WAAW,CAAC,WAAW,GAAG,QAAQ,CAAC;IAE7C;IAEA,4BAA4B;IAC5B,MAAM,yBAAyB,CAAC;QAC9B,iBAAiB;QACjB,oBAAoB;IACtB;IAEA,4BAA4B;IAC5B,MAAM,0BAA0B;QAC9B,oBAAoB;QACpB,iBAAiB;IACnB;IAEA,cAAc;IACd,MAAM,aAAa,CAAC;QAClB,MAAM,OAAO,IAAI,KAAK;QACtB,OAAO,KAAK,kBAAkB,KAAK,MAAM,KAAK,kBAAkB;IAClE;IAEA,yBAAyB;IACzB,MAAM,sBAAsB,CAAC;QAC3B,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;;wBAAE;wBAAuB;;;;;;;8BAC1B,6LAAC;8BAAE;;;;;;;;;;;;IAGT;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAG,WAAU;sCAAqB;;;;;;;;;;;kCAIrC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,MAAK;wCACL,aAAY;wCACZ,WAAU;wCACV,OAAO;wCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;;;;;;kDAE/C,6LAAC,yMAAA,CAAA,SAAM;wCAAC,WAAU;wCAAwC,MAAM;;;;;;;;;;;;0CAGlE,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,WAAU;wCACV,OAAO;wCACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;;0DAE/C,6LAAC;gDAAO,OAAM;0DAAM;;;;;;0DACpB,6LAAC;gDAAO,OAAM;0DAAU;;;;;;0DACxB,6LAAC;gDAAO,OAAM;0DAAa;;;;;;0DAC3B,6LAAC;gDAAO,OAAM;0DAAY;;;;;;0DAC1B,6LAAC;gDAAO,OAAM;0DAAY;;;;;;;;;;;;kDAG5B,6LAAC;wCACC,WAAU;wCACV,SAAS,IAAM,uBAAuB,CAAC;wCACvC,OAAM;kDAEN,cAAA,6LAAC,yMAAA,CAAA,SAAM;4CAAC,MAAM;4CAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;oBAMjC,uBAAuB,aAAa,yBACnC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAwB;;;;;;kDACtC,6LAAC;wCACC,SAAS;wCACT,WAAU;kDACX;;;;;;;;;;;;0CAKH,6LAAC;gCAAI,WAAU;;kDAEb,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAA+C;;;;;;0DAChE,6LAAC;gDACC,WAAU;gDACV,OAAO;gDACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;;kEAE/C,6LAAC;wDAAO,OAAM;kEAAM;;;;;;oDACnB,SAAS,GAAG,CAAC,CAAA,uBACZ,6LAAC;4DAA8B,OAAO,OAAO,SAAS,CAAC,QAAQ;sEAC5D,OAAO,WAAW;2DADR,OAAO,SAAS;;;;;;;;;;;;;;;;;kDAQnC,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAA+C;;;;;;0DAChE,6LAAC;gDACC,MAAK;gDACL,WAAU;gDACV,OAAO;gDACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;kDAKhD,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAA+C;;;;;;0DAChE,6LAAC;gDACC,MAAK;gDACL,WAAU;gDACV,OAAO;gDACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;0CAKhD,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;kCAQP,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAM,WAAU;;8CACf,6LAAC;oCAAM,WAAU;8CACf,cAAA,6LAAC;;0DACC,6LAAC;gDAAG,WAAU;0DAAiF;;;;;;0DAG/F,6LAAC;gDAAG,WAAU;0DAAiF;;;;;;0DAG/F,6LAAC;gDAAG,WAAU;0DAAiF;;;;;;0DAG/F,6LAAC;gDAAG,WAAU;0DAAiF;;;;;;0DAG/F,6LAAC;gDAAG,WAAU;0DAAiF;;;;;;0DAG/F,6LAAC;gDAAG,WAAU;0DAAiF;;;;;;0DAG/F,6LAAC;gDAAG,WAAU;0DAAiF;;;;;;0DAG/F,6LAAC;gDAAG,WAAU;0DAAiF;;;;;;0DAG/F,6LAAC;gDAAG,WAAU;0DAAiF;;;;;;;;;;;;;;;;;8CAKnG,6LAAC;oCAAM,WAAU;8CACd,eAAe,MAAM,KAAK,kBACzB,6LAAC;kDACC,cAAA,6LAAC;4CAAG,SAAS;4CAAG,WAAU;sDAAsC;;;;;;;;;;+CAKlE,eAAe,GAAG,CAAC,CAAC,sBAClB,6LAAC;4CAAwB,WAAU;;8DACjC,6LAAC;oDAAG,WAAU;;wDAA8B;wDACxC,MAAM,QAAQ;;;;;;;8DAElB,6LAAC;oDAAG,WAAU;8DACZ,cAAA,6LAAC,4IAAA,CAAA,UAAmB;wDAClB,UAAU,MAAM,gBAAgB,IAAI,MAAM,YAAY;wDACtD,SAAS,MAAM,QAAQ;;;;;;;;;;;8DAG3B,6LAAC;oDAAG,WAAU;8DACX,MAAM,QAAQ;;;;;;8DAEjB,6LAAC;oDAAG,WAAU;8DACX,aAAa,CAAC,MAAM,WAAW,CAAC,IAAI,MAAM,WAAW;;;;;;8DAExD,6LAAC;oDAAG,WAAU;8DACX,MAAM,WAAW,IACjB,CAAC,MAAM,SAAS,KAAK,IAAI,uBACxB,MAAM,SAAS,KAAK,IAAI,mBACxB,cAAc;;;;;;8DAElB,6LAAC;oDAAG,WAAU;8DACX,MAAM,QAAQ;;;;;;8DAEjB,6LAAC;oDAAG,WAAU;8DACZ,cAAA,6LAAC;wDAAK,WAAW,CAAC,8DAA8D,EAAE,oBAAoB,MAAM,MAAM,GAAG;kEAClH,MAAM,MAAM,CAAC,MAAM,CAAC,GAAG,WAAW,KAAK,MAAM,MAAM,CAAC,KAAK,CAAC;;;;;;;;;;;8DAG/D,6LAAC;oDAAG,WAAU;8DACX,WAAW,MAAM,UAAU;;;;;;8DAE9B,6LAAC;oDAAG,WAAU;8DACZ,cAAA,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEACC,WAAU;gEACV,OAAM;gEACN,SAAS,IAAM,uBAAuB;0EAEtC,cAAA,6LAAC,mMAAA,CAAA,MAAG;oEAAC,MAAM;;;;;;;;;;;0EAEb,6LAAC;gEACC,WAAU;gEACV,OAAM;gEACN,SAAS,IAAM,MAAM,CAAC,YAAY,EAAE,MAAM,QAAQ,EAAE;0EAEpD,cAAA,6LAAC,8MAAA,CAAA,OAAI;oEAAC,MAAM;;;;;;;;;;;0EAEd,6LAAC;gEACC,WAAU;gEACV,OAAM;gEACN,SAAS,IAAM,kBAAkB,MAAM,QAAQ;0EAE/C,cAAA,6LAAC,6MAAA,CAAA,SAAM;oEAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;2CAtDb,MAAM,QAAQ;;;;;;;;;;;;;;;;;;;;;kCAkEjC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;oCAAwB;oCAC5B,eAAe,MAAM;oCAAC;oCAAK,OAAO,MAAM;oCAAC;;;;;;;0CAEpD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAO,WAAU;kDAAkE;;;;;;kDAGpF,6LAAC;wCAAO,WAAU;kDAAgD;;;;;;kDAGlE,6LAAC;wCAAO,WAAU;kDAAkE;;;;;;;;;;;;;;;;;;;;;;;;YAQzF,oBAAoB,+BACnB,6LAAC,0IAAA,CAAA,UAAiB;gBAChB,OAAO;gBACP,cAAc,aAAa,CAAC,cAAc,WAAW,CAAC,IAAI,cAAc,WAAW;gBACnF,eAAe,cAAc,CAAC,cAAc,WAAW,CAAC,IAAI;gBAC5D,eAAe,aAAa,CAAC,cAAc,QAAQ,CAAC,IAAI;gBACxD,SAAS;;;;;;;;;;;;AAKnB;GAtqBM;KAAA;uCAwqBS","debugId":null}},
    {"offset": {"line": 1795, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}