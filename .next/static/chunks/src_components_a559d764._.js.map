{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/components/InputField.tsx"],"sourcesContent":["import { FieldError } from \"react-hook-form\";\n\ntype InputFieldProps = {\n  label: string;\n  type?: string;\n  register: any;\n  name: string;\n  defaultValue?: string;\n  error?: FieldError;\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n};\n\nconst InputField = ({\n  label,\n  type = \"text\",\n  register,\n  name,\n  defaultValue,\n  error,\n  inputProps,\n}: InputFieldProps) => {\n  return (\n    <div className=\"flex flex-col gap-2 w-full md:w-1/4\">\n      <label className=\"text-xs text-gray-500\">{label}</label>\n      <input\n        type={type}\n        {...register(name)}\n        className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n        {...inputProps}\n        defaultValue={defaultValue}\n      />\n      {error?.message && (\n        <p className=\"text-xs text-red-400\">{error.message.toString()}</p>\n      )}\n    </div>\n  );\n};\n\nexport default InputField;\n"],"names":[],"mappings":";;;;;AAYA,MAAM,aAAa,CAAC,EAClB,KAAK,EACL,OAAO,MAAM,EACb,QAAQ,EACR,IAAI,EACJ,YAAY,EACZ,KAAK,EACL,UAAU,EACM;IAChB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAM,WAAU;0BAAyB;;;;;;0BAC1C,6LAAC;gBACC,MAAM;gBACL,GAAG,SAAS,KAAK;gBAClB,WAAU;gBACT,GAAG,UAAU;gBACd,cAAc;;;;;;YAEf,OAAO,yBACN,6LAAC;gBAAE,WAAU;0BAAwB,MAAM,OAAO,CAAC,QAAQ;;;;;;;;;;;;AAInE;KAxBM;uCA0BS","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/components/forms/SupplierForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { useState } from \"react\";\nimport InputField from \"@/components/InputField\";\n\nconst schema = z.object({\n  name: z.string().min(1, { message: \"Supplier name is required!\" }),\n  address: z.string().min(1, { message: \"Address is required!\" }),\n  contact_no: z.string().min(1, { message: \"Contact number is required!\" }),\n  manufacturing_items: z.string().min(1, { message: \"Manufacturing items are required!\" }),\n  category: z.string().min(1, { message: \"Category is required!\" }),\n});\n\ntype Inputs = z.infer<typeof schema>;\n\nconst SupplierForm = ({\n  type,\n  data,\n}: {\n  type: \"create\" | \"update\";\n  data?: any;\n}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<Inputs>({\n    resolver: zodResolver(schema),\n    defaultValues: data || {},\n  });\n\n  const [message, setMessage] = useState<string | null>(null);\n\n  const onSubmit = handleSubmit(async (formData) => {\n    setMessage(null); // Reset message\n\n    try {\n      const response = await fetch(\"/api/suppliers\", {\n        method: type === \"create\" ? \"POST\" : \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.message || \"Something went wrong\");\n      }\n\n      setMessage(type === \"create\" ? \"Supplier created successfully!\" : \"Supplier updated successfully!\");\n      reset(); // Clear the form after successful submission\n\n    } catch (error: any) {\n      setMessage(error.message);\n    }\n  });\n\n  // Default categories related to gold jewelry\n  const categories = [\n    \"Gold Rings\",\n    \"Necklaces\",\n    \"Bracelets\",\n    \"Earrings\",\n    \"Gold Bars\",\n    \"Custom Jewelry\",\n    \"Gold Coins\",\n    \"Jewelry Chains\",\n  ];\n\n  return (\n    <form className=\"flex flex-col gap-8\" onSubmit={onSubmit}>\n      <h1 className=\"text-xl font-semibold\">\n        {type === \"create\" ? \"Create a new Supplier\" : \"Update Supplier\"}\n      </h1>\n\n      {message && <p className=\"text-center text-red-500\">{message}</p>}\n\n      <div className=\"flex justify-between flex-wrap gap-4\">\n        <InputField label=\"Supplier Name\" name=\"name\" register={register} error={errors.name} />\n        <InputField label=\"Address\" name=\"address\" register={register} error={errors.address} />\n        <InputField label=\"Contact No\" name=\"contact_no\" register={register} error={errors.contact_no} />\n      </div>\n      <div className=\"flex justify-between flex-wrap gap-4\">\n        <InputField label=\"Manufacturing Items\" name=\"manufacturing_items\" register={register} error={errors.manufacturing_items} />\n        <div className=\"flex flex-col gap-2\">\n          <label htmlFor=\"category\" className=\"font-medium\">Category</label>\n          <select id=\"category\" {...register(\"category\")} className=\"border p-2 rounded-md\">\n            <option value=\"\" disabled>Select a category</option>\n            {categories.map((category, index) => (\n              <option key={index} value={category}>{category}</option>\n            ))}\n          </select>\n          {errors.category && <span className=\"text-red-500\">{errors.category.message}</span>}\n        </div>\n      </div>\n\n      <button className=\"bg-blue-400 text-white p-2 rounded-md\" type=\"submit\">\n        {type === \"create\" ? \"Create\" : \"Update\"}\n      </button>\n    </form>\n  );\n};\n\nexport default SupplierForm;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}