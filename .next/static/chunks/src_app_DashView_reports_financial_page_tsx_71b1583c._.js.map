{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/app/DashView/reports/financial/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  TrendingUp,\n  DollarSign,\n  Calendar,\n  Download,\n  Filter,\n  RefreshCw,\n  CreditCard,\n  Building,\n  PieChart,\n  BarChart2,\n  LineChart,\n  Percent\n} from 'lucide-react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n} from 'chart.js';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport axios from 'axios';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\n// Define chart colors (gold-themed)\nconst chartColors = {\n  gold: 'rgba(212, 175, 55, 0.7)',\n  lightGold: 'rgba(218, 165, 32, 0.7)',\n  darkGold: 'rgba(184, 134, 11, 0.7)',\n  bronze: 'rgba(205, 127, 50, 0.7)',\n  silver: 'rgba(192, 192, 192, 0.7)',\n  platinum: 'rgba(229, 228, 226, 0.7)',\n  background: 'rgba(255, 248, 220, 0.3)',\n  border: 'rgba(184, 134, 11, 1)',\n};\n\nexport default function FinancialReportPage() {\n  // State variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [reportData, setReportData] = useState<any>(null);\n  const [period, setPeriod] = useState('last30');\n  const [selectedBranchId, setSelectedBranchId] = useState<string | null>(null);\n  const [branches, setBranches] = useState<any[]>([]);\n  const [exportFormat, setExportFormat] = useState('pdf');\n\n  // Format currency\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-LK', {\n      style: 'currency',\n      currency: 'LKR',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n\n  // Format date\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Fetch report data\n  const fetchReportData = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const params: any = { period };\n      if (selectedBranchId) params.branchId = selectedBranchId;\n\n      const response = await axios.get(`http://localhost:3002/api/reports/financial`, { params });\n      setReportData(response.data);\n      setBranches(response.data.branches || []);\n    } catch (err: any) {\n      console.error('Error fetching financial report:', err);\n      setError(err.response?.data?.message || 'Failed to fetch financial report data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Export report\n  const exportReport = async (format: string) => {\n    try {\n      const params: any = {\n        reportType: 'financial',\n        period,\n        format\n      };\n\n      if (selectedBranchId) params.branchId = selectedBranchId;\n\n      const response = await axios.get(`http://localhost:3002/api/reports/export`, {\n        params,\n        responseType: format === 'csv' ? 'blob' : 'json'\n      });\n\n      if (format === 'csv') {\n        // Handle CSV download\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `financial_report_${new Date().toISOString().split('T')[0]}.csv`);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n      } else {\n        // Handle PDF generation (client-side)\n        // This would typically use a library like jsPDF or pdfmake\n        alert('PDF export functionality would be implemented here');\n      }\n    } catch (err: any) {\n      console.error('Error exporting report:', err);\n      alert('Failed to export report');\n    }\n  };\n\n  // Load data on component mount and when filters change\n  useEffect(() => {\n    fetchReportData();\n  }, [period, selectedBranchId]);\n\n  // Prepare chart data for revenue by day\n  const revenueByDayChartData = {\n    labels: reportData?.revenueByDay?.map((item: any) => formatDate(item.date)) || [],\n    datasets: [\n      {\n        label: 'Daily Revenue',\n        data: reportData?.revenueByDay?.map((item: any) => item.amount) || [],\n        borderColor: chartColors.border,\n        backgroundColor: chartColors.background,\n        fill: true,\n        tension: 0.4,\n      },\n    ],\n  };\n\n  // Prepare chart data for revenue by payment method\n  const revenueByPaymentMethodChartData = {\n    labels: reportData?.revenueByPaymentMethod?.map((item: any) => item.payment_method) || [],\n    datasets: [\n      {\n        label: 'Revenue by Payment Method',\n        data: reportData?.revenueByPaymentMethod?.map((item: any) => item.amount) || [],\n        backgroundColor: [\n          chartColors.gold,\n          chartColors.lightGold,\n          chartColors.darkGold,\n          chartColors.bronze,\n          chartColors.silver,\n          chartColors.platinum,\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  // Prepare chart data for revenue by branch\n  const revenueByBranchChartData = {\n    labels: reportData?.revenueByBranch?.map((item: any) => item.branch_name) || [],\n    datasets: [\n      {\n        label: 'Revenue by Branch',\n        data: reportData?.revenueByBranch?.map((item: any) => item.amount) || [],\n        backgroundColor: [\n          chartColors.gold,\n          chartColors.lightGold,\n          chartColors.darkGold,\n          chartColors.bronze,\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  // Prepare chart data for revenue sources\n  const revenueSourcesChartData = {\n    labels: ['Sales', 'Advance Payments', 'Orders'],\n    datasets: [\n      {\n        label: 'Revenue Sources',\n        data: reportData ? [\n          reportData.revenue.sales,\n          reportData.revenue.advancePayments,\n          reportData.revenue.orders\n        ] : [],\n        backgroundColor: [\n          chartColors.gold,\n          chartColors.lightGold,\n          chartColors.darkGold,\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-800 flex items-center\">\n            <TrendingUp className=\"mr-2 h-6 w-6 text-yellow-600\" />\n            Financial Report\n          </h1>\n          <p className=\"text-gray-600 mt-1\">\n            Comprehensive financial analysis of your jewelry business\n          </p>\n        </div>\n\n        <div className=\"flex flex-wrap gap-2\">\n          <button\n            onClick={() => fetchReportData()}\n            className=\"px-3 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-md flex items-center text-sm\"\n          >\n            <RefreshCw className=\"mr-1 h-4 w-4\" />\n            Refresh\n          </button>\n\n          <div className=\"relative\">\n            <button\n              onClick={() => exportReport(exportFormat)}\n              className=\"px-3 py-2 bg-yellow-600 hover:bg-yellow-700 text-white rounded-md flex items-center text-sm\"\n            >\n              <Download className=\"mr-1 h-4 w-4\" />\n              Export {exportFormat.toUpperCase()}\n            </button>\n            <select\n              value={exportFormat}\n              onChange={(e) => setExportFormat(e.target.value)}\n              className=\"absolute right-0 top-0 w-10 h-full opacity-0 cursor-pointer\"\n            >\n              <option value=\"pdf\">PDF</option>\n              <option value=\"csv\">CSV</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white p-4 rounded-lg shadow-md\">\n        <div className=\"flex flex-wrap items-center gap-4\">\n          <div className=\"flex items-center space-x-2\">\n            <Calendar className=\"h-5 w-5 text-gray-400\" />\n            <select\n              className=\"p-2 border border-gray-300 rounded-md focus:ring-yellow-500 focus:border-yellow-500\"\n              value={period}\n              onChange={(e) => setPeriod(e.target.value)}\n            >\n              <option value=\"today\">Today</option>\n              <option value=\"yesterday\">Yesterday</option>\n              <option value=\"last7\">Last 7 Days</option>\n              <option value=\"last30\">Last 30 Days</option>\n              <option value=\"thisMonth\">This Month</option>\n              <option value=\"lastMonth\">Last Month</option>\n            </select>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <Building className=\"h-5 w-5 text-gray-400\" />\n            <select\n              className=\"p-2 border border-gray-300 rounded-md focus:ring-yellow-500 focus:border-yellow-500\"\n              value={selectedBranchId || ''}\n              onChange={(e) => setSelectedBranchId(e.target.value || null)}\n            >\n              <option value=\"\">All Branches</option>\n              {branches.map((branch: any) => (\n                <option key={branch.branch_id} value={branch.branch_id}>\n                  {branch.branch_name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Loading and Error States */}\n      {loading && (\n        <div className=\"flex justify-center items-center p-12\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-yellow-600\"></div>\n        </div>\n      )}\n\n      {error && !loading && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\">\n          <strong className=\"font-bold\">Error!</strong>\n          <span className=\"block sm:inline\"> {error}</span>\n        </div>\n      )}\n\n      {/* Report Content */}\n      {!loading && !error && reportData && (\n        <div className=\"space-y-6\">\n          {/* Revenue Summary Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <div className=\"bg-white p-4 rounded-lg shadow-md\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-sm font-medium text-gray-500\">Total Revenue</h3>\n                <DollarSign className=\"h-5 w-5 text-yellow-600\" />\n              </div>\n              <p className=\"mt-2 text-2xl font-semibold text-gray-900\">{formatCurrency(reportData.revenue.total)}</p>\n              <p className=\"mt-1 text-sm text-gray-600\">{reportData.transactions.total} transactions</p>\n            </div>\n\n            <div className=\"bg-white p-4 rounded-lg shadow-md\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-sm font-medium text-gray-500\">Sales Revenue</h3>\n                <CreditCard className=\"h-5 w-5 text-green-600\" />\n              </div>\n              <p className=\"mt-2 text-2xl font-semibold text-gray-900\">{formatCurrency(reportData.revenue.sales)}</p>\n              <p className=\"mt-1 text-sm text-gray-600\">{reportData.transactions.sales} sales</p>\n            </div>\n\n            <div className=\"bg-white p-4 rounded-lg shadow-md\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-sm font-medium text-gray-500\">Advance Payments</h3>\n                <CreditCard className=\"h-5 w-5 text-blue-600\" />\n              </div>\n              <p className=\"mt-2 text-2xl font-semibold text-gray-900\">{formatCurrency(reportData.revenue.advancePayments)}</p>\n              <p className=\"mt-1 text-sm text-gray-600\">{reportData.transactions.advancePayments} payments</p>\n            </div>\n\n            <div className=\"bg-white p-4 rounded-lg shadow-md\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-sm font-medium text-gray-500\">Orders Revenue</h3>\n                <CreditCard className=\"h-5 w-5 text-purple-600\" />\n              </div>\n              <p className=\"mt-2 text-2xl font-semibold text-gray-900\">{formatCurrency(reportData.revenue.orders)}</p>\n              <p className=\"mt-1 text-sm text-gray-600\">{reportData.transactions.orders} orders</p>\n            </div>\n          </div>\n\n          {/* Charts */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Revenue Trend Chart */}\n            <div className=\"bg-white p-4 rounded-lg shadow-md\">\n              <h3 className=\"text-lg font-medium text-gray-800 mb-4 flex items-center\">\n                <LineChart className=\"mr-2 h-5 w-5 text-yellow-600\" />\n                Revenue Trend\n              </h3>\n              <div className=\"h-64\">\n                {reportData.revenueByDay && reportData.revenueByDay.length > 0 ? (\n                  <Line\n                    data={revenueByDayChartData}\n                    options={{\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      scales: {\n                        y: {\n                          beginAtZero: true,\n                          ticks: {\n                            callback: (value) => formatCurrency(value as number)\n                          }\n                        }\n                      },\n                      plugins: {\n                        legend: {\n                          display: false\n                        },\n                        tooltip: {\n                          callbacks: {\n                            label: (context) => `Revenue: ${formatCurrency(context.parsed.y)}`\n                          }\n                        }\n                      }\n                    }}\n                  />\n                ) : (\n                  <div className=\"flex items-center justify-center h-full text-gray-500\">\n                    No data available for the selected period\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Revenue Sources Chart */}\n            <div className=\"bg-white p-4 rounded-lg shadow-md\">\n              <h3 className=\"text-lg font-medium text-gray-800 mb-4 flex items-center\">\n                <PieChart className=\"mr-2 h-5 w-5 text-yellow-600\" />\n                Revenue Sources\n              </h3>\n              <div className=\"h-64\">\n                {reportData.revenue && (\n                  reportData.revenue.total > 0 ? (\n                    <Pie\n                      data={revenueSourcesChartData}\n                      options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        plugins: {\n                          tooltip: {\n                            callbacks: {\n                              label: (context) => {\n                                const value = context.parsed;\n                                const total = context.dataset.data.reduce((a: number, b: number) => a + b, 0);\n                                const percentage = Math.round((value / total) * 100);\n                                return `${context.label}: ${formatCurrency(value)} (${percentage}%)`;\n                              }\n                            }\n                          }\n                        }\n                      }}\n                    />\n                  ) : (\n                    <div className=\"flex items-center justify-center h-full text-gray-500\">\n                      No revenue data available for the selected period\n                    </div>\n                  )\n                )}\n              </div>\n            </div>\n\n            {/* Payment Methods Chart */}\n            <div className=\"bg-white p-4 rounded-lg shadow-md\">\n              <h3 className=\"text-lg font-medium text-gray-800 mb-4 flex items-center\">\n                <BarChart2 className=\"mr-2 h-5 w-5 text-yellow-600\" />\n                Revenue by Payment Method\n              </h3>\n              <div className=\"h-64\">\n                {reportData.revenueByPaymentMethod && reportData.revenueByPaymentMethod.length > 0 ? (\n                  <Bar\n                    data={revenueByPaymentMethodChartData}\n                    options={{\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      scales: {\n                        y: {\n                          beginAtZero: true,\n                          ticks: {\n                            callback: (value) => formatCurrency(value as number)\n                          }\n                        }\n                      },\n                      plugins: {\n                        legend: {\n                          display: false\n                        },\n                        tooltip: {\n                          callbacks: {\n                            label: (context) => `Revenue: ${formatCurrency(context.parsed.y)}`\n                          }\n                        }\n                      }\n                    }}\n                  />\n                ) : (\n                  <div className=\"flex items-center justify-center h-full text-gray-500\">\n                    No payment method data available for the selected period\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Branch Revenue Chart */}\n            <div className=\"bg-white p-4 rounded-lg shadow-md\">\n              <h3 className=\"text-lg font-medium text-gray-800 mb-4 flex items-center\">\n                <Building className=\"mr-2 h-5 w-5 text-yellow-600\" />\n                Revenue by Branch\n              </h3>\n              <div className=\"h-64\">\n                {reportData.revenueByBranch && reportData.revenueByBranch.length > 0 ? (\n                  <Pie\n                    data={revenueByBranchChartData}\n                    options={{\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      plugins: {\n                        tooltip: {\n                          callbacks: {\n                            label: (context) => {\n                              const value = context.parsed;\n                              const total = context.dataset.data.reduce((a: number, b: number) => a + b, 0);\n                              const percentage = Math.round((value / total) * 100);\n                              return `${context.label}: ${formatCurrency(value)} (${percentage}%)`;\n                            }\n                          }\n                        }\n                      }\n                    }}\n                  />\n                ) : (\n                  <div className=\"flex items-center justify-center h-full text-gray-500\">\n                    No branch data available for the selected period\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Profit Margin Analysis */}\n          <div className=\"bg-white p-4 rounded-lg shadow-md\">\n            <h3 className=\"text-lg font-medium text-gray-800 mb-4 flex items-center\">\n              <Percent className=\"mr-2 h-5 w-5 text-yellow-600\" />\n              Profit Margin Analysis\n            </h3>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"p-4 bg-gray-50 rounded-md\">\n                <h4 className=\"text-sm font-medium text-gray-500 mb-2\">Total Profit</h4>\n                <p className=\"text-2xl font-semibold text-green-600\">{formatCurrency(reportData.profitMargin.totalProfit || 0)}</p>\n              </div>\n\n              <div className=\"p-4 bg-gray-50 rounded-md\">\n                <h4 className=\"text-sm font-medium text-gray-500 mb-2\">Average Profit Margin</h4>\n                <p className=\"text-2xl font-semibold text-blue-600\">\n                  {reportData.profitMargin.averageProfitMargin && !isNaN(parseFloat(reportData.profitMargin.averageProfitMargin)) ?\n                    `${parseFloat(reportData.profitMargin.averageProfitMargin).toFixed(2)}%` :\n                    '0.00%'}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}