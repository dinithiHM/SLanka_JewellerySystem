{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/JewelleryWEBApp/front_end/src/components/Announcements.tsx"],"sourcesContent":["import { useLanguage } from \"@/contexts/LanguageContext\";\nimport TranslatedText from \"./TranslatedText\";\n\nconst Announcements = () => {\n  // Use language context to trigger re-renders when language changes\n  useLanguage();\n  return (\n    <div style={{ backgroundColor: \"#FFF6BD\" }} className=\"p-4 rounded-md\"> {/* Set background color here */}\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-xl font-semibold\">\n          <TranslatedText textKey=\"dashboard.announcements\" fallback=\"Announcements\" />\n        </h1>\n        <span className=\"text-xs text-gray-400\">\n          <TranslatedText textKey=\"dashboard.viewAll\" fallback=\"View All\" />\n        </span>\n      </div>\n      <div className=\"flex flex-col gap-4 mt-4\">\n        <div className=\"bg-yellow rounded-md p-4\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"font-medium\">Lorem ipsum dolor sit</h2>\n            <span className=\"text-xs text-gray-400 bg-white rounded-md px-1 py-1\">\n              2025-01-01\n            </span>\n          </div>\n          <p className=\"text-sm text-gray-400 mt-1\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum,\n            expedita. Rerum, quidem facilis?\n          </p>\n        </div>\n        <div className=\"bg-lamaPurpleLight rounded-md p-4\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"font-medium\">Lorem ipsum dolor sit</h2>\n            <span className=\"text-xs text-gray-400 bg-white rounded-md px-1 py-1\">\n              2025-01-01\n            </span>\n          </div>\n          <p className=\"text-sm text-gray-400 mt-1\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum,\n            expedita. Rerum, quidem facilis?\n          </p>\n        </div>\n        <div className=\"bg-lamaYellowLight rounded-md p-4\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"font-medium\">Lorem ipsum dolor sit</h2>\n            <span className=\"text-xs text-gray-400 bg-white rounded-md px-1 py-1\">\n              2025-01-01\n            </span>\n          </div>\n          <p className=\"text-sm text-gray-400 mt-1\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum,\n            expedita. Rerum, quidem facilis?\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Announcements;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;AAEA,MAAM,gBAAgB;;IACpB,mEAAmE;IACnE,CAAA,GAAA,sIAAA,CAAA,cAAW,AAAD;IACV,qBACE,6LAAC;QAAI,OAAO;YAAE,iBAAiB;QAAU;QAAG,WAAU;;YAAiB;0BACrE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCACZ,cAAA,6LAAC,uIAAA,CAAA,UAAc;4BAAC,SAAQ;4BAA0B,UAAS;;;;;;;;;;;kCAE7D,6LAAC;wBAAK,WAAU;kCACd,cAAA,6LAAC,uIAAA,CAAA,UAAc;4BAAC,SAAQ;4BAAoB,UAAS;;;;;;;;;;;;;;;;;0BAGzD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAc;;;;;;kDAC5B,6LAAC;wCAAK,WAAU;kDAAsD;;;;;;;;;;;;0CAIxE,6LAAC;gCAAE,WAAU;0CAA6B;;;;;;;;;;;;kCAK5C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAc;;;;;;kDAC5B,6LAAC;wCAAK,WAAU;kDAAsD;;;;;;;;;;;;0CAIxE,6LAAC;gCAAE,WAAU;0CAA6B;;;;;;;;;;;;kCAK5C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAc;;;;;;kDAC5B,6LAAC;wCAAK,WAAU;kDAAsD;;;;;;;;;;;;0CAIxE,6LAAC;gCAAE,WAAU;0CAA6B;;;;;;;;;;;;;;;;;;;;;;;;AAQpD;GArDM;;QAEJ,sIAAA,CAAA,cAAW;;;KAFP;uCAuDS","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file://E%3A/JewelleryWEBApp/front_end/src/components/AttendanceChart.tsx"],"sourcesContent":["\"use client\";\nimport Image from \"next/image\";\nimport { useLanguage } from \"@/contexts/LanguageContext\";\nimport TranslatedText from \"./TranslatedText\";\nimport {\n  BarChart,\n  Bar,\n  Rectangle,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Mon\",\n    Mahiyangana: 60,\n    MahaOya: 40,\n  },\n  {\n    name: \"Tue\",\n    Mahiyangana: 70,\n    MahaOya: 60,\n  },\n  {\n    name: \"Wed\",\n    Mahiyangana: 90,\n    MahaOya: 75,\n  },\n  {\n    name: \"Thu\",\n    Mahiyangana: 90,\n    MahaOya: 75,\n  },\n  {\n    name: \"Fri\",\n    Mahiyangana: 65,\n    MahaOya: 55,\n  },\n];\n\nconst AttendanceChart = () => {\n  // Use language context to trigger re-renders when language changes\n  useLanguage();\n  return (\n    <div className=\"bg-[#FFF6BD] rounded-lg p-4 h-full\">\n      <div className=\"flex justify-between items-center\">\n      <h1 className=\"text-lg font-semibold text-black\">\n        <TranslatedText textKey=\"dashboard.attendance\" fallback=\"Attendance\" />\n      </h1>\n        <Image src=\"/moreDark.png\" alt=\"\" width={20} height={20} />\n      </div>\n      <ResponsiveContainer width=\"100%\" height=\"90%\">\n        <BarChart width={500} height={300} data={data} barSize={20}>\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} stroke=\"#ddd\" />\n          <XAxis\n            dataKey=\"name\"\n            axisLine={false}\n            tick={{ fill: \"#000000\" }} // Set tick text color to black\n            tickLine={false}\n          />\n          <YAxis axisLine={false} tick={{ fill: \"#000000\" }} tickLine={false} /> {/* Set Y-axis text color to black */}\n          <Tooltip\n            contentStyle={{ borderRadius: \"10px\", borderColor: \"lightgray\" }}\n          />\n          <Legend\n            align=\"left\"\n            verticalAlign=\"top\"\n            formatter={(value) => <span style={{ color: \"black\" }}>{value}</span>} // Set legend text color to black\n            wrapperStyle={{ paddingTop: \"20px\", paddingBottom: \"40px\" }}\n          />\n          <Bar\n            dataKey=\"Mahiyangana\"\n            fill=\"#BE5985\"\n            legendType=\"circle\"\n            radius={[10, 10, 0, 0]}\n          />\n          <Bar\n            dataKey=\"MahaOya\"\n            fill=\"#AA60C8\"\n            legendType=\"circle\"\n            radius={[10, 10, 0, 0]}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default AttendanceChart;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAJA;;;;;AAgBA,MAAM,OAAO;IACX;QACE,MAAM;QACN,aAAa;QACb,SAAS;IACX;IACA;QACE,MAAM;QACN,aAAa;QACb,SAAS;IACX;IACA;QACE,MAAM;QACN,aAAa;QACb,SAAS;IACX;IACA;QACE,MAAM;QACN,aAAa;QACb,SAAS;IACX;IACA;QACE,MAAM;QACN,aAAa;QACb,SAAS;IACX;CACD;AAED,MAAM,kBAAkB;;IACtB,mEAAmE;IACnE,CAAA,GAAA,sIAAA,CAAA,cAAW,AAAD;IACV,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACf,6LAAC;wBAAG,WAAU;kCACZ,cAAA,6LAAC,uIAAA,CAAA,UAAc;4BAAC,SAAQ;4BAAuB,UAAS;;;;;;;;;;;kCAExD,6LAAC,gIAAA,CAAA,UAAK;wBAAC,KAAI;wBAAgB,KAAI;wBAAG,OAAO;wBAAI,QAAQ;;;;;;;;;;;;0BAEvD,6LAAC,sKAAA,CAAA,sBAAmB;gBAAC,OAAM;gBAAO,QAAO;0BACvC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;oBAAC,OAAO;oBAAK,QAAQ;oBAAK,MAAM;oBAAM,SAAS;;sCACtD,6LAAC,gKAAA,CAAA,gBAAa;4BAAC,iBAAgB;4BAAM,UAAU;4BAAO,QAAO;;;;;;sCAC7D,6LAAC,wJAAA,CAAA,QAAK;4BACJ,SAAQ;4BACR,UAAU;4BACV,MAAM;gCAAE,MAAM;4BAAU;4BACxB,UAAU;;;;;;sCAEZ,6LAAC,wJAAA,CAAA,QAAK;4BAAC,UAAU;4BAAO,MAAM;gCAAE,MAAM;4BAAU;4BAAG,UAAU;;;;;;wBAAS;sCACtE,6LAAC,0JAAA,CAAA,UAAO;4BACN,cAAc;gCAAE,cAAc;gCAAQ,aAAa;4BAAY;;;;;;sCAEjE,6LAAC,yJAAA,CAAA,SAAM;4BACL,OAAM;4BACN,eAAc;4BACd,WAAW,CAAC,sBAAU,6LAAC;oCAAK,OAAO;wCAAE,OAAO;oCAAQ;8CAAI;;;;;;4BACxD,cAAc;gCAAE,YAAY;gCAAQ,eAAe;4BAAO;;;;;;sCAE5D,6LAAC,sJAAA,CAAA,MAAG;4BACF,SAAQ;4BACR,MAAK;4BACL,YAAW;4BACX,QAAQ;gCAAC;gCAAI;gCAAI;gCAAG;6BAAE;;;;;;sCAExB,6LAAC,sJAAA,CAAA,MAAG;4BACF,SAAQ;4BACR,MAAK;4BACL,YAAW;4BACX,QAAQ;gCAAC;gCAAI;gCAAI;gCAAG;6BAAE;;;;;;;;;;;;;;;;;;;;;;;AAMlC;GA9CM;;QAEJ,sIAAA,CAAA,cAAW;;;KAFP;uCAgDS","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file://E%3A/JewelleryWEBApp/front_end/src/components/CountChart.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from \"react\";\nimport Image from \"next/image\";\nimport { useLanguage } from \"@/contexts/LanguageContext\";\nimport TranslatedText from \"./TranslatedText\";\nimport {\n  RadialBarChart,\n  RadialBar,\n  ResponsiveContainer,\n} from \"recharts\";\n\n// Define user type\ninterface User {\n  branch_id: number;\n  // other properties if necessary\n}\n\nconst CountChart = () => {\n  // Use language context to trigger re-renders when language changes\n  useLanguage();\n  const [data, setData] = useState([\n    { name: \"Total\", count: 0, fill: \"#F7CFD8\" },\n    { name: \"Mahiyangana\", count: 0, fill: \"#AA60C8\" },\n    { name: \"Mahaoya\", count: 0, fill: \"#BE5985\" },\n  ]);\n\n  useEffect(() => {\n    const fetchEmployeeCounts = async () => {\n      try {\n        // Fetch employee data\n        const response = await fetch(\"http://localhost:3002/users\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch users\");\n        }\n        const users: User[] = await response.json();\n\n        // Debug: Check the data being returned\n        console.log(\"Fetched users:\", users);\n\n        if (users.length === 0) {\n          console.warn(\"No users found for the branches.\");\n        }\n\n        // Count employees by branch_id\n        const mahiyanganaCount = users.filter((user) => user.branch_id === 1).length;\n        const mahaoyaCount = users.filter((user) => user.branch_id === 2).length;\n\n        // Debug: Check counts\n        console.log(\"Mahiyangana count:\", mahiyanganaCount);\n        console.log(\"Mahaoya count:\", mahaoyaCount);\n\n        // Update the data state with the fetched counts\n        const totalCount = users.length;\n        setData([\n          { name: \"Total\", count: totalCount, fill: \"#F7CFD8\" },\n          { name: \"Mahiyangana\", count: mahiyanganaCount, fill: \"#AA60C8\" },\n          { name: \"Mahaoya\", count: mahaoyaCount, fill: \"#BE5985\" },\n        ]);\n      } catch (error) {\n        console.error(\"Error fetching employee data:\", error);\n      }\n    };\n\n    fetchEmployeeCounts();\n  }, []);\n\n  return (\n    <div className=\"bg-[#FFF6BD] rounded-xl w-full h-full p-4\">\n      {/* TITLE */}\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-lg font-semibold\">\n          <TranslatedText textKey=\"dashboard.employees\" fallback=\"Employees\" />\n        </h1>\n        <Image src=\"/moreDark.png\" alt=\"\" width={20} height={20} />\n      </div>\n      {/* CHART */}\n      <div className=\"relative w-full h-[75%]\">\n        <ResponsiveContainer>\n          <RadialBarChart\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius=\"40%\"\n            outerRadius=\"100%\"\n            barSize={32}\n            data={data}\n          >\n            <RadialBar background dataKey=\"count\" />\n          </RadialBarChart>\n        </ResponsiveContainer>\n      \n      </div>\n      {/* BOTTOM */}\n      <div className=\"flex justify-center gap-16\">\n        <div className=\"flex flex-col gap-1\">\n          <div className=\"w-5 h-5 bg-[#BE5985] rounded-full\" />\n          <h1 className=\"font-bold\">{data[1]?.count}</h1>\n          <h2 className=\"text-xs text-bold-black\">Mahiyangana Branch ({Math.round((data[1]?.count / data[0]?.count) * 100)}%)</h2>\n        </div>\n        <div className=\"flex flex-col gap-1\">\n          <div className=\"w-5 h-5 bg-[#AA60C8] rounded-full\" />\n          <h1 className=\"font-bold\">{data[2]?.count}</h1>\n          <h2 className=\"text-xs text-bold-black\">MahaOya Branch({Math.round((data[2]?.count / data[0]?.count) * 100)}%)</h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CountChart;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 720, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 726, "column": 0}, "map": {"version":3,"sources":["file://E%3A/JewelleryWEBApp/front_end/src/utils/formatters.ts"],"sourcesContent":["/**\n * Format a number as currency\n * @param value The number to format\n * @param locale The locale to use for formatting (default: 'en-US')\n * @param currency The currency code (default: 'LKR')\n * @returns Formatted currency string\n */\nexport const formatCurrency = (\n  value: number | string,\n  locale: string = 'en-US',\n  currency: string = 'LKR'\n): string => {\n  // Convert to number if it's a string\n  const numericValue = typeof value === 'string' ? parseFloat(value) : value;\n\n  // Handle NaN values\n  if (isNaN(numericValue)) {\n    console.warn('Invalid value for currency formatting:', value);\n    return 'Rs. 0.00';\n  }\n\n  // Use the Sri Lankan Rupee symbol (Rs) instead of LKR text\n  return 'Rs. ' + new Intl.NumberFormat(locale, {\n    style: 'decimal',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(numericValue);\n};\n\n/**\n * Format a date string\n * @param dateString The date string to format\n * @param locale The locale to use for formatting (default: 'en-US')\n * @returns Formatted date string\n */\nexport const formatDate = (\n  dateString: string,\n  locale: string = 'en-US'\n): string => {\n  const date = new Date(dateString);\n  return new Intl.DateTimeFormat(locale, {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  }).format(date);\n};\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;AACM,MAAM,iBAAiB,CAC5B,OACA,SAAiB,OAAO,EACxB,WAAmB,KAAK;IAExB,qCAAqC;IACrC,MAAM,eAAe,OAAO,UAAU,WAAW,WAAW,SAAS;IAErE,oBAAoB;IACpB,IAAI,MAAM,eAAe;QACvB,QAAQ,IAAI,CAAC,0CAA0C;QACvD,OAAO;IACT;IAEA,2DAA2D;IAC3D,OAAO,SAAS,IAAI,KAAK,YAAY,CAAC,QAAQ;QAC5C,OAAO;QACP,uBAAuB;QACvB,uBAAuB;IACzB,GAAG,MAAM,CAAC;AACZ;AAQO,MAAM,aAAa,CACxB,YACA,SAAiB,OAAO;IAExB,MAAM,OAAO,IAAI,KAAK;IACtB,OAAO,IAAI,KAAK,cAAc,CAAC,QAAQ;QACrC,MAAM;QACN,OAAO;QACP,KAAK;QACL,MAAM;QACN,QAAQ;QACR,QAAQ;IACV,GAAG,MAAM,CAAC;AACZ","debugId":null}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 771, "column": 0}, "map": {"version":3,"sources":["file://E%3A/JewelleryWEBApp/front_end/src/components/EventCalendar.tsx"],"sourcesContent":["\"use client\";\n\n// Removed unused import\nimport { useState, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { formatCurrency } from \"@/utils/formatters\";\nimport { useLanguage } from \"@/contexts/LanguageContext\";\nimport TranslatedText from \"./TranslatedText\";\n\ntype ValuePiece = Date | null;\n\ntype Value = ValuePiece | [ValuePiece, ValuePiece];\n\n// Define types for sales data\ninterface Sale {\n  sale_id: number;\n  customer_name: string;\n  total_amount: number;\n  payment_method: string;\n  sale_date: string;\n  cashier_name: string;\n  sold_items: string;\n}\n\ninterface BranchSales {\n  branch_id: number;\n  branch_name: string;\n  sales: Sale[];\n}\n\nconst EventCalendar = () => {\n  // Use language context to trigger re-renders when language changes\n  useLanguage();\n  const [value, onChange] = useState<Value>(new Date());\n  const [salesData, setSalesData] = useState<BranchSales[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Format date as YYYY-MM-DD for API calls\n  const formatDateForAPI = (date: Date): string => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n\n  // Fetch sales data based on selected date\n  const fetchSalesData = async (date: Date) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const formattedDate = formatDateForAPI(date);\n\n      // Use the regular sales endpoint with date filtering instead\n      const response = await fetch(`http://localhost:3002/sales?date=${formattedDate}`);\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch sales data: ${response.status}`);\n      }\n\n      const salesList = await response.json();\n\n      // Process the data to group by branch\n      const branchMap: Record<string, BranchSales> = {};\n\n      // Process each sale\n      const salesPromises = salesList.map(async (sale: any) => {\n        // Fetch sale items for this sale\n        try {\n          const itemsResponse = await fetch(`http://localhost:3002/sales/${sale.sale_id}`);\n          if (itemsResponse.ok) {\n            const saleDetails = await itemsResponse.json();\n            // Extract item names\n            const itemNames = saleDetails.items?.map((item: any) => item.product_title).join(', ') || 'No items';\n\n            return {\n              ...sale,\n              sold_items: itemNames\n            };\n          }\n          return sale;\n        } catch (err) {\n          console.error(`Error fetching items for sale ${sale.sale_id}:`, err);\n          return sale;\n        }\n      });\n\n      // Wait for all item fetches to complete\n      const salesWithItems = await Promise.all(salesPromises);\n\n      // Now process the sales with items\n      salesWithItems.forEach((sale: any) => {\n        const branchId = sale.branch_id;\n\n        // Initialize branch if not exists\n        if (!branchMap[branchId]) {\n          branchMap[branchId] = {\n            branch_id: branchId,\n            branch_name: sale.branch_name || `Branch ${branchId}`,\n            sales: []\n          };\n        }\n\n        // Only add if we haven't reached the limit for this branch (5 sales)\n        if (branchMap[branchId].sales.length < 5) {\n          branchMap[branchId].sales.push({\n            sale_id: sale.sale_id,\n            customer_name: sale.customer_name,\n            total_amount: sale.total_amount,\n            payment_method: sale.payment_method,\n            sale_date: sale.sale_date,\n            cashier_name: `${sale.cashier_first_name || ''} ${sale.cashier_last_name || ''}`.trim(),\n            sold_items: sale.sold_items || 'Various items'\n          });\n        }\n      });\n\n      // Convert to array\n      const branchSalesArray = Object.values(branchMap);\n      setSalesData(branchSalesArray);\n    } catch (err) {\n      console.error('Error fetching sales data:', err);\n      setError(err instanceof Error ? err.message : 'An unknown error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format date for display\n  const formatDate = (dateString: string): string => {\n    const date = new Date(dateString);\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n\n  // Handle date change in calendar\n  const handleDateChange = (value: Value) => {\n    onChange(value);\n    if (value instanceof Date) {\n      fetchSalesData(value);\n    }\n  };\n\n  // Fetch initial data on component mount\n  useEffect(() => {\n    fetchSalesData(new Date());\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"#FFF6BD\" }} className=\"p-4 rounded-md\"> {/* Set background color here */}\n      <Calendar onChange={handleDateChange} value={value} />\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-xl font-semibold my-4\">\n          <TranslatedText textKey=\"dashboard.recentSales\" fallback=\"Recent Sales\" />\n        </h1>\n        <div className=\"text-sm text-gray-500\">\n          {value instanceof Date && (\n            <span>{value.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}</span>\n          )}\n        </div>\n      </div>\n\n      {loading ? (\n        <div className=\"flex justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-yellow-500\"></div>\n        </div>\n      ) : error ? (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\">\n          {error}\n        </div>\n      ) : salesData.length === 0 ? (\n        <div className=\"text-center py-8 text-gray-500\">\n          <TranslatedText textKey=\"dashboard.noSalesFound\" fallback=\"No sales found for this date\" />\n        </div>\n      ) : (\n        <div className=\"space-y-6\">\n          {salesData.map((branchData) => (\n            <div key={branchData.branch_id} className=\"mb-4\">\n              <h2 className=\"text-md font-semibold text-gray-700 mb-2\">{branchData.branch_name}</h2>\n\n              {branchData.sales.length === 0 ? (\n                <div className=\"text-sm text-gray-500 italic\">No sales for this branch today</div>\n              ) : (\n                <div className=\"flex flex-col gap-3\">\n                  {branchData.sales.map((sale) => (\n                    <div\n                      className=\"p-4 rounded-md border border-gray-200 shadow-sm bg-white border-l-4\"\n                      style={{ borderLeftColor: branchData.branch_id === 1 ? '#4ECDC4' : '#FF6B6B' }}\n                      key={sale.sale_id}\n                    >\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <h3 className=\"font-medium text-gray-800\">\n                            {sale.customer_name}\n                            <span className=\"ml-2 text-sm font-normal text-gray-500\">({sale.payment_method})</span>\n                          </h3>\n                          <p className=\"text-sm text-gray-600 mt-1\">\n                            <span className=\"font-medium\">Cashier:</span> {sale.cashier_name}\n                          </p>\n                          <p className=\"text-sm text-gray-600 mt-1\">\n                            <span className=\"font-medium\">Items:</span> {sale.sold_items}\n                          </p>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-lg font-semibold text-green-600\">\n                            {formatCurrency(sale.total_amount)}\n                          </div>\n                          <div className=\"text-xs text-gray-400 mt-1\">\n                            {formatDate(sale.sale_date)}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EventCalendar;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1163, "column": 0}, "map": {"version":3,"sources":["file://E%3A/JewelleryWEBApp/front_end/src/components/FinanceChart.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\n// import Image from \"next/image\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n} from \"recharts\";\nimport { Menu, ChevronDown, Calendar, BarChart2, LineChart as LineChartIcon } from \"lucide-react\";\nimport { formatCurrency } from \"@/utils/formatters\";\n\n// Define types for finance data\ninterface Branch {\n  id: number;\n  name: string;\n}\n\ninterface ChartDataPoint {\n  name: string;\n  date: string;\n  income: number;\n  expense: number;\n  [key: string]: any; // For branch-specific data like branch_1, branch_2, etc.\n}\n\ninterface FinanceData {\n  chartData: ChartDataPoint[];\n  branches: Branch[];\n}\n\nconst FinanceChart = () => {\n  // State for finance data\n  const [financeData, setFinanceData] = useState<FinanceData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // State for filters\n  const [period, setPeriod] = useState<'daily' | 'monthly'>('monthly');\n  const [selectedBranch, setSelectedBranch] = useState<number | null>(null);\n  const [showFilterMenu, setShowFilterMenu] = useState(false);\n  const [chartType, setChartType] = useState<'line' | 'bar'>('line');\n\n  // Calculate current year and month\n  const currentYear = new Date().getFullYear();\n  const currentMonth = new Date().getMonth() + 1; // JavaScript months are 0-indexed\n\n  // Fetch finance data\n  useEffect(() => {\n    const fetchFinanceData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Construct URL with query parameters\n        let url = `http://localhost:3002/sales/finance?period=${period}`;\n\n        if (selectedBranch) {\n          url += `&branch_id=${selectedBranch}`;\n        }\n\n        // If period is daily, include current month\n        if (period === 'daily') {\n          url += `&year=${currentYear}&month=${currentMonth}`;\n        } else {\n          url += `&year=${currentYear}`;\n        }\n\n        console.log('Fetching finance data from:', url);\n\n        const response = await fetch(url);\n\n        if (!response.ok) {\n          throw new Error(`Failed to fetch finance data: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('Finance data received:', data);\n\n        setFinanceData(data);\n      } catch (err) {\n        console.error('Error fetching finance data:', err);\n        setError(err instanceof Error ? err.message : 'An unknown error occurred');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFinanceData();\n  }, [period, selectedBranch, currentYear, currentMonth]);\n\n  // Calculate totals\n  const totalIncome = financeData?.chartData.reduce((sum, item) => sum + (typeof item.income === 'string' ? parseFloat(item.income) : item.income), 0) || 0;\n  const totalExpense = financeData?.chartData.reduce((sum, item) => sum + (typeof item.expense === 'string' ? parseFloat(item.expense) : item.expense), 0) || 0;\n  const profit = totalIncome - totalExpense;\n\n  // Toggle filter menu\n  const toggleFilterMenu = () => setShowFilterMenu(!showFilterMenu);\n\n  // Format currency for tooltip\n  const formatTooltipValue = (value: number) => {\n    return formatCurrency(value);\n  };\n\n  // Custom tooltip component\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-white p-3 border border-gray-200 shadow-md rounded-md\">\n          <p className=\"font-semibold\">{label}</p>\n          {payload.map((entry: any, index: number) => (\n            <p key={index} style={{ color: entry.color }}>\n              {entry.name}: {formatCurrency(typeof entry.value === 'string' ? parseFloat(entry.value) : entry.value)}\n            </p>\n          ))}\n\n          {/* Show branch breakdown if available */}\n          {payload[0].payload.branch_1 && (\n            <div className=\"mt-2 pt-2 border-t border-gray-200\">\n              <p className=\"font-semibold text-xs\">Branch Breakdown:</p>\n              <p className=\"text-xs\">\n                {payload[0].payload.branch_1_name}: {formatCurrency(typeof payload[0].payload.branch_1 === 'string' ? parseFloat(payload[0].payload.branch_1) : payload[0].payload.branch_1)}\n              </p>\n              {payload[0].payload.branch_2 && (\n                <p className=\"text-xs\">\n                  {payload[0].payload.branch_2_name}: {formatCurrency(typeof payload[0].payload.branch_2 === 'string' ? parseFloat(payload[0].payload.branch_2) : payload[0].payload.branch_2)}\n                </p>\n              )}\n            </div>\n          )}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"bg-[#FFF6BD] rounded-xl w-full h-full p-4\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <div>\n          <h1 className=\"text-lg font-bold text-black\">Finance</h1>\n          <p className=\"text-sm text-gray-600\">\n            {period === 'monthly' ? 'Monthly' : 'Daily'} Overview - {currentYear}\n            {period === 'daily' && ` (${new Date(currentYear, currentMonth - 1).toLocaleString('default', { month: 'long' })})`}\n          </p>\n        </div>\n\n        <div className=\"relative\">\n          <button\n            onClick={toggleFilterMenu}\n            className=\"flex items-center bg-white rounded-md px-3 py-1 shadow-sm hover:bg-gray-50\"\n          >\n            <Menu size={16} className=\"mr-1\" />\n            Options\n            <ChevronDown size={16} className=\"ml-1\" />\n          </button>\n\n          {showFilterMenu && (\n            <div className=\"absolute right-0 mt-1 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\">\n              <div className=\"p-2\">\n                <p className=\"text-xs font-semibold text-gray-500 mb-1\">Time Period</p>\n                <div className=\"flex flex-col space-y-1\">\n                  <button\n                    className={`flex items-center px-3 py-1 rounded-md text-left text-sm ${period === 'monthly' ? 'bg-yellow-100' : 'hover:bg-gray-100'}`}\n                    onClick={() => setPeriod('monthly')}\n                  >\n                    <Calendar size={14} className=\"mr-2\" />\n                    Monthly\n                  </button>\n                  <button\n                    className={`flex items-center px-3 py-1 rounded-md text-left text-sm ${period === 'daily' ? 'bg-yellow-100' : 'hover:bg-gray-100'}`}\n                    onClick={() => setPeriod('daily')}\n                  >\n                    <Calendar size={14} className=\"mr-2\" />\n                    Daily\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"border-t border-gray-200 p-2\">\n                <p className=\"text-xs font-semibold text-gray-500 mb-1\">Branch</p>\n                <div className=\"flex flex-col space-y-1\">\n                  <button\n                    className={`px-3 py-1 rounded-md text-left text-sm ${selectedBranch === null ? 'bg-yellow-100' : 'hover:bg-gray-100'}`}\n                    onClick={() => setSelectedBranch(null)}\n                  >\n                    All Branches\n                  </button>\n                  {financeData?.branches.map(branch => (\n                    <button\n                      key={branch.id}\n                      className={`px-3 py-1 rounded-md text-left text-sm ${selectedBranch === branch.id ? 'bg-yellow-100' : 'hover:bg-gray-100'}`}\n                      onClick={() => setSelectedBranch(branch.id)}\n                    >\n                      {branch.name}\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"border-t border-gray-200 p-2\">\n                <p className=\"text-xs font-semibold text-gray-500 mb-1\">Chart Type</p>\n                <div className=\"flex flex-col space-y-1\">\n                  <button\n                    className={`flex items-center px-3 py-1 rounded-md text-left text-sm ${chartType === 'line' ? 'bg-yellow-100' : 'hover:bg-gray-100'}`}\n                    onClick={() => setChartType('line')}\n                  >\n                    <LineChartIcon size={14} className=\"mr-2\" />\n                    Line Chart\n                  </button>\n                  <button\n                    className={`flex items-center px-3 py-1 rounded-md text-left text-sm ${chartType === 'bar' ? 'bg-yellow-100' : 'hover:bg-gray-100'}`}\n                    onClick={() => setChartType('bar')}\n                  >\n                    <BarChart2 size={14} className=\"mr-2\" />\n                    Bar Chart\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-3 gap-3 mb-4\">\n        <div className=\"bg-white p-2 rounded-md shadow-sm\">\n          <p className=\"text-xs text-gray-500\">Total Income</p>\n          <p className=\"text-lg font-bold\">{formatCurrency(totalIncome)}</p>\n        </div>\n        <div className=\"bg-white p-2 rounded-md shadow-sm\">\n          <p className=\"text-xs text-gray-500\">Total Expenses</p>\n          <p className=\"text-lg font-bold\">{formatCurrency(totalExpense)}</p>\n        </div>\n        <div className=\"bg-white p-2 rounded-md shadow-sm\">\n          <p className=\"text-xs text-gray-500\">Net Profit</p>\n          <p className={`text-lg font-bold ${profit >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n            {formatCurrency(profit)}\n          </p>\n        </div>\n      </div>\n\n      {loading ? (\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-yellow-500\"></div>\n        </div>\n      ) : error ? (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\">\n          {error}\n        </div>\n      ) : (\n        <ResponsiveContainer width=\"100%\" height={300}>\n          {chartType === 'line' ? (\n            <LineChart\n              data={financeData?.chartData || []}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#ddd\" />\n              <XAxis\n                dataKey=\"name\"\n                axisLine={false}\n                tick={{ fill: \"#000000\" }}\n                tickLine={false}\n                tickMargin={10}\n              />\n              <YAxis\n                axisLine={false}\n                tick={{ fill: \"#000000\" }}\n                tickLine={false}\n                tickMargin={20}\n                tickFormatter={formatTooltipValue}\n              />\n              <Tooltip content={<CustomTooltip />} />\n              <Legend\n                align=\"center\"\n                verticalAlign=\"top\"\n                wrapperStyle={{ paddingTop: \"10px\", paddingBottom: \"10px\" }}\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"income\"\n                name=\"Income\"\n                stroke=\"#AA60C8\"\n                strokeWidth={3}\n                activeDot={{ r: 8 }}\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"expense\"\n                name=\"Expense\"\n                stroke=\"#BE5985\"\n                strokeWidth={3}\n              />\n            </LineChart>\n          ) : (\n            <BarChart\n              data={financeData?.chartData || []}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#ddd\" />\n              <XAxis\n                dataKey=\"name\"\n                axisLine={false}\n                tick={{ fill: \"#000000\" }}\n                tickLine={false}\n                tickMargin={10}\n              />\n              <YAxis\n                axisLine={false}\n                tick={{ fill: \"#000000\" }}\n                tickLine={false}\n                tickMargin={20}\n                tickFormatter={formatTooltipValue}\n              />\n              <Tooltip content={<CustomTooltip />} />\n              <Legend\n                align=\"center\"\n                verticalAlign=\"top\"\n                wrapperStyle={{ paddingTop: \"10px\", paddingBottom: \"10px\" }}\n              />\n              <Bar dataKey=\"income\" name=\"Income\" fill=\"#F3C623\" radius={[4, 4, 0, 0]} />\n              <Bar dataKey=\"expense\" name=\"Expense\" fill=\"#F2CD5C\" radius={[4, 4, 0, 0]} />\n            </BarChart>\n          )}\n        </ResponsiveContainer>\n      )}\n\n      {/* Branch Breakdown */}\n      {!loading && !error && !selectedBranch && financeData && financeData.branches.length > 1 && (\n        <div className=\"mt-4\">\n          <h3 className=\"text-sm font-semibold mb-2\">Branch Breakdown</h3>\n          <div className=\"grid grid-cols-2 gap-3\">\n            {financeData?.branches.map(branch => {\n              const branchKey = `branch_${branch.id}`;\n              // Calculate the total for this branch across all periods\n              const branchTotal = financeData?.chartData.reduce(\n                (sum, item) => {\n                  const value = item[branchKey];\n                  return sum + (value ? (typeof value === 'string' ? parseFloat(value) : value) : 0);\n                },\n                0\n              );\n\n              // Calculate branch percentages correctly\n              // We need to sum up all branch totals first to get the actual total\n              const allBranchesTotals = financeData.branches.reduce((total, b) => {\n                const bKey = `branch_${b.id}`;\n                const bTotal = financeData.chartData.reduce(\n                  (sum, item) => {\n                    const value = item[bKey];\n                    return sum + (value ? (typeof value === 'string' ? parseFloat(value) : value) : 0);\n                  },\n                  0\n                );\n                return total + bTotal;\n              }, 0);\n\n              // Now calculate the percentage based on the sum of all branch totals\n              const percentage = allBranchesTotals > 0\n                ? Math.round((branchTotal / allBranchesTotals) * 100)\n                : 0;\n\n              return (\n                <div key={branch.id} className=\"bg-white p-3 rounded-md shadow-sm\">\n                  <div className=\"flex justify-between items-center\">\n                    <p className=\"font-medium\">{branch.name}</p>\n                    <p className=\"text-sm text-gray-500\">{percentage}%</p>\n                  </div>\n                  <p className=\"text-lg font-bold\">{formatCurrency(branchTotal)}</p>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2 mt-1\">\n                    <div\n                      className=\"bg-yellow-500 h-2 rounded-full\"\n                      style={{ width: `${percentage}%` }}\n                    ></div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FinanceChart;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2028, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2034, "column": 0}, "map": {"version":3,"sources":["file://E%3A/JewelleryWEBApp/front_end/src/components/UserCard.tsx"],"sourcesContent":["import Image from \"next/image\";\nimport { useLanguage } from \"@/contexts/LanguageContext\";\nimport TranslatedText from \"./TranslatedText\";\nimport { useEffect, useState } from \"react\";\n\nconst UserCard = ({ type }: { type: string }) => {\n  // Use language context to trigger re-renders when language changes\n  useLanguage();\n\n  const [count, setCount] = useState<number>(0);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchCount = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        // Convert type to lowercase and remove spaces for API endpoint\n        const typeKey = type.toLowerCase().replace(/\\s+/g, '');\n\n        // Fetch count from API\n        const response = await fetch(`http://localhost:3002/dashboard-counts/users/${typeKey}`);\n\n        // Special case for jewellery items\n        if (typeKey === 'jewelleryitem') {\n          const response = await fetch(`http://localhost:3002/dashboard-counts/jewellery-items`);\n          if (!response.ok) {\n            throw new Error(`Failed to fetch ${type} count`);\n          }\n\n          const data = await response.json();\n          // Use total_stock for jewellery items\n          setCount(data.total_stock || 0);\n        } else {\n          if (!response.ok) {\n            throw new Error(`Failed to fetch ${type} count`);\n          }\n\n          const data = await response.json();\n          setCount(data.count || 0);\n        }\n      } catch (err) {\n        console.error(`Error fetching ${type} count:`, err);\n        setError(err instanceof Error ? err.message : 'An error occurred');\n        setCount(0);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCount();\n\n    // Set up interval to refresh data every 30 seconds\n    const intervalId = setInterval(fetchCount, 30000);\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, [type]);\n\n  return (\n    <div className=\"rounded-2xl p-4 flex-1 min-w-[130px]\" style={{ backgroundColor: \"#FFE569\" }}>\n      <div className=\"flex justify-between items-center\">\n        <span className=\"text-[10px] bg-white px-2 py-1 rounded-full text-green-600\">\n          2024/25\n        </span>\n        <Image src=\"/more.png\" alt=\"\" width={20} height={20} />\n      </div>\n      <h1 className=\"text-2xl font-semibold my-4\">\n        {loading ? (\n          <span className=\"text-gray-400\">...</span>\n        ) : error ? (\n          <span className=\"text-red-500 text-sm\">Error</span>\n        ) : (\n          count.toLocaleString()\n        )}\n      </h1>\n      <h2 className=\"capitalize text-sm font-medium text-gray-500\">\n        <TranslatedText textKey={`dashboard.${type.toLowerCase().replace(/\\s+/g, '')}`} fallback={`${type}s`} />\n      </h2>\n    </div>\n  );\n};\n\nexport default UserCard;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;AAEA,MAAM,WAAW,CAAC,EAAE,IAAI,EAAoB;;IAC1C,mEAAmE;IACnE,CAAA,GAAA,sIAAA,CAAA,cAAW,AAAD;IAEV,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,MAAM;iDAAa;oBACjB,WAAW;oBACX,SAAS;oBAET,IAAI;wBACF,+DAA+D;wBAC/D,MAAM,UAAU,KAAK,WAAW,GAAG,OAAO,CAAC,QAAQ;wBAEnD,uBAAuB;wBACvB,MAAM,WAAW,MAAM,MAAM,CAAC,6CAA6C,EAAE,SAAS;wBAEtF,mCAAmC;wBACnC,IAAI,YAAY,iBAAiB;4BAC/B,MAAM,WAAW,MAAM,MAAM,CAAC,sDAAsD,CAAC;4BACrF,IAAI,CAAC,SAAS,EAAE,EAAE;gCAChB,MAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE,KAAK,MAAM,CAAC;4BACjD;4BAEA,MAAM,OAAO,MAAM,SAAS,IAAI;4BAChC,sCAAsC;4BACtC,SAAS,KAAK,WAAW,IAAI;wBAC/B,OAAO;4BACL,IAAI,CAAC,SAAS,EAAE,EAAE;gCAChB,MAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE,KAAK,MAAM,CAAC;4BACjD;4BAEA,MAAM,OAAO,MAAM,SAAS,IAAI;4BAChC,SAAS,KAAK,KAAK,IAAI;wBACzB;oBACF,EAAE,OAAO,KAAK;wBACZ,QAAQ,KAAK,CAAC,CAAC,eAAe,EAAE,KAAK,OAAO,CAAC,EAAE;wBAC/C,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;wBAC9C,SAAS;oBACX,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;YAEA,mDAAmD;YACnD,MAAM,aAAa,YAAY,YAAY;YAE3C,yCAAyC;YACzC;sCAAO,IAAM,cAAc;;QAC7B;6BAAG;QAAC;KAAK;IAET,qBACE,6LAAC;QAAI,WAAU;QAAuC,OAAO;YAAE,iBAAiB;QAAU;;0BACxF,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAA6D;;;;;;kCAG7E,6LAAC,gIAAA,CAAA,UAAK;wBAAC,KAAI;wBAAY,KAAI;wBAAG,OAAO;wBAAI,QAAQ;;;;;;;;;;;;0BAEnD,6LAAC;gBAAG,WAAU;0BACX,wBACC,6LAAC;oBAAK,WAAU;8BAAgB;;;;;2BAC9B,sBACF,6LAAC;oBAAK,WAAU;8BAAuB;;;;;2BAEvC,MAAM,cAAc;;;;;;0BAGxB,6LAAC;gBAAG,WAAU;0BACZ,cAAA,6LAAC,uIAAA,CAAA,UAAc;oBAAC,SAAS,CAAC,UAAU,EAAE,KAAK,WAAW,GAAG,OAAO,CAAC,QAAQ,KAAK;oBAAE,UAAU,GAAG,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;;;AAI5G;GA9EM;;QAEJ,sIAAA,CAAA,cAAW;;;KAFP;uCAgFS","debugId":null}},
    {"offset": {"line": 2191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2197, "column": 0}, "map": {"version":3,"sources":["file://E%3A/JewelleryWEBApp/front_end/src/app/DashView/admin/page.tsx"],"sourcesContent":["\"use client\";\n\nimport Announcements from \"@/components/Announcements\";\nimport AttendanceChart from \"@/components/AttendanceChart\";\nimport CountChart from \"@/components/CountChart\";\nimport EventCalendar from \"@/components/EventCalendar\";\nimport FinanceChart from \"@/components/FinanceChart\";\nimport UserCard from \"@/components/UserCard\";\nimport { useLanguage } from \"@/contexts/LanguageContext\";\n\nconst AdminPage = () => {\n  // Use language context to trigger re-renders when language changes\n  useLanguage();\n  return (\n    <div className=\"p-4 flex gap-4 flex-col md:flex-row\">\n      {/* LEFT */}\n      <div className=\"w-full lg:w-2/3 flex flex-col gap-8\">\n        {/* USER CARDS */}\n        <div className=\"flex gap-4 justify-between flex-wrap\">\n          <UserCard type=\"Jewellery Item\" />\n          <UserCard type=\"Store Manager\" />\n          <UserCard type=\"Cashier\" />\n          <UserCard type=\"Sales Associate\" />\n        </div>\n        {/* MIDDLE CHARTS */}\n        <div className=\"flex gap-4 flex-col lg:flex-row\">\n          {/* COUNT CHART */}\n          <div className=\"w-full lg:w-1/3 h-[450px]\">\n            <CountChart />\n          </div>\n          {/* ATTENDANCE CHART */}\n          <div className=\"w-full lg:w-2/3 h-[450px]\">\n            <AttendanceChart />\n          </div>\n        </div>\n        {/* BOTTOM CHART */}\n        <div className=\"w-full h-[500px]\">\n          <FinanceChart />\n        </div>\n      </div>\n      {/* RIGHT */}\n      <div className=\"w-full lg:w-1/3 flex flex-col gap-8\">\n        <EventCalendar />\n        <Announcements/>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;AAUA,MAAM,YAAY;;IAChB,mEAAmE;IACnE,CAAA,GAAA,sIAAA,CAAA,cAAW,AAAD;IACV,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,iIAAA,CAAA,UAAQ;gCAAC,MAAK;;;;;;0CACf,6LAAC,iIAAA,CAAA,UAAQ;gCAAC,MAAK;;;;;;0CACf,6LAAC,iIAAA,CAAA,UAAQ;gCAAC,MAAK;;;;;;0CACf,6LAAC,iIAAA,CAAA,UAAQ;gCAAC,MAAK;;;;;;;;;;;;kCAGjB,6LAAC;wBAAI,WAAU;;0CAEb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,mIAAA,CAAA,UAAU;;;;;;;;;;0CAGb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,wIAAA,CAAA,UAAe;;;;;;;;;;;;;;;;kCAIpB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,qIAAA,CAAA,UAAY;;;;;;;;;;;;;;;;0BAIjB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,sIAAA,CAAA,UAAa;;;;;kCACd,6LAAC,sIAAA,CAAA,UAAa;;;;;;;;;;;;;;;;;AAItB;GArCM;;QAEJ,sIAAA,CAAA,cAAW;;;KAFP;uCAuCS","debugId":null}},
    {"offset": {"line": 2354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}