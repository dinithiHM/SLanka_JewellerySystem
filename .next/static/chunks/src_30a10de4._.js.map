{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/services/reportService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3002';\n\n// Create axios instance with auth header\nconst axiosInstance = axios.create({\n  baseURL: `${API_URL}/api/reports`,\n});\n\n// Add request interceptor to include auth token\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n/**\n * Get sales report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getSalesReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/sales', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching sales report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get inventory report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getInventoryReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/inventory', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching inventory report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get customer report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getCustomerReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/customers', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching customer report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get financial report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getFinancialReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/financial', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching financial report:', error);\n    throw error;\n  }\n};\n\n/**\n * Export report as CSV\n * @param {String} reportType - Type of report to export\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with export result\n */\nexport const exportReportCSV = async (reportType, params = {}) => {\n  try {\n    const response = await axiosInstance.get('/export', {\n      params: { reportType, ...params },\n      responseType: 'blob'\n    });\n\n    // Create a download link and trigger download\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n\n    // Generate filename\n    const date = new Date().toISOString().split('T')[0];\n    link.setAttribute('download', `${reportType}_report_${date}.csv`);\n\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n\n    return { success: true };\n  } catch (error) {\n    console.error('Error exporting report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get custom report data\n * @param {Object} config - Custom report configuration\n * @returns {Promise} - Promise with report data\n */\nexport const getCustomReport = async (config) => {\n  try {\n    // This would be implemented to handle custom report requests\n    // For now, we'll just return a mock response\n    return {\n      success: true,\n      message: 'Custom report functionality will be implemented here',\n      config\n    };\n  } catch (error) {\n    console.error('Error generating custom report:', error);\n    throw error;\n  }\n};\n"],"names":[],"mappings":";;;;;;;;AAEgB;AAFhB;;AAEA,MAAM,UAAU,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI;AAEnD,yCAAyC;AACzC,MAAM,gBAAgB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,SAAS,GAAG,QAAQ,YAAY,CAAC;AACnC;AAEA,gDAAgD;AAChD,cAAc,YAAY,CAAC,OAAO,CAAC,GAAG,CACpC,CAAC;IACC,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;IACrD;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAQK,MAAM,iBAAiB,OAAO,SAAS,CAAC,CAAC;IAC9C,IAAI;QACF,MAAM,WAAW,MAAM,cAAc,GAAG,CAAC,UAAU;YAAE;QAAO;QAC5D,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM;IACR;AACF;AAOO,MAAM,qBAAqB,OAAO,SAAS,CAAC,CAAC;IAClD,IAAI;QACF,MAAM,WAAW,MAAM,cAAc,GAAG,CAAC,cAAc;YAAE;QAAO;QAChE,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,MAAM;IACR;AACF;AAOO,MAAM,oBAAoB,OAAO,SAAS,CAAC,CAAC;IACjD,IAAI;QACF,MAAM,WAAW,MAAM,cAAc,GAAG,CAAC,cAAc;YAAE;QAAO;QAChE,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,MAAM;IACR;AACF;AAOO,MAAM,qBAAqB,OAAO,SAAS,CAAC,CAAC;IAClD,IAAI;QACF,MAAM,WAAW,MAAM,cAAc,GAAG,CAAC,cAAc;YAAE;QAAO;QAChE,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,MAAM;IACR;AACF;AAQO,MAAM,kBAAkB,OAAO,YAAY,SAAS,CAAC,CAAC;IAC3D,IAAI;QACF,MAAM,WAAW,MAAM,cAAc,GAAG,CAAC,WAAW;YAClD,QAAQ;gBAAE;gBAAY,GAAG,MAAM;YAAC;YAChC,cAAc;QAChB;QAEA,8CAA8C;QAC9C,MAAM,MAAM,OAAO,GAAG,CAAC,eAAe,CAAC,IAAI,KAAK;YAAC,SAAS,IAAI;SAAC;QAC/D,MAAM,OAAO,SAAS,aAAa,CAAC;QACpC,KAAK,IAAI,GAAG;QAEZ,oBAAoB;QACpB,MAAM,OAAO,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QACnD,KAAK,YAAY,CAAC,YAAY,GAAG,WAAW,QAAQ,EAAE,KAAK,IAAI,CAAC;QAEhE,SAAS,IAAI,CAAC,WAAW,CAAC;QAC1B,KAAK,KAAK;QACV,KAAK,MAAM;QAEX,OAAO;YAAE,SAAS;QAAK;IACzB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,MAAM;IACR;AACF;AAOO,MAAM,kBAAkB,OAAO;IACpC,IAAI;QACF,6DAA6D;QAC7D,6CAA6C;QAC7C,OAAO;YACL,SAAS;YACT,SAAS;YACT;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/app/DashView/reports/sales/by-branch/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, Filter, Download, Printer, BarChart as BarChartIcon, RefreshCw, ArrowLeft } from 'lucide-react';\nimport Link from 'next/link';\nimport { getSalesReport } from '@/services/reportService';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend, Cell } from 'recharts';\n\ninterface SalesData {\n  summary: {\n    totalSales: number;\n    totalTransactions: number;\n    averageOrderValue: number;\n  };\n  salesByDay: {\n    date: string;\n    amount: number;\n    transactions: number;\n  }[];\n  topCategories: {\n    category_name: string;\n    totalQuantity: number;\n    totalAmount: number;\n  }[];\n  topProducts: {\n    item_name: string;\n    totalQuantity: number;\n    totalAmount: number;\n  }[];\n  recentSales: {\n    sale_id: number;\n    customer_name: string;\n    total_amount: number;\n    payment_method: string;\n    sale_date: string;\n    branch_id: number;\n    branch_name: string;\n  }[];\n  branches: {\n    branch_id: number;\n    branch_name: string;\n  }[];\n  salesByBranch: {\n    branch_id: number;\n    branch_name: string;\n    transactions: number;\n    total: number;\n  }[];\n  paymentMethods: {\n    payment_method: string;\n    count: number;\n    total: number;\n  }[];\n  period: string;\n  dateRange: {\n    startDate: string;\n    endDate: string;\n  };\n}\n\n// Colors for the bar chart\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#FF6B6B', '#6B66FF', '#FFD166'];\n\nexport default function SalesByBranchReportPage() {\n  const [dateRange, setDateRange] = useState('last30');\n  const [isLoading, setIsLoading] = useState(true);\n  const [salesData, setSalesData] = useState<SalesData | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  // Format currency\n  const formatCurrency = (amount: number) => {\n    return `LKR ${amount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\n  };\n\n  // Fetch sales data\n  const fetchSalesData = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // Build query parameters\n      const params: any = { period: dateRange };\n\n      // Use the reportService to fetch data with authentication\n      const data = await getSalesReport(params);\n      setSalesData(data);\n    } catch (err) {\n      console.error('Error fetching sales data:', err);\n      setError('Failed to load sales data. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch data on initial load and when filters change\n  useEffect(() => {\n    fetchSalesData();\n  }, [dateRange]);\n\n  const handleRefresh = () => {\n    fetchSalesData();\n  };\n\n  // Prepare chart data for branches\n  const prepareBranchChartData = () => {\n    if (!salesData?.salesByBranch || salesData.salesByBranch.length === 0) {\n      return [{ name: 'No Data', value: 1 }];\n    }\n    \n    return salesData.salesByBranch.map(branch => ({\n      name: branch.branch_name,\n      sales: branch.total,\n      transactions: branch.transactions\n    }));\n  };\n\n  // Custom tooltip for the bar chart\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-white p-3 border border-gray-200 shadow-md rounded-md\">\n          <p className=\"font-medium\">{label}</p>\n          <p className=\"text-sm text-blue-600\">{`Sales: ${formatCurrency(payload[0].value)}`}</p>\n          <p className=\"text-sm text-green-600\">{`Transactions: ${payload[1].value}`}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"p-6\">\n      {/* Header with back button */}\n      <div className=\"flex items-center mb-6\">\n        <Link href=\"/DashView/reports/sales\" className=\"mr-4\">\n          <ArrowLeft className=\"h-5 w-5 text-gray-500 hover:text-gray-700\" />\n        </Link>\n        <h1 className=\"text-2xl font-bold text-gray-900\">Sales by Branch Report</h1>\n      </div>\n\n      {/* Filters and Actions */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4\">\n        <div className=\"flex flex-wrap items-center gap-3\">\n          {/* Date Range Filter */}\n          <div className=\"relative\">\n            <select\n              className=\"appearance-none pl-3 pr-10 py-2 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm\"\n              value={dateRange}\n              onChange={(e) => setDateRange(e.target.value)}\n            >\n              <option value=\"today\">Today</option>\n              <option value=\"yesterday\">Yesterday</option>\n              <option value=\"last7\">Last 7 Days</option>\n              <option value=\"last30\">Last 30 Days</option>\n              <option value=\"thisMonth\">This Month</option>\n              <option value=\"lastMonth\">Last Month</option>\n            </select>\n            <Calendar className=\"absolute right-3 top-2.5 h-4 w-4 text-gray-400\" />\n          </div>\n\n          {/* Refresh Button */}\n          <button\n            onClick={handleRefresh}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\"\n          >\n            <RefreshCw className=\"h-4 w-4 mr-1\" />\n            Refresh\n          </button>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          {/* Export Button */}\n          <button className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\">\n            <Download className=\"h-4 w-4 mr-1\" />\n            Export\n          </button>\n          \n          {/* Print Button */}\n          <button className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\">\n            <Printer className=\"h-4 w-4 mr-1\" />\n            Print\n          </button>\n        </div>\n      </div>\n\n      {/* Error Message */}\n      {error && (\n        <div className=\"bg-red-50 border-l-4 border-red-400 p-4 mb-6\">\n          <div className=\"flex\">\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-red-700\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isLoading ? (\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-yellow-500\"></div>\n        </div>\n      ) : (\n        <>\n          {/* Summary Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n            <div className=\"bg-white p-6 rounded-lg shadow-md border-l-4 border-yellow-500\">\n              <h3 className=\"text-gray-500 text-sm font-medium\">Total Sales</h3>\n              <p className=\"text-2xl font-bold mt-1\">{formatCurrency(salesData?.summary?.totalSales || 0)}</p>\n              <p className=\"text-sm text-gray-500 mt-1\">\n                {salesData?.dateRange?.startDate} to {salesData?.dateRange?.endDate}\n              </p>\n            </div>\n            \n            <div className=\"bg-white p-6 rounded-lg shadow-md border-l-4 border-blue-500\">\n              <h3 className=\"text-gray-500 text-sm font-medium\">Branches</h3>\n              <p className=\"text-2xl font-bold mt-1\">{salesData?.salesByBranch?.length || 0}</p>\n              <p className=\"text-sm text-gray-500 mt-1\">Total branches with sales</p>\n            </div>\n            \n            <div className=\"bg-white p-6 rounded-lg shadow-md border-l-4 border-green-500\">\n              <h3 className=\"text-gray-500 text-sm font-medium\">Top Branch</h3>\n              <p className=\"text-2xl font-bold mt-1\">\n                {salesData?.salesByBranch && salesData.salesByBranch.length > 0 \n                  ? salesData.salesByBranch[0].branch_name \n                  : 'No data'}\n              </p>\n              <p className=\"text-sm text-gray-500 mt-1\">\n                {salesData?.salesByBranch && salesData.salesByBranch.length > 0 \n                  ? formatCurrency(salesData.salesByBranch[0].total)\n                  : ''}\n              </p>\n            </div>\n          </div>\n\n          {/* Branch Sales Chart */}\n          <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Sales Performance by Branch</h2>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart\n                  data={prepareBranchChartData()}\n                  margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis yAxisId=\"left\" orientation=\"left\" stroke=\"#8884d8\" />\n                  <YAxis yAxisId=\"right\" orientation=\"right\" stroke=\"#82ca9d\" />\n                  <Tooltip content={<CustomTooltip />} />\n                  <Legend />\n                  <Bar yAxisId=\"left\" dataKey=\"sales\" name=\"Sales Amount\" fill=\"#8884d8\">\n                    {prepareBranchChartData().map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Bar>\n                  <Bar yAxisId=\"right\" dataKey=\"transactions\" name=\"Transactions\" fill=\"#82ca9d\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Branch Sales Table */}\n          <div className=\"bg-white shadow rounded-lg mb-6\">\n            <div className=\"px-4 py-5 sm:px-6 flex justify-between items-center\">\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Branch Sales Details</h3>\n              <span className=\"text-sm text-gray-500\">\n                {salesData?.salesByBranch?.length || 0} branches\n              </span>\n            </div>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Branch\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Transactions\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Sales Amount\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      % of Total Sales\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Average Order Value\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {salesData?.salesByBranch?.length === 0 ? (\n                    <tr>\n                      <td colSpan={5} className=\"px-6 py-4 text-center text-sm text-gray-500\">\n                        No branch data available\n                      </td>\n                    </tr>\n                  ) : (\n                    salesData?.salesByBranch?.map((branch) => (\n                      <tr key={branch.branch_id} className=\"hover:bg-gray-50\">\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {branch.branch_name}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {branch.transactions}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {formatCurrency(branch.total)}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {((branch.total / (salesData?.summary?.totalSales || 1)) * 100).toFixed(2)}%\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {formatCurrency(branch.total / branch.transactions)}\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 936, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}