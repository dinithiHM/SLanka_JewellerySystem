{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/utils/imageCompression.ts"],"sourcesContent":["/**\n * Compresses an image file to reduce its size\n * @param file The image file to compress\n * @param maxSizeMB Maximum size in MB\n * @param maxWidthOrHeight Maximum width or height in pixels\n * @returns A promise that resolves to a base64 string of the compressed image\n */\nexport const compressImage = async (\n  file: File,\n  maxSizeMB: number = 1,\n  maxWidthOrHeight: number = 1024\n): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    \n    reader.onload = (event) => {\n      const img = new Image();\n      img.src = event.target?.result as string;\n      \n      img.onload = () => {\n        // Create a canvas to resize the image\n        const canvas = document.createElement('canvas');\n        let width = img.width;\n        let height = img.height;\n        \n        // Calculate new dimensions while maintaining aspect ratio\n        if (width > height) {\n          if (width > maxWidthOrHeight) {\n            height = Math.round(height * maxWidthOrHeight / width);\n            width = maxWidthOrHeight;\n          }\n        } else {\n          if (height > maxWidthOrHeight) {\n            width = Math.round(width * maxWidthOrHeight / height);\n            height = maxWidthOrHeight;\n          }\n        }\n        \n        canvas.width = width;\n        canvas.height = height;\n        \n        // Draw the resized image on the canvas\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n          reject(new Error('Could not get canvas context'));\n          return;\n        }\n        \n        ctx.drawImage(img, 0, 0, width, height);\n        \n        // Convert to base64 with reduced quality\n        const quality = 0.7; // 70% quality\n        const compressedBase64 = canvas.toDataURL(file.type, quality);\n        \n        // Check if the compressed image is still too large\n        const base64Size = (compressedBase64.length * 3) / 4 / 1024 / 1024; // Size in MB\n        \n        if (base64Size > maxSizeMB) {\n          // If still too large, compress more aggressively\n          const furtherQuality = Math.min(maxSizeMB / base64Size * quality, 0.5);\n          const furtherCompressed = canvas.toDataURL(file.type, furtherQuality);\n          resolve(furtherCompressed);\n        } else {\n          resolve(compressedBase64);\n        }\n      };\n      \n      img.onerror = () => {\n        reject(new Error('Error loading image'));\n      };\n    };\n    \n    reader.onerror = () => {\n      reject(new Error('Error reading file'));\n    };\n  });\n};\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACM,MAAM,gBAAgB,OAC3B,MACA,YAAoB,CAAC,EACrB,mBAA2B,IAAI;IAE/B,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,MAAM,SAAS,IAAI;QACnB,OAAO,aAAa,CAAC;QAErB,OAAO,MAAM,GAAG,CAAC;YACf,MAAM,MAAM,IAAI;YAChB,IAAI,GAAG,GAAG,MAAM,MAAM,EAAE;YAExB,IAAI,MAAM,GAAG;gBACX,sCAAsC;gBACtC,MAAM,SAAS,SAAS,aAAa,CAAC;gBACtC,IAAI,QAAQ,IAAI,KAAK;gBACrB,IAAI,SAAS,IAAI,MAAM;gBAEvB,0DAA0D;gBAC1D,IAAI,QAAQ,QAAQ;oBAClB,IAAI,QAAQ,kBAAkB;wBAC5B,SAAS,KAAK,KAAK,CAAC,SAAS,mBAAmB;wBAChD,QAAQ;oBACV;gBACF,OAAO;oBACL,IAAI,SAAS,kBAAkB;wBAC7B,QAAQ,KAAK,KAAK,CAAC,QAAQ,mBAAmB;wBAC9C,SAAS;oBACX;gBACF;gBAEA,OAAO,KAAK,GAAG;gBACf,OAAO,MAAM,GAAG;gBAEhB,uCAAuC;gBACvC,MAAM,MAAM,OAAO,UAAU,CAAC;gBAC9B,IAAI,CAAC,KAAK;oBACR,OAAO,IAAI,MAAM;oBACjB;gBACF;gBAEA,IAAI,SAAS,CAAC,KAAK,GAAG,GAAG,OAAO;gBAEhC,yCAAyC;gBACzC,MAAM,UAAU,KAAK,cAAc;gBACnC,MAAM,mBAAmB,OAAO,SAAS,CAAC,KAAK,IAAI,EAAE;gBAErD,mDAAmD;gBACnD,MAAM,aAAa,AAAC,iBAAiB,MAAM,GAAG,IAAK,IAAI,OAAO,MAAM,aAAa;gBAEjF,IAAI,aAAa,WAAW;oBAC1B,iDAAiD;oBACjD,MAAM,iBAAiB,KAAK,GAAG,CAAC,YAAY,aAAa,SAAS;oBAClE,MAAM,oBAAoB,OAAO,SAAS,CAAC,KAAK,IAAI,EAAE;oBACtD,QAAQ;gBACV,OAAO;oBACL,QAAQ;gBACV;YACF;YAEA,IAAI,OAAO,GAAG;gBACZ,OAAO,IAAI,MAAM;YACnB;QACF;QAEA,OAAO,OAAO,GAAG;YACf,OAAO,IAAI,MAAM;QACnB;IACF;AACF","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/app/DashView/orders/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Image from 'next/image';\r\nimport { compressImage } from '@/utils/imageCompression';\r\n\r\nconst OrdersPage = () => {\r\n  // State for form fields\r\n  const [category, setCategory] = useState('');\r\n  const [supplier, setSupplier] = useState('');\r\n  const [quantity, setQuantity] = useState(20);\r\n  const [offerGold, setOfferGold] = useState('yes');\r\n  const [selectedKarats, setSelectedKarats] = useState({\r\n    '24KT': false,\r\n    '22KT': false,\r\n    '21KT': false,\r\n    '18KT': false,\r\n    '16KT': false,\r\n  });\r\n  const [karatValues, setKaratValues] = useState({\r\n    '24KT': 50,\r\n    '22KT': 50,\r\n    '21KT': 50,\r\n    '18KT': 50,\r\n    '16KT': 50,\r\n  });\r\n  const [imagePreview, setImagePreview] = useState<string | 'loading' | null>(null);\r\n  const [suppliers, setSuppliers] = useState<any[]>([]);\r\n\r\n  // Hardcoded categories for now\r\n  const categories = [\r\n    'Wedding Sets',\r\n    'Rings',\r\n    'Necklaces',\r\n    'Bracelets',\r\n    'Earrings',\r\n    'Pendants',\r\n    'Chains'\r\n  ];\r\n\r\n  // Fetch suppliers from the database\r\n  useEffect(() => {\r\n    const fetchSuppliers = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3002/suppliers');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setSuppliers(data);\r\n        } else {\r\n          console.error('Failed to fetch suppliers');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching suppliers:', error);\r\n        // Use dummy data if fetch fails\r\n        setSuppliers([\r\n          { supplier_id: '001', name: 'Mohamad Nazeem' },\r\n          { supplier_id: '002', name: 'Abdulla Nazeem' },\r\n          { supplier_id: '003', name: 'Vaseem Akram' },\r\n          { supplier_id: '004', name: 'Mohamad Sami' },\r\n        ]);\r\n      }\r\n    };\r\n\r\n    fetchSuppliers();\r\n  }, []);\r\n\r\n  // Handle karat checkbox change\r\n  const handleKaratChange = (karat: string) => {\r\n    setSelectedKarats({\r\n      ...selectedKarats,\r\n      [karat]: !selectedKarats[karat as keyof typeof selectedKarats]\r\n    });\r\n  };\r\n\r\n  // Handle karat value change\r\n  const handleKaratValueChange = (karat: string, value: number) => {\r\n    setKaratValues({\r\n      ...karatValues,\r\n      [karat]: value\r\n    });\r\n  };\r\n\r\n  // Handle image upload with compression\r\n  const handleImageUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      try {\r\n        // Show loading state\r\n        setImagePreview('loading');\r\n\r\n        // Check file type\r\n        if (!file.type.startsWith('image/')) {\r\n          alert('Please upload an image file');\r\n          setImagePreview(null);\r\n          return;\r\n        }\r\n\r\n        // Check initial file size (limit to 10MB for raw upload)\r\n        if (file.size > 10 * 1024 * 1024) {\r\n          alert('Image size should be less than 10MB');\r\n          setImagePreview(null);\r\n          return;\r\n        }\r\n\r\n        // Compress the image if larger than 1MB\r\n        let imageData: string;\r\n        if (file.size > 1 * 1024 * 1024) {\r\n          console.log(`Compressing image: ${(file.size / 1024 / 1024).toFixed(2)}MB`);\r\n          imageData = await compressImage(file, 1, 1200); // Max 1MB, max 1200px width/height\r\n          console.log(`Compressed to approximately: ${(imageData.length / 1024 / 1024 * 0.75).toFixed(2)}MB`);\r\n        } else {\r\n          // For small images, just read as data URL without compression\r\n          imageData = await new Promise<string>((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => resolve(reader.result as string);\r\n            reader.onerror = reject;\r\n            reader.readAsDataURL(file);\r\n          });\r\n        }\r\n\r\n        // Set the preview\r\n        setImagePreview(imageData);\r\n      } catch (error) {\r\n        console.error('Error processing image:', error);\r\n        alert('Error processing image. Please try again with a different image.');\r\n        setImagePreview(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Prepare the data to be sent\r\n      const orderData = {\r\n        category,\r\n        supplier,\r\n        quantity,\r\n        offerGold,\r\n        selectedKarats: Object.keys(selectedKarats).filter(k => selectedKarats[k as keyof typeof selectedKarats]),\r\n        karatValues: Object.fromEntries(\r\n          Object.entries(karatValues).filter(([k]) => selectedKarats[k as keyof typeof selectedKarats])\r\n        ),\r\n        image: imagePreview\r\n      };\r\n\r\n      console.log('Order data:', orderData);\r\n\r\n      // Send the data to the backend\r\n      const response = await fetch('http://localhost:3002/orders/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(orderData),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(result.message || 'Failed to create order');\r\n      }\r\n\r\n      alert('Order submitted successfully!');\r\n\r\n      // Reset form fields\r\n      setCategory('');\r\n      setSupplier('');\r\n      setQuantity(20);\r\n      setOfferGold('yes');\r\n      setSelectedKarats({\r\n        '24KT': false,\r\n        '22KT': false,\r\n        '21KT': false,\r\n        '18KT': false,\r\n        '16KT': false,\r\n      });\r\n      setKaratValues({\r\n        '24KT': 50,\r\n        '22KT': 50,\r\n        '21KT': 50,\r\n        '18KT': 50,\r\n        '16KT': 50,\r\n      });\r\n      setImagePreview(null);\r\n\r\n    } catch (error) {\r\n      console.error('Error submitting order:', error);\r\n      alert(`Failed to submit order: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto\">\r\n      <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n        <h2 className=\"text-2xl font-bold text-center mb-6\">Order</h2>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          {/* Item Category */}\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium mb-1\">Item Category</label>\r\n            <select\r\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Category</option>\r\n              {categories.map((cat) => (\r\n                <option key={cat} value={cat}>{cat}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Select Supplier */}\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium mb-1\">Select Supplier</label>\r\n            <select\r\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n              value={supplier}\r\n              onChange={(e) => setSupplier(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Supplier</option>\r\n              {suppliers.map((sup) => (\r\n                <option key={sup.supplier_id} value={sup.supplier_id}>\r\n                  {sup.supplier_id} - {sup.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Quantity */}\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium mb-1\">Quantity</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n              value={quantity}\r\n              onChange={(e) => setQuantity(Number(e.target.value))}\r\n              min=\"1\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Gold Material Option */}\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium mb-1\">Do You Offer Gold Material?</label>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <label className=\"flex items-center\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"offerGold\"\r\n                  value=\"yes\"\r\n                  checked={offerGold === 'yes'}\r\n                  onChange={() => setOfferGold('yes')}\r\n                  className=\"mr-2\"\r\n                />\r\n                Yes\r\n              </label>\r\n              <label className=\"flex items-center\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"offerGold\"\r\n                  value=\"no\"\r\n                  checked={offerGold === 'no'}\r\n                  onChange={() => setOfferGold('no')}\r\n                  className=\"mr-2\"\r\n                />\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Gold Karat Options - Only show if offerGold is 'yes' */}\r\n          {offerGold === 'yes' && (\r\n            <div className=\"mb-4 grid grid-cols-2 gap-4\">\r\n              <div>\r\n                {Object.keys(selectedKarats).map((karat) => (\r\n                  <div key={karat} className=\"flex items-center mb-2\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id={karat}\r\n                      checked={selectedKarats[karat as keyof typeof selectedKarats]}\r\n                      onChange={() => handleKaratChange(karat)}\r\n                      className=\"mr-2\"\r\n                    />\r\n                    <label htmlFor={karat} className=\"mr-4 w-12\">{karat}</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={karatValues[karat as keyof typeof karatValues]}\r\n                      onChange={(e) => handleKaratValueChange(karat, Number(e.target.value))}\r\n                      className=\"w-16 p-1 border border-gray-300 rounded-md\"\r\n                      disabled={!selectedKarats[karat as keyof typeof selectedKarats]}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Image Upload */}\r\n              <div className=\"flex flex-col items-center\">\r\n                <label className=\"block text-sm font-medium mb-2 text-center\">\r\n                  Add a image of Design\r\n                </label>\r\n                <div className=\"border border-gray-300 rounded-md p-2 w-full h-32 flex items-center justify-center\">\r\n                  {imagePreview === 'loading' ? (\r\n                    <div className=\"flex flex-col items-center justify-center\">\r\n                      <div className=\"w-8 h-8 border-4 border-gray-300 border-t-blue-500 rounded-full animate-spin mb-2\"></div>\r\n                      <span className=\"text-sm text-gray-500\">Compressing image...</span>\r\n                    </div>\r\n                  ) : imagePreview ? (\r\n                    <div className=\"relative w-full h-full\">\r\n                      <Image\r\n                        src={imagePreview}\r\n                        alt=\"Design Preview\"\r\n                        fill\r\n                        style={{ objectFit: 'contain' }}\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => setImagePreview(null)}\r\n                        className=\"absolute top-0 right-0 bg-red-500 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs\"\r\n                        title=\"Remove image\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <label className=\"cursor-pointer text-center\">\r\n                      <span className=\"text-blue-500\">Click to upload</span>\r\n                      <input\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        className=\"hidden\"\r\n                        onChange={handleImageUpload}\r\n                      />\r\n                    </label>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Add More Button */}\r\n          <div className=\"flex justify-center mb-4\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"bg-yellow-400 text-black px-6 py-2 rounded-full font-medium\"\r\n              onClick={() => alert('Add more functionality will be implemented later')}\r\n            >\r\n              ADD MORE\r\n            </button>\r\n          </div>\r\n\r\n          {/* Submit and Cancel Buttons */}\r\n          <div className=\"flex justify-between\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-yellow-400 text-black px-8 py-2 rounded-full font-medium\"\r\n            >\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"bg-gray-200 text-black px-8 py-2 rounded-full font-medium\"\r\n              onClick={() => window.history.back()}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      {/* We'll implement the supplier charts and details in the next phase */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersPage;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 717, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 722, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/node_modules/next/src/shared/lib/image-external.tsx"],"sourcesContent":["import type { ImageConfigComplete, ImageLoaderProps } from './image-config'\nimport type { ImageProps, ImageLoader, StaticImageData } from './get-img-props'\n\nimport { getImgProps } from './get-img-props'\nimport { Image } from '../../client/image-component'\n\n// @ts-ignore - This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\n\n/**\n * For more advanced use cases, you can call `getImageProps()`\n * to get the props that would be passed to the underlying `<img>` element,\n * and instead pass to them to another component, style, canvas, etc.\n *\n * Read more: [Next.js docs: `getImageProps`](https://nextjs.org/docs/app/api-reference/components/image#getimageprops)\n */\nexport function getImageProps(imgProps: ImageProps) {\n  const { props } = getImgProps(imgProps, {\n    defaultLoader,\n    // This is replaced by webpack define plugin\n    imgConf: process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete,\n  })\n  // Normally we don't care about undefined props because we pass to JSX,\n  // but this exported function could be used by the end user for anything\n  // so we delete undefined props to clean it up a little.\n  for (const [key, value] of Object.entries(props)) {\n    if (value === undefined) {\n      delete props[key as keyof typeof props]\n    }\n  }\n  return { props }\n}\n\nexport default Image\n\nexport type { ImageProps, ImageLoaderProps, ImageLoader, StaticImageData }\n"],"names":["getImageProps","imgProps","props","getImgProps","defaultLoader","imgConf","process","env","__NEXT_IMAGE_OPTS","key","value","Object","entries","undefined","Image"],"mappings":"AAoBaM,QAAQC,GAAG,CAACC,iBAAiB;;;;;;;;;;;;;;;;IAa1C,OAAoB,EAAA;eAApB;;IAjBgBR,aAAa,EAAA;eAAbA;;;;6BAbY;gCACN;sEAGI;AASnB,SAASA,cAAcC,QAAoB;IAChD,MAAM,EAAEC,KAAK,EAAE,GAAGC,CAAAA,GAAAA,aAAAA,WAAW,EAACF,UAAU;QACtCG,eAAAA,aAAAA,OAAa;QACb,4CAA4C;QAC5CC,OAAAA;IACF;IACA,uEAAuE;IACvE,wEAAwE;IACxE,wDAAwD;IACxD,KAAK,MAAM,CAACI,KAAKC,MAAM,IAAIC,OAAOC,OAAO,CAACV,OAAQ;QAChD,IAAIQ,UAAUG,WAAW;YACvB,OAAOX,KAAK,CAACO,IAA0B;QACzC;IACF;IACA,OAAO;QAAEP;IAAM;AACjB;MAEA,WAAeY,gBAAAA,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 773, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/node_modules/next/image.js"],"sourcesContent":["module.exports = require('./dist/shared/lib/image-external')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 774, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}