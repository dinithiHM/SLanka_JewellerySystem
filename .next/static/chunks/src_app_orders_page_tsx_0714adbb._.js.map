{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/app/orders/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\n\ninterface Order {\n  order_id: number;\n  category: string;\n  supplier_id: number;\n  quantity: number;\n  offer_gold: number;\n  selected_karats: string;\n  karat_values: string;\n  design_image: string;\n  design_image_url?: string;\n  status: string;\n  created_at: string;\n  updated_at: string;\n  branch_id?: number;\n  branch_name?: string;\n}\n\nconst OrdersPage = () => {\n  const [orders, setOrders] = useState<Order[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [userRole, setUserRole] = useState<string>('');\n  const [userBranchId, setUserBranchId] = useState<number | null>(null);\n\n  useEffect(() => {\n    // Get user info from localStorage\n    const role = localStorage.getItem('role');\n    const branchId = localStorage.getItem('branchId');\n\n    console.log('Retrieved from localStorage - Role:', role, 'Branch ID:', branchId);\n\n    // Set user role (convert to lowercase for consistency)\n    const normalizedRole = role === 'Admin' ? 'admin' : (role?.toLowerCase() || '');\n    setUserRole(normalizedRole);\n\n    // Set branch ID\n    const numericBranchId = branchId ? Number(branchId) : null;\n    setUserBranchId(numericBranchId);\n\n    // Fetch orders with proper filtering\n    fetchOrders(normalizedRole, numericBranchId);\n  }, []);\n\n  const fetchOrders = async (role: string, branchId: number | null) => {\n    try {\n      setLoading(true);\n\n      // Construct URL with query parameters for branch filtering\n      let url = 'http://localhost:3002/orders';\n      const params = new URLSearchParams();\n\n      // Always send the role parameter\n      params.append('role', role || '');\n\n      // For non-admin users, branch filtering is mandatory\n      if (role !== 'admin') {\n        // If branchId is not available, use a fallback to prevent seeing all orders\n        params.append('branch_id', branchId?.toString() || '0');\n      }\n\n      // Add the parameters to the URL\n      url += `?${params.toString()}`;\n\n      console.log('Fetching orders from:', url);\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch orders: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log('Fetched orders:', data.length);\n      setOrders(data);\n    } catch (err) {\n      console.error('Error fetching orders:', err);\n      setError(err instanceof Error ? err.message : 'An unknown error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format date\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString();\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"w-12 h-12 border-4 border-yellow-400 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-4 text-center text-red-500\">\n        <p>Error: {error}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4 lg:px-20 xl:px-40\">\n      <h1 className=\"text-2xl font-bold mb-6\">Orders</h1>\n\n      {orders.length === 0 ? (\n        <div className=\"text-center py-8\">\n          <p className=\"text-gray-500\">No orders found</p>\n        </div>\n      ) : (\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full border-separate border-spacing-3\">\n            <thead>\n              <tr className=\"text-left bg-gray-100\">\n                <th className=\"py-3 px-4 rounded-tl-lg\">Order ID</th>\n                <th className=\"py-3 px-4\">Category</th>\n                {userRole === 'admin' && (\n                  <th className=\"py-3 px-4\">Branch</th>\n                )}\n                <th className=\"py-3 px-4\">Quantity</th>\n                <th className=\"py-3 px-4\">Status</th>\n                <th className=\"py-3 px-4\">Date</th>\n                <th className=\"py-3 px-4 rounded-tr-lg\">Image</th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order.order_id} className=\"text-sm md:text-base hover:bg-gray-50\">\n                  <td className=\"py-4 px-4 border-b border-gray-200\">{order.order_id}</td>\n                  <td className=\"py-4 px-4 border-b border-gray-200\">{order.category}</td>\n                  {userRole === 'admin' && (\n                    <td className=\"py-4 px-4 border-b border-gray-200\">\n                      {order.branch_name ||\n                      (order.branch_id === 1 ? 'Mahiyangana Branch' :\n                       order.branch_id === 2 ? 'Mahaoya Branch' :\n                       'Not assigned')}\n                    </td>\n                  )}\n                  <td className=\"py-4 px-4 border-b border-gray-200\">{order.quantity}</td>\n                  <td className=\"py-4 px-4 border-b border-gray-200\">\n                    <span className={`px-2 py-1 rounded-full text-xs ${order.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                                                                      order.status === 'completed' ? 'bg-green-100 text-green-800' :\n                                                                      'bg-blue-100 text-blue-800'}`}>\n                      {order.status}\n                    </span>\n                  </td>\n                  <td className=\"py-4 px-4 border-b border-gray-200\">{formatDate(order.created_at)}</td>\n                  <td className=\"py-4 px-4 border-b border-gray-200\">\n                    {order.design_image_url ? (\n                      <img\n                        src={order.design_image_url}\n                        alt=\"Design\"\n                        className=\"w-12 h-12 object-cover rounded-full\"\n                      />\n                    ) : (\n                      <span className=\"text-gray-400\">No image</span>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OrdersPage;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}