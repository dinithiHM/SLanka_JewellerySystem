{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/JewelleryWEBApp/front_end/src/components/forms/CashierForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { useState, useEffect } from \"react\";\n\n// Zod schema for form validation\nconst schema = z.object({\n  username: z.string().min(3, { message: \"Username must be at least 3 characters long!\" }).max(50, { message: \"Username must be at most 50 characters long!\" }),\n  email: z.string().email({ message: \"Invalid email address!\" }),\n  password: z.string().min(8, { message: \"Password must be at least 8 characters long!\" }),\n  firstName: z.string().min(1, { message: \"First name is required!\" }),\n  lastName: z.string().min(1, { message: \"Last name is required!\" }),\n  nic: z.string().min(1, { message: \"NIC is required!\" }).max(20, { message: \"NIC must be at most 20 characters long!\" }),\n  phone: z.string().min(1, { message: \"Phone is required!\" }),\n  address: z.string().min(1, { message: \"Address is required!\" }),\n  branchId: z.number().min(1, { message: \"Branch ID is required!\" }),\n});\n\ntype Inputs = z.infer<typeof schema>;\n\nconst CashierForm = ({ type, data }: { type: \"create\" | \"update\"; data?: any }) => {\n  const [username, setUsername] = useState(data?.username || \"\");\n  const [email, setEmail] = useState(data?.email || \"\");\n  const [password, setPassword] = useState(data?.password || \"\");\n  const [firstName, setFirstName] = useState(data?.firstName || \"\");\n  const [lastName, setLastName] = useState(data?.lastName || \"\");\n  const [nic, setNic] = useState(data?.nic || \"\");\n  const [phone, setPhone] = useState(data?.phone || \"\");\n  const [address, setAddress] = useState(data?.address || \"\");\n  const [branchId, setBranchId] = useState(data?.branchId || 1); // Assuming default branch_id 1\n  const [branches, setBranches] = useState<any[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n\n  // Set hardcoded branches for dropdown\n  useEffect(() => {\n    // Hardcoded branches as specified\n    const hardcodedBranches = [\n      { branch_id: 1, branch_name: \"Mahiyangana Branch\" },\n      { branch_id: 2, branch_name: \"Mahaoya Branch\" }\n    ];\n\n    setBranches(hardcodedBranches);\n  }, []);\n\n  const { handleSubmit, register, formState: { errors } } = useForm<Inputs>({\n    resolver: zodResolver(schema),\n  });\n\n  const onSubmit = handleSubmit(async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      setSuccess(null);\n\n      const cashierData = {\n        username,\n        email,\n        password,\n        first_name: firstName,\n        last_name: lastName,\n        nic,\n        phone,\n        address,\n        branch_id: branchId,\n        role: \"cashier\" // Set role to cashier\n      };\n\n      const url = type === \"create\"\n        ? \"http://localhost:3002/cashiers/create\"\n        : `http://localhost:3002/cashiers/update/${data?.id}`;\n\n      const response = await fetch(url, {\n        method: type === \"create\" ? \"POST\" : \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(cashierData),\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        setSuccess(type === \"create\" ? \"Cashier added successfully!\" : \"Cashier updated successfully!\");\n        // Reset form if creating a new cashier\n        if (type === \"create\") {\n          setUsername(\"\");\n          setEmail(\"\");\n          setPassword(\"\");\n          setFirstName(\"\");\n          setLastName(\"\");\n          setNic(\"\");\n          setPhone(\"\");\n          setAddress(\"\");\n          setBranchId(1);\n        }\n        // Reload the page after a short delay to show the new data\n        setTimeout(() => {\n          window.location.reload();\n        }, 1500);\n      } else {\n        setError(`Error: ${result.message || \"Something went wrong\"}`);\n      }\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n      setError(\"Failed to process cashier data. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  });\n\n  return (\n    <form className=\"flex flex-col gap-8\" onSubmit={onSubmit}>\n      <h1 className=\"text-xl font-semibold\">{type === \"create\" ? \"Add a new Cashier\" : \"Update Cashier details\"}</h1>\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\">\n          {error}\n        </div>\n      )}\n\n      {success && (\n        <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative\">\n          {success}\n        </div>\n      )}\n\n      <span className=\"text-xs text-gray-400 font-medium\">Authentication Information</span>\n\n      <div className=\"flex justify-between flex-wrap gap-4\">\n        <div className=\"flex flex-col w-full md:w-1/4\">\n          <label className=\"text-xs text-gray-500\">Username</label>\n          <input\n            className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n            {...register(\"username\")}\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          {errors.username && <p className=\"text-xs text-red-400\">{errors.username.message}</p>}\n        </div>\n\n        <div className=\"flex flex-col w-full md:w-1/4\">\n          <label className=\"text-xs text-gray-500\">Email</label>\n          <input\n            className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n            {...register(\"email\")}\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          {errors.email && <p className=\"text-xs text-red-400\">{errors.email.message}</p>}\n        </div>\n\n        <div className=\"flex flex-col w-full md:w-1/4\">\n          <label className=\"text-xs text-gray-500\">Password</label>\n          <input\n            type=\"password\"\n            className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n            {...register(\"password\")}\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {errors.password && <p className=\"text-xs text-red-400\">{errors.password.message}</p>}\n        </div>\n      </div>\n\n      <span className=\"text-xs text-gray-400 font-medium\">Personal Information</span>\n\n      <div className=\"flex justify-between flex-wrap gap-4\">\n        <div className=\"flex flex-col w-full md:w-1/4\">\n          <label className=\"text-xs text-gray-500\">First Name</label>\n          <input\n            className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n            {...register(\"firstName\")}\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n          {errors.firstName && <p className=\"text-xs text-red-400\">{errors.firstName.message}</p>}\n        </div>\n\n        <div className=\"flex flex-col w-full md:w-1/4\">\n          <label className=\"text-xs text-gray-500\">Last Name</label>\n          <input\n            className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n            {...register(\"lastName\")}\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n          />\n          {errors.lastName && <p className=\"text-xs text-red-400\">{errors.lastName.message}</p>}\n        </div>\n\n        <div className=\"flex flex-col w-full md:w-1/4\">\n          <label className=\"text-xs text-gray-500\">NIC</label>\n          <input\n            className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n            {...register(\"nic\")}\n            value={nic}\n            onChange={(e) => setNic(e.target.value)}\n          />\n          {errors.nic && <p className=\"text-xs text-red-400\">{errors.nic.message}</p>}\n        </div>\n      </div>\n\n      <div className=\"flex justify-between flex-wrap gap-4\">\n        <div className=\"flex flex-col w-full md:w-1/4\">\n          <label className=\"text-xs text-gray-500\">Phone</label>\n          <input\n            className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n            {...register(\"phone\")}\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n          />\n          {errors.phone && <p className=\"text-xs text-red-400\">{errors.phone.message}</p>}\n        </div>\n\n        <div className=\"flex flex-col w-full md:w-1/4\">\n          <label className=\"text-xs text-gray-500\">Address</label>\n          <input\n            className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n            {...register(\"address\")}\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n          />\n          {errors.address && <p className=\"text-xs text-red-400\">{errors.address.message}</p>}\n        </div>\n\n        <div className=\"flex flex-col w-full md:w-1/4\">\n          <label className=\"text-xs text-gray-500\">Branch</label>\n          <select\n            className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n            {...register(\"branchId\", { valueAsNumber: true })}\n            value={branchId}\n            onChange={(e) => setBranchId(Number(e.target.value))}\n          >\n            {branches.map((branch) => (\n              <option key={branch.branch_id} value={branch.branch_id}>\n                {branch.branch_name}\n              </option>\n            ))}\n          </select>\n          {errors.branchId && <p className=\"text-xs text-red-400\">{errors.branchId.message}</p>}\n        </div>\n      </div>\n\n      <div className=\"flex justify-end\">\n        <button\n          type=\"submit\"\n          className=\"bg-[#FFC700] text-black px-4 py-2 rounded-md text-sm font-medium\"\n          disabled={isLoading}\n        >\n          {isLoading ? \"Processing...\" : type === \"create\" ? \"Create Cashier\" : \"Update Cashier\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default CashierForm;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}