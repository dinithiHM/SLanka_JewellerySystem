{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/services/reportService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3002';\n\n// Create axios instance with auth header\nconst axiosInstance = axios.create({\n  baseURL: `${API_URL}/api/reports`,\n});\n\n// Add request interceptor to include auth token\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n/**\n * Get sales report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getSalesReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/sales', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching sales report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get inventory report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getInventoryReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/inventory', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching inventory report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get current stock report data\n * @param {Object} params - Query parameters for the report (branchId for filtering)\n * @returns {Promise} - Promise with report data\n */\nexport const getCurrentStockReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/inventory/current-stock', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching current stock report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get gold stock report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getGoldStockReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/inventory/gold-stock', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching gold stock report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get low stock report data\n * @param {Object} params - Query parameters for the report (branchId for filtering)\n * @returns {Promise} - Promise with report data\n */\nexport const getLowStockReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/inventory/low-stock', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching low stock report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get inventory valuation report data\n * @param {Object} params - Query parameters for the report (branchId for filtering)\n * @returns {Promise} - Promise with report data\n */\nexport const getInventoryValuationReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/inventory/valuation', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching inventory valuation report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get customer report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getCustomerReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/customers', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching customer report:', error);\n    throw error;\n  }\n};\n\n/**\n * Get financial report data\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with report data\n */\nexport const getFinancialReport = async (params = {}) => {\n  try {\n    const response = await axiosInstance.get('/financial', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching financial report:', error);\n    throw error;\n  }\n};\n\n/**\n * Export report as CSV\n * @param {String} reportType - Type of report to export\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with export result\n */\nexport const exportReportCSV = async (reportType, params = {}) => {\n  try {\n    const response = await axiosInstance.get('/export', {\n      params: { reportType, format: 'csv', ...params },\n      responseType: 'blob'\n    });\n\n    // Create a download link and trigger download\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n\n    // Generate filename\n    const date = new Date().toISOString().split('T')[0];\n    link.setAttribute('download', `${reportType}_report_${date}.csv`);\n\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n\n    return { success: true };\n  } catch (error) {\n    console.error('Error exporting report:', error);\n    throw error;\n  }\n};\n\n/**\n * Export report as PDF\n * @param {String} reportType - Type of report to export\n * @param {Object} params - Query parameters for the report\n * @returns {Promise} - Promise with export result\n */\nexport const exportReportPDF = async (reportType, params = {}) => {\n  try {\n    // First get the data in JSON format\n    const response = await axiosInstance.get('/export', {\n      params: { reportType, format: 'json', ...params }\n    });\n\n    // Import jsPDF and autoTable dynamically\n    const { jsPDF } = await import('jspdf');\n    const { default: autoTable } = await import('jspdf-autotable');\n\n    // Create a new PDF document\n    const doc = new jsPDF();\n\n    // Add title\n    let title = 'Report';\n    switch (reportType) {\n      case 'current-stock':\n        title = 'Current Stock Report';\n        break;\n      case 'gold-stock':\n        title = 'Gold Stock Report';\n        break;\n      case 'low-stock':\n        title = 'Low Stock Report';\n        break;\n      case 'valuation':\n        title = 'Inventory Valuation Report';\n        break;\n      case 'sales':\n        title = 'Sales Report';\n        break;\n    }\n\n    // Add report title\n    doc.setFontSize(18);\n    doc.text(title, 14, 22);\n\n    // Add date\n    doc.setFontSize(11);\n    doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 14, 30);\n\n    // Format data for autoTable\n    const tableData = response.data.data.map(item => {\n      return Object.values(item);\n    });\n\n    // Get column headers\n    const headers = Object.keys(response.data.data[0]);\n\n    // Create table\n    autoTable(doc, {\n      head: [headers],\n      body: tableData,\n      startY: 35,\n      styles: { fontSize: 8, cellPadding: 2 },\n      headStyles: { fillColor: [60, 60, 60] }\n    });\n\n    // Save the PDF\n    doc.save(`${response.data.filename}.pdf`);\n\n    return { success: true };\n  } catch (error) {\n    console.error('Error exporting report as PDF:', error);\n    throw error;\n  }\n};\n\n/**\n * Get custom report data\n * @param {Object} config - Custom report configuration\n * @returns {Promise} - Promise with report data\n */\nexport const getCustomReport = async (config) => {\n  try {\n    // This would be implemented to handle custom report requests\n    // For now, we'll just return a mock response\n    return {\n      success: true,\n      message: 'Custom report functionality will be implemented here',\n      config\n    };\n  } catch (error) {\n    console.error('Error generating custom report:', error);\n    throw error;\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/app/DashView/reports/inventory/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Package, Filter, Download, Printer, BarChart, PieChart, AlertTriangle, RefreshCw } from 'lucide-react';\nimport Link from 'next/link';\nimport { getInventoryReport } from '@/services/reportService';\n\ninterface GoldStockItem {\n  purity: string;\n  weight: number;\n  value: number;\n}\n\ninterface CategoryItem {\n  category_name: string;\n  count: number;\n  value: number;\n}\n\ninterface InventoryData {\n  summary: {\n    totalItems: number;\n    totalValue: number;\n  };\n  lowStockItems: {\n    item_id: number;\n    item_name: string;\n    quantity: number;\n    unit_price: number;\n    category_name: string;\n  }[];\n  goldStock: {\n    items: GoldStockItem[];\n    total: number;\n    totalValue: number;\n  };\n  inventoryByCategory: CategoryItem[];\n}\n\nexport default function InventoryReportsPage() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [inventoryData, setInventoryData] = useState<InventoryData | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  // Report types\n  const reportTypes = [\n    {\n      name: 'Current Stock',\n      path: '/DashView/reports/inventory/current-stock',\n      description: 'Complete inventory with quantities and values',\n      icon: <Package className=\"w-5 h-5\" />\n    },\n    {\n      name: 'Gold Inventory',\n      path: '/DashView/reports/inventory/gold-stock',\n      description: 'Gold stock by purity and weight',\n      icon: <BarChart className=\"w-5 h-5\" />\n    },\n    {\n      name: 'Low Stock Items',\n      path: '/DashView/reports/inventory/low-stock',\n      description: 'Products that need to be restocked soon',\n      icon: <AlertTriangle className=\"w-5 h-5\" />\n    },\n    {\n      name: 'Inventory Valuation',\n      path: '/DashView/reports/inventory/valuation',\n      description: 'Total value of current inventory',\n      icon: <PieChart className=\"w-5 h-5\" />\n    },\n  ];\n\n  // Format currency\n  const formatCurrency = (amount: number) => {\n    return `LKR ${amount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\n  };\n\n  // Fetch inventory data\n  const fetchInventoryData = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const data = await getInventoryReport();\n      setInventoryData(data);\n    } catch (err) {\n      console.error('Error fetching inventory data:', err);\n      setError('Failed to load inventory data. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch data on initial load\n  useEffect(() => {\n    fetchInventoryData();\n  }, []);\n\n  const handleRefresh = () => {\n    fetchInventoryData();\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">Inventory Reports</h1>\n\n        <div className=\"mt-3 sm:mt-0 flex items-center space-x-3\">\n          <button\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\"\n            onClick={handleRefresh}\n          >\n            {isLoading ? (\n              <RefreshCw className=\"h-4 w-4 mr-2 animate-spin\" />\n            ) : (\n              <RefreshCw className=\"h-4 w-4 mr-2\" />\n            )}\n            Refresh\n          </button>\n        </div>\n      </div>\n\n      {/* Error Message */}\n      {error && (\n        <div className=\"bg-red-50 border-l-4 border-red-400 p-4\">\n          <div className=\"flex\">\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-red-700\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Report Types */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {reportTypes.map((report) => (\n          <Link\n            key={report.name}\n            href={report.path}\n            className=\"bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow\"\n          >\n            <div className=\"px-4 py-5 sm:p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-shrink-0 bg-green-100 rounded-md p-3\">\n                  {report.icon}\n                </div>\n                <div className=\"ml-5\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">{report.name}</h3>\n                  <p className=\"text-sm text-gray-500\">{report.description}</p>\n                </div>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n\n      {isLoading ? (\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500\"></div>\n        </div>\n      ) : inventoryData ? (\n        <>\n          {/* Inventory Overview */}\n          <div className=\"bg-white shadow rounded-lg\">\n            <div className=\"px-4 py-5 sm:px-6 flex justify-between items-center\">\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Inventory Overview</h3>\n              <div className=\"flex space-x-2\">\n                <button className=\"inline-flex items-center p-1.5 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                  <Download className=\"h-4 w-4\" />\n                </button>\n                <button className=\"inline-flex items-center p-1.5 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                  <Printer className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n            <div className=\"border-t border-gray-200 px-4 py-5 sm:p-6\">\n              <dl className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\n                <div className=\"bg-green-50 px-4 py-5 sm:p-6 rounded-lg\">\n                  <dt className=\"text-sm font-medium text-green-800 truncate\">Total Items</dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-green-900\">\n                    {inventoryData.summary.totalItems}\n                  </dd>\n                  <dd className=\"mt-3 text-sm text-green-700\">\n                    In stock\n                  </dd>\n                </div>\n\n                <div className=\"bg-blue-50 px-4 py-5 sm:p-6 rounded-lg\">\n                  <dt className=\"text-sm font-medium text-blue-800 truncate\">Total Value</dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-blue-900\">\n                    {formatCurrency(inventoryData.summary.totalValue)}\n                  </dd>\n                  <dd className=\"mt-3 text-sm text-blue-700\">\n                    At current prices\n                  </dd>\n                </div>\n\n                <div className=\"bg-yellow-50 px-4 py-5 sm:p-6 rounded-lg\">\n                  <dt className=\"text-sm font-medium text-yellow-800 truncate\">Gold Stock</dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-yellow-900\">\n                    {inventoryData.goldStock.total}g\n                  </dd>\n                  <dd className=\"mt-3 text-sm text-yellow-700\">\n                    Across all purities\n                  </dd>\n                </div>\n\n                <div className=\"bg-red-50 px-4 py-5 sm:p-6 rounded-lg\">\n                  <dt className=\"text-sm font-medium text-red-800 truncate\">Low Stock Items</dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-red-900\">\n                    {inventoryData.lowStockItems.length}\n                  </dd>\n                  <dd className=\"mt-3 text-sm text-red-700\">\n                    Need attention\n                  </dd>\n                </div>\n              </dl>\n            </div>\n          </div>\n\n          {/* Gold Stock Table */}\n          <div className=\"bg-white shadow rounded-lg\">\n            <div className=\"px-4 py-5 sm:px-6 flex justify-between items-center\">\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Gold Stock by Purity</h3>\n              <button className=\"inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                <Filter className=\"h-3 w-3 mr-1\" />\n                Filter\n              </button>\n            </div>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Gold Purity\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Weight (g)\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Value\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      % of Total\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {inventoryData.goldStock.items.length === 0 ? (\n                    <tr>\n                      <td colSpan={4} className=\"px-6 py-4 text-center text-sm text-gray-500\">\n                        No gold stock data available\n                      </td>\n                    </tr>\n                  ) : (\n                    inventoryData.goldStock.items.map((item) => (\n                      <tr key={item.purity} className=\"hover:bg-gray-50\">\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                          {item.purity}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {item.weight}g\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {formatCurrency(item.value)}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {((item.weight / inventoryData.goldStock.total) * 100).toFixed(1)}%\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* Top Categories */}\n          <div className=\"bg-white shadow rounded-lg\">\n            <div className=\"px-4 py-5 sm:px-6\">\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Inventory by Category</h3>\n            </div>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Category\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Items\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Value\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      % of Total Value\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {inventoryData.inventoryByCategory.length === 0 ? (\n                    <tr>\n                      <td colSpan={4} className=\"px-6 py-4 text-center text-sm text-gray-500\">\n                        No category data available\n                      </td>\n                    </tr>\n                  ) : (\n                    inventoryData.inventoryByCategory.map((category) => (\n                      <tr key={category.category_name} className=\"hover:bg-gray-50\">\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                          {category.category_name}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {category.count}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {formatCurrency(category.value)}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {((category.value / inventoryData.summary.totalValue) * 100).toFixed(1)}%\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4\">\n          <div className=\"flex\">\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-yellow-700\">No inventory data available. Please try refreshing.</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}