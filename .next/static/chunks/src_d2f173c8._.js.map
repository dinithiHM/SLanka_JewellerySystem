{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/utils/formatters.ts"],"sourcesContent":["/**\n * Format a number as currency\n * @param value The number to format\n * @param locale The locale to use for formatting (default: 'en-US')\n * @param currency The currency code (default: 'LKR')\n * @returns Formatted currency string\n */\nexport const formatCurrency = (\n  value: number | string,\n  locale: string = 'en-US',\n  currency: string = 'LKR'\n): string => {\n  // Convert to number if it's a string\n  const numericValue = typeof value === 'string' ? parseFloat(value) : value;\n\n  // Handle NaN values\n  if (isNaN(numericValue)) {\n    console.warn('Invalid value for currency formatting:', value);\n    return 'Rs. 0.00';\n  }\n\n  // Use the Sri Lankan Rupee symbol (Rs) instead of LKR text\n  return 'Rs. ' + new Intl.NumberFormat(locale, {\n    style: 'decimal',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(numericValue);\n};\n\n/**\n * Format a date string\n * @param dateString The date string to format\n * @param locale The locale to use for formatting (default: 'en-US')\n * @returns Formatted date string\n */\nexport const formatDate = (\n  dateString: string,\n  locale: string = 'en-US'\n): string => {\n  const date = new Date(dateString);\n  return new Intl.DateTimeFormat(locale, {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  }).format(date);\n};\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;AACM,MAAM,iBAAiB,CAC5B,OACA,SAAiB,OAAO,EACxB,WAAmB,KAAK;IAExB,qCAAqC;IACrC,MAAM,eAAe,OAAO,UAAU,WAAW,WAAW,SAAS;IAErE,oBAAoB;IACpB,IAAI,MAAM,eAAe;QACvB,QAAQ,IAAI,CAAC,0CAA0C;QACvD,OAAO;IACT;IAEA,2DAA2D;IAC3D,OAAO,SAAS,IAAI,KAAK,YAAY,CAAC,QAAQ;QAC5C,OAAO;QACP,uBAAuB;QACvB,uBAAuB;IACzB,GAAG,MAAM,CAAC;AACZ;AAQO,MAAM,aAAa,CACxB,YACA,SAAiB,OAAO;IAExB,MAAM,OAAO,IAAI,KAAK;IACtB,OAAO,IAAI,KAAK,cAAc,CAAC,QAAQ;QACrC,MAAM;QACN,OAAO;QACP,KAAK;QACL,MAAM;QACN,QAAQ;QACR,QAAQ;IACV,GAAG,MAAM,CAAC;AACZ","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/utils/csvExport.js"],"sourcesContent":["\"use client\";\n\nimport { saveAs } from 'file-saver';\n\n// Helper function to format dates\nconst formatDate = (dateString) => {\n  if (!dateString) return '';\n  try {\n    const date = new Date(dateString);\n    return date.toLocaleDateString();\n  } catch (e) {\n    return dateString;\n  }\n};\n\n/**\n * Export jewellery items to CSV\n * @param {Array} items - Array of jewellery items\n * @param {string} userRole - User role\n */\nexport const exportJewelleryItemsToCSV = (items, userRole) => {\n  try {\n    // Create CSV header\n    const header = [\n      'ID', 'Product Title', 'Category', \n      userRole === 'admin' ? 'Branch' : '', \n      'In Stock', 'Buying Price', 'Selling Price', 'Date Added'\n    ].filter(Boolean).join(',');\n    \n    // Create CSV rows\n    const rows = items.map(item => {\n      const row = [\n        item.item_id,\n        `\"${item.product_title}\"`, // Wrap in quotes to handle commas\n        `\"${item.category_name || item.category}\"`,\n        userRole === 'admin' ? `\"${item.branch_name || `Branch ${item.branch_id}`}\"` : '',\n        item.in_stock,\n        item.buying_price,\n        item.selling_price,\n        `\"${formatDate(item.product_added)}\"`\n      ];\n      \n      // Remove branch column if not admin\n      if (userRole !== 'admin') {\n        row.splice(3, 1);\n      }\n      \n      return row.join(',');\n    }).join('\\n');\n    \n    // Combine header and rows\n    const csv = `${header}\\n${rows}`;\n    \n    // Create blob and download\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8' });\n    saveAs(blob, 'jewellery-stock-report.csv');\n    \n    return true;\n  } catch (error) {\n    console.error('Error generating CSV:', error);\n    return false;\n  }\n};\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAIA,kCAAkC;AAClC,MAAM,aAAa,CAAC;IAClB,IAAI,CAAC,YAAY,OAAO;IACxB,IAAI;QACF,MAAM,OAAO,IAAI,KAAK;QACtB,OAAO,KAAK,kBAAkB;IAChC,EAAE,OAAO,GAAG;QACV,OAAO;IACT;AACF;AAOO,MAAM,4BAA4B,CAAC,OAAO;IAC/C,IAAI;QACF,oBAAoB;QACpB,MAAM,SAAS;YACb;YAAM;YAAiB;YACvB,aAAa,UAAU,WAAW;YAClC;YAAY;YAAgB;YAAiB;SAC9C,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC;QAEvB,kBAAkB;QAClB,MAAM,OAAO,MAAM,GAAG,CAAC,CAAA;YACrB,MAAM,MAAM;gBACV,KAAK,OAAO;gBACZ,CAAC,CAAC,EAAE,KAAK,aAAa,CAAC,CAAC,CAAC;gBACzB,CAAC,CAAC,EAAE,KAAK,aAAa,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC1C,aAAa,UAAU,CAAC,CAAC,EAAE,KAAK,WAAW,IAAI,CAAC,OAAO,EAAE,KAAK,SAAS,EAAE,CAAC,CAAC,CAAC,GAAG;gBAC/E,KAAK,QAAQ;gBACb,KAAK,YAAY;gBACjB,KAAK,aAAa;gBAClB,CAAC,CAAC,EAAE,WAAW,KAAK,aAAa,EAAE,CAAC,CAAC;aACtC;YAED,oCAAoC;YACpC,IAAI,aAAa,SAAS;gBACxB,IAAI,MAAM,CAAC,GAAG;YAChB;YAEA,OAAO,IAAI,IAAI,CAAC;QAClB,GAAG,IAAI,CAAC;QAER,0BAA0B;QAC1B,MAAM,MAAM,GAAG,OAAO,EAAE,EAAE,MAAM;QAEhC,2BAA2B;QAC3B,MAAM,OAAO,IAAI,KAAK;YAAC;SAAI,EAAE;YAAE,MAAM;QAAyB;QAC9D,CAAA,GAAA,4JAAA,CAAA,SAAM,AAAD,EAAE,MAAM;QAEb,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file://D%3A/JewelleryWEBApp/front_end/src/app/DashView/jewellery-stock/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Pencil, Trash2, Search, Filter, Plus, Download, RefreshCw, Calendar, Eye } from 'lucide-react';\r\nimport { formatCurrency } from '@/utils/formatters';\r\nimport { exportJewelleryItemsToCSV } from '@/utils/csvExport';\r\n\r\n\r\n\r\ninterface JewelleryItem {\r\n  item_id: number;\r\n  product_title: string;\r\n  category: string;\r\n  category_name?: string; // From the categories table\r\n  in_stock: number;\r\n  buying_price: number;\r\n  selling_price: number;\r\n  product_added: string;\r\n  branch_id?: number;\r\n  branch_name?: string;\r\n  gold_carat?: number;\r\n  weight?: number;\r\n  assay_certificate?: string;\r\n  is_solid_gold?: number; // 1 for true, 0 for false\r\n}\r\n\r\ninterface Category {\r\n  category_id: number;\r\n  category_name: string;\r\n  description?: string;\r\n}\r\n\r\ninterface Branch {\r\n  branch_id: number;\r\n  branch_name: string;\r\n}\r\n\r\nconst JewelleryStockPage = () => {\r\n  const [jewelleryItems, setJewelleryItems] = useState<JewelleryItem[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const [categoryFilter, setCategoryFilter] = useState<string>('All Categories');\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [userBranchId, setUserBranchId] = useState<number | null>(null);\r\n  const [userRole, setUserRole] = useState<string>('');\r\n\r\n  // Advanced filtering\r\n  const [branches, setBranches] = useState<Branch[]>([]);\r\n  const [branchFilter, setBranchFilter] = useState<string>('All Branches');\r\n  const [startDate, setStartDate] = useState<string>('');\r\n  const [endDate, setEndDate] = useState<string>('');\r\n  const [showFilters, setShowFilters] = useState<boolean>(false);\r\n\r\n  // For the add/edit form\r\n  const [showForm, setShowForm] = useState<boolean>(false);\r\n  const [formMode, setFormMode] = useState<'add' | 'edit'>('add');\r\n  const [currentItem, setCurrentItem] = useState<JewelleryItem | null>(null);\r\n\r\n  // For the details modal\r\n  const [showDetails, setShowDetails] = useState<boolean>(false);\r\n  const [detailsItem, setDetailsItem] = useState<JewelleryItem | null>(null);\r\n\r\n  // For the report view\r\n  const [showReport, setShowReport] = useState<boolean>(false);\r\n\r\n  // Form fields\r\n  const [productTitle, setProductTitle] = useState<string>('');\r\n  const [category, setCategory] = useState<string>('');\r\n  const [inStock, setInStock] = useState<number>(0);\r\n  const [buyingPrice, setBuyingPrice] = useState<number>(0);\r\n  const [sellingPrice, setSellingPrice] = useState<number>(0);\r\n  const [goldCarat, setGoldCarat] = useState<number | null>(null);\r\n  const [weight, setWeight] = useState<number | null>(null);\r\n  const [assayCertificate, setAssayCertificate] = useState<string>('');\r\n  const [isSolidGold, setIsSolidGold] = useState<boolean>(true);\r\n\r\n  // Get user info from localStorage and fetch items immediately\r\n  useEffect(() => {\r\n    // Get individual items from localStorage\r\n    const role = localStorage.getItem('role');\r\n    const branchId = localStorage.getItem('branchId');\r\n\r\n    console.log('Retrieved from localStorage - Role:', role, 'Branch ID:', branchId);\r\n\r\n    // Set user role (convert to lowercase for consistency)\r\n    const normalizedRole = role === 'Admin' ? 'admin' : (role?.toLowerCase() || '');\r\n    setUserRole(normalizedRole);\r\n\r\n    // Set branch ID\r\n    const numericBranchId = branchId ? Number(branchId) : null;\r\n    setUserBranchId(numericBranchId);\r\n\r\n    // Immediately fetch items with proper filtering\r\n    const fetchJewelleryItems = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Construct URL with query parameters for branch filtering\r\n        let url = 'http://localhost:3002/jewellery-items';\r\n        const params = new URLSearchParams();\r\n\r\n        if (numericBranchId && normalizedRole !== 'admin') {\r\n          params.append('branch_id', numericBranchId.toString());\r\n          params.append('role', normalizedRole);\r\n        }\r\n\r\n        if (params.toString()) {\r\n          url += `?${params.toString()}`;\r\n        }\r\n\r\n        console.log('Initial fetch of jewellery items from:', url);\r\n        const response = await fetch(url);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch jewellery items: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Fetched jewellery items:', data.length);\r\n        setJewelleryItems(data);\r\n      } catch (err) {\r\n        console.error('Error fetching jewellery items:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJewelleryItems();\r\n  }, []);\r\n\r\n  // Fetch categories\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3002/categories');\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch categories: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        // Add 'all' category at the beginning\r\n        setCategories([{ category_id: 0, category_name: 'All Categories' }, ...data]);\r\n      } catch (err) {\r\n        console.error('Error fetching categories:', err);\r\n\r\n        // Fallback categories\r\n        setCategories([\r\n          { category_id: 0, category_name: 'All Categories' },\r\n          { category_id: 1, category_name: 'Rings' },\r\n          { category_id: 2, category_name: 'Necklaces' },\r\n          { category_id: 3, category_name: 'Earrings' },\r\n          { category_id: 4, category_name: 'Bracelets' }\r\n        ]);\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  // Fetch jewellery items when userRole or userBranchId changes after initial load\r\n  const [initialLoadComplete, setInitialLoadComplete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Skip the first render since we already fetched in the first useEffect\r\n    if (!initialLoadComplete) {\r\n      setInitialLoadComplete(true);\r\n      return;\r\n    }\r\n\r\n    const fetchJewelleryItems = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Construct URL with query parameters for branch filtering\r\n        let url = 'http://localhost:3002/jewellery-items';\r\n        const params = new URLSearchParams();\r\n\r\n        if (userBranchId && userRole !== 'admin') {\r\n          params.append('branch_id', userBranchId.toString());\r\n          params.append('role', userRole);\r\n        }\r\n\r\n        if (params.toString()) {\r\n          url += `?${params.toString()}`;\r\n        }\r\n\r\n        console.log('Fetching jewellery items after update from:', url);\r\n        const response = await fetch(url);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch jewellery items: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Fetched jewellery items:', data.length);\r\n        setJewelleryItems(data);\r\n      } catch (err) {\r\n        console.error('Error fetching jewellery items:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJewelleryItems();\r\n  }, [userBranchId, userRole, initialLoadComplete]);\r\n\r\n  // Filter jewellery items based on search term, category, branch, and date range\r\n  const filteredItems = jewelleryItems.filter(item => {\r\n    // Apply category filter - only filter if not \"All Categories\"\r\n    if (categoryFilter !== 'All Categories' && categoryFilter !== '0' &&\r\n        item.category_name !== categoryFilter && item.category !== categoryFilter) {\r\n      return false;\r\n    }\r\n\r\n    // Apply branch filter (admin only)\r\n    if (userRole === 'admin' && branchFilter !== 'All Branches' &&\r\n        item.branch_name !== branchFilter &&\r\n        (item.branch_id !== 1 || branchFilter !== 'Mahiyangana Branch') &&\r\n        (item.branch_id !== 2 || branchFilter !== 'Mahaoya Branch')) {\r\n      return false;\r\n    }\r\n\r\n    // Apply date range filter\r\n    if (startDate && item.product_added) {\r\n      const itemDate = new Date(item.product_added);\r\n      const filterStartDate = new Date(startDate);\r\n      if (itemDate < filterStartDate) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (endDate && item.product_added) {\r\n      const itemDate = new Date(item.product_added);\r\n      const filterEndDate = new Date(endDate);\r\n      // Set end date to end of day\r\n      filterEndDate.setHours(23, 59, 59, 999);\r\n      if (itemDate > filterEndDate) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Apply search term\r\n    const searchLower = searchTerm.toLowerCase();\r\n    return (\r\n      item.product_title.toLowerCase().includes(searchLower) ||\r\n      (item.category_name || item.category).toLowerCase().includes(searchLower) ||\r\n      (item.branch_name || '').toLowerCase().includes(searchLower)\r\n    );\r\n  });\r\n\r\n  // Format date\r\n  const formatDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return new Intl.DateTimeFormat('en-US', {\r\n      year: 'numeric',\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      hour12: true\r\n    }).format(date);\r\n  };\r\n\r\n  // Handle edit item\r\n  const handleEditItem = (item: JewelleryItem) => {\r\n    setCurrentItem(item);\r\n    setProductTitle(item.product_title);\r\n    setCategory(item.category_name || item.category);\r\n    setInStock(item.in_stock);\r\n    setBuyingPrice(item.buying_price);\r\n    setSellingPrice(item.selling_price);\r\n    if (item.branch_id) {\r\n      setUserBranchId(item.branch_id);\r\n    }\r\n    // Set gold details if available\r\n    setGoldCarat(item.gold_carat !== undefined ? item.gold_carat : null);\r\n    setWeight(item.weight !== undefined ? item.weight : null);\r\n    setAssayCertificate(item.assay_certificate || '');\r\n    setIsSolidGold(item.is_solid_gold === 1);\r\n    setFormMode('edit');\r\n    setShowForm(true);\r\n  };\r\n\r\n  // Handle delete item\r\n  const handleDeleteItem = async (itemId: number) => {\r\n    if (!window.confirm('Are you sure you want to delete this item?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:3002/jewellery-items/delete/${itemId}`, {\r\n        method: 'DELETE'\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to delete item');\r\n      }\r\n\r\n      // Refresh the list with branch filtering\r\n      let fetchUrl = 'http://localhost:3002/jewellery-items';\r\n      const params = new URLSearchParams();\r\n\r\n      if (userBranchId && userRole !== 'admin') {\r\n        params.append('branch_id', userBranchId.toString());\r\n        params.append('role', userRole);\r\n      }\r\n\r\n      if (params.toString()) {\r\n        fetchUrl += `?${params.toString()}`;\r\n      }\r\n\r\n      console.log('Refreshing jewellery items after delete from:', fetchUrl);\r\n      const refreshResponse = await fetch(fetchUrl);\r\n      if (refreshResponse.ok) {\r\n        const data = await refreshResponse.json();\r\n        setJewelleryItems(data);\r\n      } else {\r\n        // Fallback to client-side filtering if refresh fails\r\n        setJewelleryItems(jewelleryItems.filter(item => item.item_id !== itemId));\r\n      }\r\n\r\n      alert('Item deleted successfully');\r\n    } catch (err) {\r\n      console.error('Error deleting item:', err);\r\n      alert('Failed to delete item');\r\n    }\r\n  };\r\n\r\n  // Handle add new item\r\n  const handleAddNewItem = () => {\r\n    setCurrentItem(null);\r\n    setProductTitle('');\r\n    setCategory('');\r\n    setInStock(0);\r\n    setBuyingPrice(0);\r\n    setSellingPrice(0);\r\n    // Reset gold details\r\n    setGoldCarat(null);\r\n    setWeight(null);\r\n    setAssayCertificate('');\r\n    setIsSolidGold(true);\r\n    // Keep the current branch ID for non-admin users\r\n    if (userRole !== 'admin' && userBranchId) {\r\n      // Branch ID is already set from localStorage\r\n    } else if (userRole === 'admin') {\r\n      // Admin needs to select a branch\r\n      setUserBranchId(null);\r\n    }\r\n    setFormMode('add');\r\n    setShowForm(true);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmitForm = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // Validate form\r\n    if (!productTitle || !category || inStock < 0 || buyingPrice <= 0 || sellingPrice <= 0 || !userBranchId) {\r\n      alert('Please fill all fields with valid values');\r\n      return;\r\n    }\r\n\r\n    const itemData = {\r\n      product_title: productTitle,\r\n      category,\r\n      in_stock: inStock,\r\n      buying_price: buyingPrice,\r\n      selling_price: sellingPrice,\r\n      branch_id: userBranchId, // Include branch_id from user info\r\n      gold_carat: goldCarat,\r\n      weight: weight,\r\n      assay_certificate: assayCertificate,\r\n      is_solid_gold: isSolidGold ? 1 : 0\r\n    };\r\n\r\n    console.log('Submitting jewellery item data:', itemData);\r\n\r\n    try {\r\n      let response;\r\n\r\n      if (formMode === 'add') {\r\n        // Create new item\r\n        response = await fetch('http://localhost:3002/jewellery-items/create', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(itemData)\r\n        });\r\n      } else {\r\n        // Update existing item\r\n        response = await fetch(`http://localhost:3002/jewellery-items/update/${currentItem?.item_id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(itemData)\r\n        });\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to ${formMode} item`);\r\n      }\r\n\r\n      // Refresh the list with branch filtering\r\n      let fetchUrl = 'http://localhost:3002/jewellery-items';\r\n      const params = new URLSearchParams();\r\n\r\n      if (userBranchId && userRole !== 'admin') {\r\n        params.append('branch_id', userBranchId.toString());\r\n        params.append('role', userRole);\r\n      }\r\n\r\n      if (params.toString()) {\r\n        fetchUrl += `?${params.toString()}`;\r\n      }\r\n\r\n      console.log('Refreshing jewellery items from:', fetchUrl);\r\n      const refreshResponse = await fetch(fetchUrl);\r\n      if (refreshResponse.ok) {\r\n        const data = await refreshResponse.json();\r\n        setJewelleryItems(data);\r\n      }\r\n\r\n      alert(`Item ${formMode === 'add' ? 'added' : 'updated'} successfully`);\r\n      setShowForm(false);\r\n    } catch (err) {\r\n      console.error(`Error ${formMode === 'add' ? 'adding' : 'updating'} item:`, err);\r\n      alert(`Failed to ${formMode} item`);\r\n    }\r\n  };\r\n\r\n  // Cancel form\r\n  const handleCancelForm = () => {\r\n    setShowForm(false);\r\n  };\r\n\r\n  // View item details\r\n  const handleViewDetails = (item: JewelleryItem) => {\r\n    setDetailsItem(item);\r\n    setShowDetails(true);\r\n  };\r\n\r\n  // Close details modal\r\n  const handleCloseDetails = () => {\r\n    setShowDetails(false);\r\n    setDetailsItem(null);\r\n  };\r\n\r\n  // Fetch branches\r\n  useEffect(() => {\r\n    const fetchBranches = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3002/branches');\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch branches: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        // Add 'all' branch at the beginning\r\n        setBranches([{ branch_id: 0, branch_name: 'All Branches' }, ...data]);\r\n      } catch (err) {\r\n        console.error('Error fetching branches:', err);\r\n        // Fallback branches\r\n        setBranches([\r\n          { branch_id: 0, branch_name: 'All Branches' },\r\n          { branch_id: 1, branch_name: 'Mahiyangana Branch' },\r\n          { branch_id: 2, branch_name: 'Mahaoya Branch' }\r\n        ]);\r\n      }\r\n    };\r\n\r\n    if (userRole === 'admin') {\r\n      fetchBranches();\r\n    }\r\n  }, [userRole]);\r\n\r\n  // Toggle filters\r\n  const toggleFilters = () => {\r\n    setShowFilters(!showFilters);\r\n  };\r\n\r\n  // Reset filters\r\n  const resetFilters = () => {\r\n    setBranchFilter('All Branches');\r\n    setCategoryFilter('All Categories');\r\n    setStartDate('');\r\n    setEndDate('');\r\n    setSearchTerm('');\r\n  };\r\n\r\n\r\n\r\n  // Export to CSV\r\n  const exportToCSV = () => {\r\n    try {\r\n      // Call the utility function\r\n      const success = exportJewelleryItemsToCSV(filteredItems, userRole);\r\n\r\n      if (!success) {\r\n        alert('Failed to generate CSV. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error exporting to CSV:', err);\r\n      alert('An error occurred while generating the CSV.');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"w-12 h-12 border-4 border-yellow-400 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-7xl mx-auto\">\r\n\r\n      {/* Jewellery Items Table */}\r\n      <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h2 className=\"text-2xl font-bold\">Jewellery Item</h2>\r\n          <div className=\"flex gap-2\">\r\n            {userRole === 'admin' && (\r\n              <>\r\n                <button\r\n                  className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md font-medium flex items-center\"\r\n                  onClick={() => setShowReport(true)}\r\n                >\r\n                  <Eye size={18} className=\"mr-1\" />\r\n                  Generate Report\r\n                </button>\r\n                <button\r\n                  className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-md font-medium flex items-center\"\r\n                  onClick={exportToCSV}\r\n                >\r\n                  <Download size={18} className=\"mr-1\" />\r\n                  CSV\r\n                </button>\r\n              </>\r\n            )}\r\n            <button\r\n              className=\"bg-yellow-400 hover:bg-yellow-500 text-black px-4 py-2 rounded-md font-medium flex items-center\"\r\n              onClick={handleAddNewItem}\r\n            >\r\n              <Plus size={18} className=\"mr-1\" />\r\n              Add new Item\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Search and Basic Filter */}\r\n        <div className=\"flex flex-col md:flex-row justify-between mb-6 gap-4\">\r\n          <div className=\"relative\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search items...\"\r\n              className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-md w-full md:w-64\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            <Search className=\"absolute left-3 top-2.5 text-gray-400\" size={18} />\r\n          </div>\r\n\r\n          <div className=\"flex gap-2\">\r\n            <select\r\n              className=\"px-4 py-2 border border-gray-300 rounded-md\"\r\n              value={categoryFilter}\r\n              onChange={(e) => setCategoryFilter(e.target.value)}\r\n            >\r\n              {categories.map((cat) => (\r\n                <option key={cat.category_id} value={cat.category_id === 0 ? 'All Categories' : cat.category_name}>\r\n                  {cat.category_name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <button\r\n              className=\"p-2 border border-gray-300 rounded-md\"\r\n              onClick={toggleFilters}\r\n              title=\"Advanced Filters\"\r\n            >\r\n              <Filter size={20} className=\"text-gray-500\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Advanced Filters */}\r\n        {showFilters && userRole === 'admin' && (\r\n          <div className=\"bg-gray-50 p-4 rounded-md mb-6 border border-gray-200\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"font-medium\">Advanced Filters</h3>\r\n              <button\r\n                className=\"text-sm text-blue-500 hover:text-blue-700\"\r\n                onClick={resetFilters}\r\n              >\r\n                Reset\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Branch</label>\r\n                <select\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                  value={branchFilter}\r\n                  onChange={(e) => setBranchFilter(e.target.value)}\r\n                >\r\n                  {branches.map((branch) => (\r\n                    <option key={branch.branch_id} value={branch.branch_id === 0 ? 'All Branches' : branch.branch_name}>\r\n                      {branch.branch_name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Start Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                  value={startDate}\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">End Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                  value={endDate}\r\n                  onChange={(e) => setEndDate(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-end\">\r\n                <button\r\n                  className=\"w-full bg-yellow-400 hover:bg-yellow-500 text-black p-2 rounded-md font-medium flex items-center justify-center\"\r\n                  onClick={() => {\r\n                    // Apply filters logic here\r\n                    // This would typically involve fetching data with the filters\r\n                    console.log('Applying filters:', { branchFilter, categoryFilter, startDate, endDate });\r\n                  }}\r\n                >\r\n                  <RefreshCw size={18} className=\"mr-1\" />\r\n                  Apply Filters\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Items Table */}\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Product Title\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Category\r\n                </th>\r\n                {userRole === 'admin' && (\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Branch\r\n                  </th>\r\n                )}\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  In-Stock\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Selling Price\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Gold Carat\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Weight\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {filteredItems.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan={userRole === 'admin' ? 8 : 7} className=\"px-6 py-4 text-center text-gray-500\">\r\n                    No jewellery items found\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                filteredItems.map((item) => (\r\n                  <tr key={item.item_id} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {item.product_title}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {item.category_name || item.category}\r\n                    </td>\r\n                    {userRole === 'admin' && (\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        {item.branch_name ||\r\n                         (item.branch_id === 1 ? 'Mahiyangana Branch' :\r\n                          item.branch_id === 2 ? 'Mahaoya Branch' :\r\n                          `Branch ${item.branch_id || 'Unknown'}`)}\r\n                      </td>\r\n                    )}\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {item.in_stock}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {formatCurrency(item.selling_price)}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {item.gold_carat || '-'}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {item.weight ? `${item.weight} g` : '-'}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                      <div className=\"flex space-x-2\">\r\n                        <button\r\n                          className=\"text-blue-600 hover:text-blue-900\"\r\n                          title=\"View Details\"\r\n                          onClick={() => handleViewDetails(item)}\r\n                        >\r\n                          <Eye size={18} />\r\n                        </button>\r\n                        <button\r\n                          className=\"text-yellow-600 hover:text-yellow-900\"\r\n                          title=\"Edit Item\"\r\n                          onClick={() => handleEditItem(item)}\r\n                        >\r\n                          <Pencil size={18} />\r\n                        </button>\r\n                        <button\r\n                          className=\"text-red-600 hover:text-red-900\"\r\n                          title=\"Delete Item\"\r\n                          onClick={() => handleDeleteItem(item.item_id)}\r\n                        >\r\n                          <Trash2 size={18} />\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Add/Edit Form Modal */}\r\n      {showForm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl\">\r\n\r\n            <h2 className=\"text-xl font-bold mb-4 text-center\">\r\n              {formMode === 'add' ? 'Add New Jewellery Item' : 'Edit Jewellery Item'}\r\n            </h2>\r\n\r\n            <form onSubmit={handleSubmitForm}>\r\n              <div className=\"grid grid-cols-2 gap-x-6 gap-y-3\">\r\n                {/* Product Title */}\r\n                <div className=\"mb-3 col-span-2\">\r\n                  <label className=\"block text-sm font-medium mb-1\">Product Title</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                    value={productTitle}\r\n                    onChange={(e) => setProductTitle(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                {/* Category */}\r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm font-medium mb-1\">Category</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                    required\r\n                    list=\"categories\"\r\n                  />\r\n                  <datalist id=\"categories\">\r\n                    {categories\r\n                      .filter(cat => cat.category_id !== 0) // Skip 'All Categories'\r\n                      .map(cat => (\r\n                        <option key={cat.category_id} value={cat.category_name} />\r\n                      ))\r\n                    }\r\n                  </datalist>\r\n                </div>\r\n\r\n                {/* In Stock */}\r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm font-medium mb-1\">In Stock</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                    value={inStock}\r\n                    onChange={(e) => setInStock(Number(e.target.value))}\r\n                    min=\"0\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                {/* Buying Price */}\r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm font-medium mb-1\">Buying Price</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                    value={buyingPrice}\r\n                    onChange={(e) => setBuyingPrice(Number(e.target.value))}\r\n                    min=\"0\"\r\n                    step=\"0.01\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                {/* Selling Price */}\r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm font-medium mb-1\">Selling Price</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                    value={sellingPrice}\r\n                    onChange={(e) => setSellingPrice(Number(e.target.value))}\r\n                    min=\"0\"\r\n                    step=\"0.01\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                {/* Branch */}\r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm font-medium mb-1\">Branch</label>\r\n                  <select\r\n                    className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                    value={userBranchId || ''}\r\n                    onChange={(e) => setUserBranchId(Number(e.target.value) || null)}\r\n                    required\r\n                    disabled={userRole !== 'admin'}\r\n                  >\r\n                    <option value=\"\">Select Branch</option>\r\n                    <option value=\"1\">Mahiyangana Branch</option>\r\n                    <option value=\"2\">Mahaoya Branch</option>\r\n                  </select>\r\n                </div>\r\n\r\n                {/* Gold Carat */}\r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm font-medium mb-1\">Gold Carat</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                    value={goldCarat || ''}\r\n                    onChange={(e) => setGoldCarat(e.target.value ? Number(e.target.value) : null)}\r\n                    min=\"0\"\r\n                    step=\"0.1\"\r\n                    placeholder=\"e.g. 22.5\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Weight */}\r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm font-medium mb-1\">Weight (grams)</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                    value={weight || ''}\r\n                    onChange={(e) => setWeight(e.target.value ? Number(e.target.value) : null)}\r\n                    min=\"0\"\r\n                    step=\"0.001\"\r\n                    placeholder=\"e.g. 10.5\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Assay Certificate */}\r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm font-medium mb-1\">Assay Certificate</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                    value={assayCertificate}\r\n                    onChange={(e) => setAssayCertificate(e.target.value)}\r\n                    placeholder=\"Certificate number\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Is Solid Gold */}\r\n                <div className=\"mb-3 flex items-center\">\r\n                  <label className=\"flex items-center\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"mr-2 h-4 w-4\"\r\n                      checked={isSolidGold}\r\n                      onChange={(e) => setIsSolidGold(e.target.checked)}\r\n                    />\r\n                    <span className=\"text-sm font-medium\">Is Solid Gold</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Form Buttons */}\r\n              <div className=\"flex justify-end space-x-4 mt-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md\"\r\n                  onClick={handleCancelForm}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 bg-yellow-400 hover:bg-yellow-500 text-black rounded-md\"\r\n                >\r\n                  {formMode === 'add' ? 'Add Item' : 'Update Item'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* Item Details Modal */}\r\n      {showDetails && detailsItem && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl\">\r\n            <h2 className=\"text-xl font-bold mb-4 text-center\">\r\n              Jewellery Item Details\r\n            </h2>\r\n\r\n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500\">Product Title</p>\r\n                <p className=\"text-base\">{detailsItem.product_title}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500\">Category</p>\r\n                <p className=\"text-base\">{detailsItem.category_name || detailsItem.category}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500\">Branch</p>\r\n                <p className=\"text-base\">\r\n                  {detailsItem.branch_name ||\r\n                   (detailsItem.branch_id === 1 ? 'Mahiyangana Branch' :\r\n                    detailsItem.branch_id === 2 ? 'Mahaoya Branch' :\r\n                    `Branch ${detailsItem.branch_id || 'Unknown'}`)}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500\">In Stock</p>\r\n                <p className=\"text-base\">{detailsItem.in_stock}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500\">Buying Price</p>\r\n                <p className=\"text-base\">{formatCurrency(detailsItem.buying_price)}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500\">Selling Price</p>\r\n                <p className=\"text-base\">{formatCurrency(detailsItem.selling_price)}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500\">Gold Carat</p>\r\n                <p className=\"text-base\">{detailsItem.gold_carat || '-'}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500\">Weight</p>\r\n                <p className=\"text-base\">{detailsItem.weight ? `${detailsItem.weight} g` : '-'}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500\">Assay Certificate</p>\r\n                <p className=\"text-base\">{detailsItem.assay_certificate || '-'}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500\">Solid Gold</p>\r\n                <p className=\"text-base\">{detailsItem.is_solid_gold ? 'Yes' : 'No'}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500\">Product Added</p>\r\n                <p className=\"text-base\">{formatDate(detailsItem.product_added)}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md\"\r\n                onClick={handleCloseDetails}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Report View Modal */}\r\n      {showReport && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-5xl max-h-[90vh] overflow-y-auto\">\r\n            <div id=\"jewellery-report-view\">\r\n              <h2 className=\"text-2xl font-bold mb-4 text-center\">Jewellery Stock Report</h2>\r\n\r\n              <div className=\"mb-4 flex justify-between items-center\">\r\n                <div>\r\n                  <p className=\"text-sm\"><span className=\"font-medium\">Generated on:</span> {new Date().toLocaleDateString()}</p>\r\n                  {branchFilter !== 'All Branches' && (\r\n                    <p className=\"text-sm\"><span className=\"font-medium\">Branch:</span> {branchFilter}</p>\r\n                  )}\r\n                  {categoryFilter !== 'All Categories' && (\r\n                    <p className=\"text-sm\"><span className=\"font-medium\">Category:</span> {categoryFilter}</p>\r\n                  )}\r\n                  {startDate && (\r\n                    <p className=\"text-sm\"><span className=\"font-medium\">From:</span> {startDate}</p>\r\n                  )}\r\n                  {endDate && (\r\n                    <p className=\"text-sm\"><span className=\"font-medium\">To:</span> {endDate}</p>\r\n                  )}\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <div className=\"text-2xl font-bold\" style={{ color: '#D4AF37' }}>SLanka Jewellery</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"overflow-x-auto border border-gray-200 rounded-lg mb-4\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-yellow-400\">\r\n                    <tr>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">ID</th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">Product Title</th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">Category</th>\r\n                      {userRole === 'admin' && (\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">Branch</th>\r\n                      )}\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">In Stock</th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">Buying Price</th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">Selling Price</th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">Gold Carat</th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">Weight</th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">Date Added</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {filteredItems.map((item) => (\r\n                      <tr key={item.item_id}>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{item.item_id}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{item.product_title}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{item.category_name || item.category}</td>\r\n                        {userRole === 'admin' && (\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">{item.branch_name || `Branch ${item.branch_id}`}</td>\r\n                        )}\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{item.in_stock}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{formatCurrency(item.buying_price)}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{formatCurrency(item.selling_price)}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{item.gold_carat || '-'}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{item.weight ? `${item.weight} g` : '-'}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{formatDate(item.product_added)}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n              <div className=\"mt-6 border-t pt-4\">\r\n                <p className=\"text-sm\"><span className=\"font-medium\">Total Items:</span> {filteredItems.length}</p>\r\n                <p className=\"text-sm\"><span className=\"font-medium\">Total Stock:</span> {filteredItems.reduce((sum, item) => sum + item.in_stock, 0)}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-4 mt-6\">\r\n              <button\r\n                className=\"px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-md flex items-center\"\r\n                onClick={() => {\r\n                  try {\r\n                    // Create a simplified version of the report for PDF generation\r\n                    const reportElement = document.getElementById('jewellery-report-view');\r\n                    if (!reportElement) return;\r\n\r\n                    // Show loading indicator\r\n                    const loadingIndicator = document.createElement('div');\r\n                    loadingIndicator.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[60]';\r\n                    loadingIndicator.innerHTML = `\r\n                      <div class=\"bg-white p-4 rounded-lg shadow-lg flex items-center\">\r\n                        <div class=\"w-8 h-8 border-4 border-yellow-400 border-t-transparent rounded-full animate-spin mr-3\"></div>\r\n                        <p>Generating PDF...</p>\r\n                      </div>\r\n                    `;\r\n                    document.body.appendChild(loadingIndicator);\r\n\r\n                    // Use a timeout to allow the loading indicator to render\r\n                    setTimeout(() => {\r\n                      // Generate PDF using jsPDF directly\r\n                      import('jspdf').then(jsPDFModule => {\r\n                        const jsPDF = jsPDFModule.default;\r\n                        const pdf = new jsPDF('p', 'mm', 'a4');\r\n\r\n                        // Add title\r\n                        pdf.setFontSize(18);\r\n                        pdf.text('Jewellery Stock Report', 14, 22);\r\n\r\n                        // Add filters info\r\n                        pdf.setFontSize(10);\r\n                        const today = new Date().toLocaleDateString();\r\n                        pdf.text(`Generated on: ${today}`, 14, 30);\r\n\r\n                        let line = 35;\r\n                        if (branchFilter !== 'All Branches') {\r\n                          // Make branch name more prominent\r\n                          pdf.setFontSize(12);\r\n                          pdf.setFont('helvetica', 'bold');\r\n                          pdf.text(`Branch: ${branchFilter}`, 14, line);\r\n                          pdf.setFont('helvetica', 'normal');\r\n                          pdf.setFontSize(10);\r\n                          line += 5;\r\n                        }\r\n\r\n                        if (categoryFilter !== 'All Categories') {\r\n                          pdf.text(`Category: ${categoryFilter}`, 14, line);\r\n                          line += 5;\r\n                        }\r\n\r\n                        if (startDate) {\r\n                          pdf.text(`From: ${startDate}`, 14, line);\r\n                          line += 5;\r\n                        }\r\n\r\n                        if (endDate) {\r\n                          pdf.text(`To: ${endDate}`, 14, line);\r\n                          line += 5;\r\n                        }\r\n\r\n                        // Add SLanka Jewellery text\r\n                        pdf.setTextColor(212, 175, 55); // #D4AF37 in RGB\r\n                        pdf.setFontSize(16);\r\n                        pdf.text('SLanka Jewellery', 170, 22, { align: 'right' });\r\n                        pdf.setTextColor(0, 0, 0); // Reset to black\r\n\r\n                        // Create table data\r\n                        const tableColumn = [\r\n                          'ID', 'Product Title', 'Category',\r\n                          'In Stock', 'Buying Price', 'Selling Price', 'Gold Carat', 'Weight', 'Date Added'\r\n                        ];\r\n\r\n                        const tableRows = filteredItems.map(item => {\r\n                          const row = [\r\n                            item.item_id,\r\n                            item.product_title,\r\n                            item.category_name || item.category,\r\n                            item.in_stock,\r\n                            formatCurrency(item.buying_price),\r\n                            formatCurrency(item.selling_price),\r\n                            item.gold_carat || '-',\r\n                            item.weight ? `${item.weight} g` : '-',\r\n                            // Use a more compact date format for PDF\r\n                            (() => {\r\n                              const date = new Date(item.product_added);\r\n                              return date.toLocaleDateString('en-US', {\r\n                                year: 'numeric',\r\n                                month: '2-digit',\r\n                                day: '2-digit',\r\n                              }) + ' ' + date.toLocaleTimeString('en-US', {\r\n                                hour: '2-digit',\r\n                                minute: '2-digit',\r\n                                hour12: true\r\n                              });\r\n                            })()\r\n                          ];\r\n                          return row;\r\n                        });\r\n\r\n                        // Create a simple table manually instead of using autoTable\r\n                        // Set up table parameters\r\n                        const startY = line + 5;\r\n                        const cellPadding = 2;\r\n                        const fontSize = 8;\r\n                        const lineHeight = fontSize * 1.5;\r\n                        const columnWidths = [\r\n                          10, // ID\r\n                          35, // Product Title\r\n                          20, // Category\r\n                          // Branch column removed since it's in the header\r\n                          12, // In Stock\r\n                          25, // Buying Price\r\n                          25, // Selling Price\r\n                          15, // Gold Carat\r\n                          15, // Weight\r\n                          35  // Date Added\r\n                        ];\r\n\r\n                        // Calculate total width and scale if needed\r\n                        const pageWidth = pdf.internal.pageSize.getWidth();\r\n                        const tableWidth = columnWidths.reduce((sum, width) => sum + width, 0);\r\n                        // Use a fixed scale to make columns more compact\r\n                        const scale = Math.min(0.95, (pageWidth - 15) / tableWidth);\r\n\r\n                        // Draw header\r\n                        pdf.setFillColor(255, 204, 0);\r\n                        pdf.setTextColor(0, 0, 0);\r\n                        pdf.setFontSize(fontSize);\r\n\r\n                        let currentX = 8;\r\n                        let currentY = startY;\r\n\r\n                        // Draw header cells\r\n                        tableColumn.forEach((header, index) => {\r\n                          const width = columnWidths[index] * scale;\r\n                          pdf.setFillColor(255, 204, 0);\r\n                          pdf.rect(currentX, currentY, width, lineHeight, 'F');\r\n\r\n                          // Make header text bold\r\n                          pdf.setFont('helvetica', 'bold');\r\n                          pdf.text(header, currentX + cellPadding, currentY + lineHeight - cellPadding);\r\n                          pdf.setFont('helvetica', 'normal');\r\n\r\n                          currentX += width;\r\n                        });\r\n\r\n                        // Draw bottom line for header\r\n                        pdf.setDrawColor(180, 180, 180);\r\n                        pdf.line(8, currentY + lineHeight, 8 + tableWidth * scale, currentY + lineHeight);\r\n\r\n                        currentY += lineHeight;\r\n\r\n                        // Draw rows\r\n                        pdf.setFillColor(255, 255, 255);\r\n\r\n                        // Check if we need a new page\r\n                        const checkAndAddPage = () => {\r\n                          if (currentY > pdf.internal.pageSize.getHeight() - 20) {\r\n                            pdf.addPage();\r\n                            currentY = 20;\r\n                            return true;\r\n                          }\r\n                          return false;\r\n                        };\r\n\r\n                        // Draw rows with alternating background\r\n                        tableRows.forEach((row, rowIndex, allRows) => {\r\n                          checkAndAddPage();\r\n                          currentX = 8;\r\n\r\n                          // Alternating row colors\r\n                          if (rowIndex % 2 === 0) {\r\n                            pdf.setFillColor(245, 245, 245);\r\n                          } else {\r\n                            pdf.setFillColor(255, 255, 255);\r\n                          }\r\n\r\n                          // Draw row background\r\n                          pdf.rect(8, currentY, tableWidth * scale, lineHeight, 'F');\r\n\r\n                          // Draw horizontal grid line (light gray)\r\n                          pdf.setDrawColor(220, 220, 220);\r\n                          pdf.line(8, currentY, 8 + tableWidth * scale, currentY);\r\n\r\n                          // Draw cells\r\n                          row.forEach((cell, cellIndex) => {\r\n                            const width = columnWidths[cellIndex] * scale;\r\n\r\n                            // Use the full text without truncation for important columns\r\n                            let cellText = String(cell);\r\n\r\n                            // Only truncate product title if extremely long\r\n                            const textWidth = pdf.getStringUnitWidth(cellText) * fontSize / pdf.internal.scaleFactor;\r\n                            if (cellIndex === 1 && textWidth > (width - 2 * cellPadding) && cellText.length > 30) {\r\n                              // For product title, allow truncation only if very long\r\n                              const ratio = (width - 2 * cellPadding) / textWidth;\r\n                              const fitLength = Math.floor(cellText.length * ratio) - 2;\r\n                              if (fitLength > 0) {\r\n                                cellText = cellText.substring(0, fitLength) + '..';\r\n                              }\r\n                            }\r\n\r\n                            pdf.text(cellText, currentX + cellPadding, currentY + lineHeight - cellPadding);\r\n                            currentX += width;\r\n                          });\r\n\r\n                          currentY += lineHeight;\r\n\r\n                          // Draw bottom line for the last row\r\n                          if (rowIndex === allRows.length - 1) {\r\n                            pdf.setDrawColor(180, 180, 180);\r\n                            pdf.line(8, currentY, 8 + tableWidth * scale, currentY);\r\n                          }\r\n                        });\r\n\r\n                        // Add summary at the bottom\r\n                        currentY += 10;\r\n                        checkAndAddPage();\r\n                        pdf.setFontSize(10);\r\n                        pdf.text(`Total Items: ${filteredItems.length}`, 8, currentY);\r\n                        currentY += 5;\r\n                        pdf.text(`Total Stock: ${filteredItems.reduce((sum, item) => sum + item.in_stock, 0)}`, 8, currentY);\r\n\r\n                        // Save the PDF\r\n                        pdf.save('jewellery-stock-report.pdf');\r\n\r\n                        // Remove loading indicator\r\n                        document.body.removeChild(loadingIndicator);\r\n                      }).catch(err => {\r\n                        console.error('Error loading jspdf:', err);\r\n                        alert('Failed to generate PDF. Please try again.');\r\n                        document.body.removeChild(loadingIndicator);\r\n                      });\r\n                    }, 100);\r\n                  } catch (err) {\r\n                    console.error('Error generating PDF:', err);\r\n                    alert('An error occurred while generating the PDF.');\r\n                  }\r\n                }}\r\n              >\r\n                <Download size={18} className=\"mr-1\" />\r\n                Download PDF\r\n              </button>\r\n              <button\r\n                className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md\"\r\n                onClick={() => setShowReport(false)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JewelleryStockPage;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2598, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}